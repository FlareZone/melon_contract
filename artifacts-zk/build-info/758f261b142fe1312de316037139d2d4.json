{"id":"758f261b142fe1312de316037139d2d4","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208, uint208) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"../../../interfaces/IERC3156FlashBorrower.sol\";\nimport {IERC3156FlashLender} from \"../../../interfaces/IERC3156FlashLender.sol\";\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n * {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n * overriding {maxFlashLoan} so that it correctly reflects the supply cap.\n */\nabstract contract ERC20FlashMint is ERC20, IERC3156FlashLender {\n    bytes32 private constant RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev The loan token is not valid.\n     */\n    error ERC3156UnsupportedToken(address token);\n\n    /**\n     * @dev The requested loan exceeds the max loan value for `token`.\n     */\n    error ERC3156ExceededMaxLoan(uint256 maxLoan);\n\n    /**\n     * @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer.\n     */\n    error ERC3156InvalidReceiver(address receiver);\n\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     *\n     * NOTE: This function does not consider any form of supply cap, so in case\n     * it's used in a token with a cap like {ERC20Capped}, make sure to override this\n     * function to integrate the cap instead of `type(uint256).max`.\n     */\n    function maxFlashLoan(address token) public view virtual returns (uint256) {\n        return token == address(this) ? type(uint256).max - totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 value) public view virtual returns (uint256) {\n        if (token != address(this)) {\n            revert ERC3156UnsupportedToken(token);\n        }\n        return _flashFee(token, value);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 value) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        value;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * value + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param value The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 value,\n        bytes calldata data\n    ) public virtual returns (bool) {\n        uint256 maxLoan = maxFlashLoan(token);\n        if (value > maxLoan) {\n            revert ERC3156ExceededMaxLoan(maxLoan);\n        }\n        uint256 fee = flashFee(token, value);\n        _mint(address(receiver), value);\n        if (receiver.onFlashLoan(_msgSender(), token, value, fee, data) != RETURN_VALUE) {\n            revert ERC3156InvalidReceiver(address(receiver));\n        }\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), value + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), value + fee);\n        } else {\n            _burn(address(receiver), value);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(Trace208 storage self, uint48 key, uint208 value) internal returns (uint208, uint208) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint208[] storage self, uint48 key, uint208 value) private returns (uint208, uint208) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint208 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/IProposalLogic.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\ninterface  IProposalLogic {\r\n\r\n    function getUserBalance(address) external view returns (uint256);\r\n\r\n    function getUserVotingRights(address userAddress) external view returns (uint256);\r\n    \r\n    function deposit(uint256 amount) external;\r\n\r\n    // Submit a proposal for review\r\n    function submitProposalForReview(uint256 amount) external returns (uint256);\r\n\r\n    // Create a proposal with multiple options\r\n    function createProposalWithOptions(\r\n        string memory proposalDescription,\r\n        string[] memory optionDescriptions,\r\n        uint amount,\r\n        uint256 endtime\r\n    ) external returns (uint256);\r\n\r\n    // Process a user's stake in a proposal\r\n    function processUserStakedProposal(\r\n        address userAddress,\r\n        string memory proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] memory optionDescriptions,\r\n        uint256 stakeIndex,\r\n        uint256 endtime\r\n    ) external returns (uint256);\r\n\r\n    // Withdraw from the contract\r\n    function withdraw(uint256 _amount) external;\r\n\r\n    // Get the available balance that can be withdrawn\r\n    function getAvailableWithdrawBalance(\r\n        address user\r\n    ) external view returns (uint256);\r\n\r\n    // Check the status of a proposal\r\n    function getProposalStatus(\r\n        uint256 _proposalId\r\n    ) external view returns (bool);\r\n\r\n    // Vote on a proposal's option\r\n    function vote(\r\n        uint256 _proposalId,\r\n        uint256 _optionId,\r\n        uint256 _amount\r\n    ) external;\r\n\r\n    // Get the contract's balance\r\n    function getContractBalance() external view returns (uint);\r\n\r\n    // Pause the contract\r\n    function pause() external;\r\n\r\n    // Unpause the contract\r\n    function unpause() external;\r\n\r\n    // Get a user's voting history\r\n    function getUserVotingHistory(\r\n        address _user\r\n    )\r\n        external\r\n        view\r\n        returns (uint256[] memory, uint256[] memory, uint256[] memory);\r\n\r\n    // Get the length of the proposals array\r\n    function proposalsLength() external view returns (uint256);\r\n\r\n    // Get the number of options for a proposal\r\n    function getOptionsCount(\r\n        uint256 proposalId\r\n    ) external view returns (uint256);\r\n\r\n    // Get the vote count for an option in a proposal\r\n    function getOptionVoteCount(\r\n        uint256 proposalId,\r\n        uint256 optionIndex\r\n    ) external view returns (uint256);\r\n\r\n    // Get the ID of the current proposal\r\n    function getCurrentProposalId() external view returns (uint256);\r\n\r\n    // Process a stake release\r\n    function handleStakeRelease(\r\n        address user,\r\n        uint256 stakeIndex,\r\n        bool penalizeStake\r\n    ) external;\r\n\r\n    // Settle rewards\r\n    function settleRewards(\r\n        uint256 proposalId,\r\n        uint256 winningOptionId\r\n    ) external;\r\n\r\n    // Settle funds for the average quality\r\n    function settleFundsForAverageQuality(uint256 _proposalId) external;\r\n\r\n    // Verify compliance and expectations\r\n    function verifyComplianceAndExpectations(\r\n        uint256 _proposalId\r\n    ) external;\r\n\r\n    // Check if the quality compliance is below expectations\r\n    function checkQualityComplianceBelowExpectations(\r\n        uint256 _proposalId\r\n    ) external;\r\n\r\n    // Deactivate a proposal\r\n    function deactivateProposal(uint256 _proposalId) external;\r\n}\r\n"},"contracts/ProposalLogic.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"./IProposalLogic.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\";\r\nimport \"./Counters.sol\";\r\n\r\ncontract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {\r\n    // 类型声明\r\n    // 提案\r\n    struct Proposal {\r\n        address proposer; // 提案发起人\r\n        string description; // 提案描述\r\n        uint256 stakeAmount; // 质押代币数量\r\n        bool active; // 提案是否活跃\r\n        bool isSettled; // 添加属性以跟踪提案是否已结算\r\n        bool isWagered;\r\n        uint256 endTime;\r\n    }\r\n    // 提议选项\r\n    struct Option {\r\n        string description; // 选项描述\r\n        uint256 voteCount; // 投票计数\r\n    }\r\n    // 质押\r\n    struct Stake {\r\n        uint256 amount; // 质押的金额\r\n        uint256 unlockTime; // 资金解锁的时间\r\n        address staker; // 质押者地址\r\n        bool isWagered; //是否对赌\r\n    }\r\n    // 投票记录\r\n    struct VoteRecord {\r\n        uint256 proposalId; // 提案ID\r\n        uint256 optionId; // 用户选择的选项ID\r\n        uint256 amount; // 投票数量\r\n    }\r\n    // 状态变量\r\n    uint256 constant MAX_UINT256 = type(uint256).max;\r\n    address public myToken; // 用于投票的代币地址\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _proposalIds;\r\n    Counters.Counter private _UserStakeIdCounter; // 用于跟踪每次质押的计数器\r\n    address[] public UserStakerAddresses; // 质押者地址数组\r\n    uint256[] public UserSstakeAmounts;\r\n    Proposal[] public proposals; // 提案数组\r\n\r\n    mapping(uint256 => uint256) public votingEndTimes; // 投票结束时间\r\n    mapping(address => uint256) public balances;\r\n    mapping(uint256 => address[]) public proposalVoters;\r\n    mapping(address => VoteRecord[]) public userVotingHistory; // 用户的投票历史记录映射\r\n    mapping(address => Stake[]) public stakesForUser;\r\n    mapping(uint256 => Option[]) public proposalOptions; // 提案ID到选项数组的映射\r\n    mapping(address => mapping(uint256 => bool)) public voters;\r\n    // 用户发起提案时的金额\r\n    mapping(address => uint256) public proposalTokenDeposits;\r\n    // 用户投票的金额\r\n    mapping(address => uint256) public usedVotingRights;\r\n    mapping(address => mapping(uint256 => uint256)) public votingRecords;\r\n    mapping(address => mapping(uint256 => uint256)) public added_proposal;\r\n    mapping(uint256 => address[]) public voterAddressesByProposal;\r\n    mapping(uint256 => uint256[]) public optionIdsByProposal;\r\n    mapping(uint256 => uint256[]) public voteCountsByProposal;\r\n    mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal;\r\n\r\n    //事件\r\n    event Received(address caller, uint amount, string message);\r\n    event Deposited(address indexed user, uint amount);\r\n    event Withdrawn(address indexed user, uint amount);\r\n    event Voted(\r\n        address indexed _address,\r\n        uint256 indexed _proposalId,\r\n        uint256 indexed _optionId,\r\n        uint256 _amount\r\n    );\r\n    event ProposalAndOptionsSubmitted(\r\n        address indexed user,\r\n        uint256 indexed proposalIndex,\r\n        string proposalDescription,\r\n        string[] optionDescriptions,\r\n        uint256 endtime\r\n    );\r\n    event DepositForProposal(\r\n        address indexed staker,\r\n        uint256 amount,\r\n        bool staked,\r\n        uint256 unlockTime,\r\n        uint256 indexed stakeIndex\r\n    );\r\n    event TokensStaked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        bool isForProposal\r\n    );\r\n    event FundsSettledForAverageQuality(\r\n        uint256 indexed proposalId,\r\n        address indexed proposer,\r\n        uint256 amountToReturn\r\n    );\r\n    event WithdrawalDetailed(\r\n        address indexed user,\r\n        uint256 amountWithdrawn,\r\n        uint256 balanceAfterWithdrawal\r\n    );\r\n    event UnlockTimeUpdated(\r\n        address indexed staker,\r\n        uint256 indexed stakeIndex,\r\n        uint256 newUnlockTime\r\n    );\r\n    event FundsPenalizedForNonCompliance(\r\n        uint256 indexed proposalId,\r\n        address indexed proposer,\r\n        uint256 penalty\r\n    );\r\n    event ProposalStatusChanged(uint256 proposalId, bool isActive);\r\n    event ProposalEndTime(uint256 _proposalId, uint256 endTime);\r\n    event ProposalForUser(\r\n        address indexed userAddress,\r\n        uint256 indexed proposalId,\r\n        string proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] optionDescriptions,\r\n        uint256 endtime\r\n    );\r\n    event StakeReleased(\r\n        address indexed user,\r\n        uint256 stakeIndex,\r\n        bool penalized,\r\n        uint256 amountReleased\r\n    );\r\n    event ProposalEnded(uint256 indexed proposalId, bool isActive);\r\n    event ProposalConcluded(uint256 indexed proposalId, bool isActive);\r\n    event RewardDistributed(\r\n        address indexed voter,\r\n        uint256 proposalId,\r\n        uint256 amount,\r\n        bool isWinner\r\n    );\r\n\r\n    // 错误\r\n    // 修饰符\r\n    // 函数\r\n    constructor(address _myToken) Ownable(msg.sender) {\r\n        myToken = _myToken;\r\n    }\r\n\r\n    // 获取用户余额\r\n    function getUserBalance(address userAddress) public view returns (uint256) {\r\n        return balances[userAddress];\r\n    }\r\n\r\n    // 获取用户投票的金额\r\n    function getUserVotingRights(address userAddress) public view returns (uint256) {\r\n        return usedVotingRights[userAddress];\r\n    }\r\n\r\n    // 常规质押代币\r\n    function deposit(uint256 amount) public {\r\n        require(\r\n            IERC20(myToken).transferFrom(msg.sender, address(this), amount),\r\n            \"Transfer failed\"\r\n        );\r\n        balances[msg.sender] = balances[msg.sender] + amount;\r\n        emit Deposited(msg.sender, amount);\r\n    }\r\n\r\n    function submitProposalForReview(uint256 amount) public returns (uint256) {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        require(\r\n            balances[msg.sender] - usedVotingRights[msg.sender] >= amount,\r\n            \"Insufficient balance\"\r\n        );\r\n        uint256 unlockTime = block.timestamp + 7 days; // 假设7天后解锁\r\n\r\n        uint256 User_stakeIndex = _UserStakeIdCounter.current();\r\n        _UserStakeIdCounter.increment(); // 自动增加质押计数器\r\n\r\n        // 根据amount的值设置isWagered\r\n        bool isWagered;\r\n        if (amount > 0) {\r\n            isWagered = true;\r\n            proposalTokenDeposits[msg.sender] += amount;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n\r\n        UserStakerAddresses.push(msg.sender);\r\n        UserSstakeAmounts.push(amount);\r\n        emit DepositForProposal(\r\n            msg.sender,\r\n            amount,\r\n            isWagered,\r\n            unlockTime,\r\n            User_stakeIndex\r\n        );\r\n        return User_stakeIndex; // 返回新创建的质押索引， 用于标记。。。 不等于提案id\r\n    }\r\n\r\n    function createProposalWithOptions(\r\n        string memory proposalDescription,\r\n        string[] memory optionDescriptions,\r\n        uint amount,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256) {\r\n        // 创建提案\r\n        uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        bool isWagered = amount > 0;\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        proposals.push(\r\n            Proposal({\r\n                proposer: msg.sender,\r\n                description: proposalDescription,\r\n                stakeAmount: amount,\r\n                active: true,\r\n                isSettled: false,\r\n                isWagered: isWagered,\r\n                endTime: unlockTime\r\n            })\r\n        );\r\n\r\n        // 为提案添加选项\r\n        for (uint i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(\r\n                Option({description: optionDescriptions[i], voteCount: 0})\r\n            );\r\n        }\r\n        // 触发事件\r\n        emit ProposalAndOptionsSubmitted(\r\n            msg.sender,\r\n            proposalId,\r\n            proposalDescription,\r\n            optionDescriptions,\r\n            unlockTime\r\n        );\r\n\r\n        return proposalId; // 返回新创建的提案ID\r\n    }\r\n\r\n    function processUserStakedProposal(\r\n        address userAddress,\r\n        string memory proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] memory optionDescriptions,\r\n        uint256 stakeIndex,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256) {\r\n        address UserAddress = UserStakerAddresses[stakeIndex];\r\n        uint256 UserAmount = UserSstakeAmounts[stakeIndex];\r\n        require(UserAddress == userAddress, \"the address is not same\");\r\n        require(\r\n            stakeAmount == UserAmount,\r\n            \"Staked amount does not match or insufficient\"\r\n        );\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        bool isWagered;\r\n        if (stakeAmount > 0) {\r\n            isWagered = true;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n        proposals.push(\r\n            Proposal({\r\n                proposer: userAddress,\r\n                description: proposalDescription,\r\n                stakeAmount: stakeAmount,\r\n                active: true,\r\n                isSettled: false,\r\n                isWagered: isWagered,\r\n                endTime: unlockTime\r\n            })\r\n        );\r\n\r\n        uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        for (uint256 i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(\r\n                Option({description: optionDescriptions[i], voteCount: 0})\r\n            );\r\n        }\r\n        emit ProposalForUser(\r\n            userAddress,\r\n            proposalId,\r\n            proposalDescription,\r\n            stakeAmount,\r\n            optionDescriptions,\r\n            unlockTime\r\n        );\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public nonReentrant {\r\n        // 确保用户有足够的余额来提取\r\n        uint256 availableBalance = getAvailableWithdrawBalance(msg.sender);\r\n        require(\r\n            availableBalance >= _amount,\r\n            \"Not enough available balance to withdraw\"\r\n        );\r\n\r\n        // 在余额更新前执行转账\r\n        require(\r\n            IERC20(myToken).transfer(msg.sender, _amount),\r\n            \"Transfer failed\"\r\n        );\r\n\r\n        // 更新余额\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n\r\n        // 触发提款事件\r\n        emit WithdrawalDetailed(msg.sender, _amount, balances[msg.sender]);\r\n    }\r\n\r\n    function getAvailableWithdrawBalance(\r\n        address user\r\n    ) public view returns (uint256) {\r\n        uint256 totalBalance = balances[user];\r\n        uint256 lockedForVoting = usedVotingRights[user];\r\n        uint256 lockedInProposals = proposalTokenDeposits[user];\r\n\r\n        // 计算因提案和投票锁定的代币总量\r\n        uint256 totalLocked = lockedForVoting + lockedInProposals;\r\n        return totalBalance > totalLocked ? totalBalance - totalLocked : 0;\r\n    }\r\n\r\n    function getProposalStatus(uint256 _proposalId) public view returns (bool) {\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        return proposal.active;\r\n    }\r\n\r\n    // 投票\r\n    function vote(\r\n        uint256 _proposalId,\r\n        uint256 _optionId,\r\n        uint256 _amount\r\n    ) public whenNotPaused {\r\n        require(_proposalId < proposals.length, \"The proposal does not exist\");\r\n        require(\r\n            _optionId < proposalOptions[_proposalId].length,\r\n            \"The option does not exist\"\r\n        );\r\n        require(\r\n            block.timestamp < proposals[_proposalId].endTime,\r\n            \"The voting period for this proposal has ended\"\r\n        );\r\n        require(proposals[_proposalId].active, \"The proposal is not active\");\r\n        // 余额减去投票锁定的代币数量和自己发起的提案锁定的代币数量\r\n        uint256 remainingVotingRights = balances[msg.sender] -\r\n            usedVotingRights[msg.sender] -\r\n            proposalTokenDeposits[msg.sender];\r\n        require(remainingVotingRights >= _amount, \"Insufficient voting rights\");\r\n        //  更新用户投票金额\r\n        usedVotingRights[msg.sender] = usedVotingRights[msg.sender] + _amount;\r\n        // 更新被选中提案选项的票数\r\n        // 更新用户对应的提案的投票金额\r\n        proposalOptions[_proposalId][_optionId].voteCount += _amount;\r\n        votingRecords[msg.sender][_proposalId] += _amount;\r\n        // 记录已经投票过\r\n        voters[msg.sender][_proposalId] = true;\r\n        // 记录用户投票历史\r\n        userVotingHistory[msg.sender].push(\r\n            VoteRecord(_proposalId, _optionId, _amount)\r\n        );\r\n        // 记录当前投票者\r\n        proposalVoters[_proposalId].push(msg.sender);\r\n\r\n        // 记录投票者地址、选项ID和投票数\r\n        voterAddressesByProposal[_proposalId].push(msg.sender);\r\n        optionIdsByProposal[_proposalId].push(_optionId);\r\n        voteCountsByProposal[_proposalId].push(_amount);\r\n\r\n        // 记录投票者在提案中的索引\r\n        voterIndexInProposal[msg.sender][_proposalId] =\r\n            voterAddressesByProposal[_proposalId].length -\r\n            1;\r\n\r\n        emit Voted(msg.sender, _proposalId, _optionId, _amount);\r\n    }\r\n\r\n    // Get the balance of the contract itself in MyToken\r\n    function getContractBalance() public view returns (uint) {\r\n        return IERC20(myToken).balanceOf(address(this));\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function getUserVotingHistory(\r\n        address _user\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory proposalIds,\r\n            uint256[] memory optionIds,\r\n            uint256[] memory amounts\r\n        )\r\n    {\r\n        VoteRecord[] storage records = userVotingHistory[_user];\r\n        proposalIds = new uint256[](records.length);\r\n        optionIds = new uint256[](records.length);\r\n        amounts = new uint256[](records.length);\r\n\r\n        for (uint256 i = 0; i < records.length; i++) {\r\n            proposalIds[i] = records[i].proposalId;\r\n            optionIds[i] = records[i].optionId;\r\n            amounts[i] = records[i].amount;\r\n        }\r\n    }\r\n\r\n    function proposalsLength() public view returns (uint256) {\r\n        return proposals.length;\r\n    }\r\n\r\n    function getOptionsCount(uint256 proposalId) public view returns (uint256) {\r\n        return proposalOptions[proposalId].length;\r\n    }\r\n\r\n    function getOptionVoteCount(\r\n        uint256 proposalId,\r\n        uint256 optionIndex\r\n    ) public view returns (uint256) {\r\n        require(proposalId < proposalsLength(), \"Proposal does not exist.\");\r\n        require(\r\n            optionIndex < proposalOptions[proposalId].length,\r\n            \"Option does not exist.\"\r\n        );\r\n        return proposalOptions[proposalId][optionIndex].voteCount;\r\n    }\r\n\r\n    function getCurrentProposalId() public view returns (uint256) {\r\n        uint256 proposalArrayLength = proposals.length;\r\n        uint256 currentCounterValue = _proposalIds.current();\r\n\r\n        if (proposalArrayLength == currentCounterValue) {\r\n            // 如果数组长度和计数器的值相等，返回当前的提案ID\r\n            return currentCounterValue - 1;\r\n        } else {\r\n            // 如果不相等，可以返回一个错误标识或默认值\r\n            return MAX_UINT256; // 例如返回一个最大值表示错误\r\n        }\r\n    }\r\n\r\n    function handleStakeRelease(\r\n        address user,\r\n        uint256 stakeIndex,\r\n        bool penalizeStake\r\n    ) public onlyOwner {\r\n        // 确保索引在范围内\r\n        require(\r\n            stakeIndex < UserSstakeAmounts.length,\r\n            \"Stake index out of bounds\"\r\n        );\r\n        uint256 amountToRelease = UserSstakeAmounts[stakeIndex];\r\n        proposalTokenDeposits[user] -= amountToRelease;\r\n\r\n        // 如果需要罚款，则计算并扣除罚款\r\n        if (penalizeStake) {\r\n            uint256 penaltyAmount = (amountToRelease * 10) / 100; // 计算10%罚款\r\n            amountToRelease -= penaltyAmount; // 减去罚款\r\n            balances[user] -= penaltyAmount; // 从用户余额扣除罚款\r\n        }\r\n        // 清除处理过的质押金额\r\n        UserSstakeAmounts[stakeIndex] = 0;\r\n\r\n        // 触发事件，通知质押已被释放\r\n        emit StakeReleased(user, stakeIndex, penalizeStake, amountToRelease);\r\n    }\r\n\r\n    function settleRewards(\r\n        uint256 proposalId,\r\n        uint256 winningOptionId\r\n    ) public onlyOwner nonReentrant {\r\n        uint totalStake = 0;\r\n        Proposal storage proposal = proposals[proposalId];\r\n        // 计算该提案所有选项质押的总金额\r\n        uint optionCount = getOptionsCount(proposalId);\r\n\r\n        for (uint i = 0; i < optionCount; i++) {\r\n            totalStake += getOptionVoteCount(proposalId, i);\r\n        }\r\n        // 计算抽取5%平台手续费和5%提案发起人奖励后的提案代币数量\r\n        // uint platformFee = (totalStake * 5) / 100;\r\n        // uint proposalPromoterReward = (totalStake * 5) / 100;\r\n        // uint totalFee = platformFee + proposalPromoterReward;\r\n        uint totalStakeExtractFee = (totalStake * 80) / 100;\r\n        uint totalVotesForWinningOption = proposalOptions[proposalId][\r\n            winningOptionId\r\n        ].voteCount;\r\n        uint totalVotesForFailedOption = totalStake -\r\n            totalVotesForWinningOption;\r\n\r\n        require(\r\n            !proposal.active,\r\n            \"Proposal must be inactive to settle rewards.\"\r\n        );\r\n        require(!proposal.isSettled, \"Rewards already settled\");\r\n\r\n        require(totalVotesForWinningOption > 0, \"No votes for winning option\");\r\n        // 假设的奖池总金额和平台收取比例\r\n\r\n        for (\r\n            uint256 i = 0;\r\n            i < voterAddressesByProposal[proposalId].length;\r\n            i++\r\n        ) {\r\n            // 获取投票者地址、选项ID和投票数\r\n            address voter = voterAddressesByProposal[proposalId][i];\r\n            uint256 optionId = optionIdsByProposal[proposalId][i];\r\n            uint256 voteCount = voteCountsByProposal[proposalId][i];\r\n\r\n            require(\r\n                usedVotingRights[voter] >= voteCount,\r\n                \"Not enough locked voting rights\"\r\n            );\r\n\r\n            usedVotingRights[voter] -= voteCount;\r\n\r\n            if (optionId == winningOptionId) {\r\n                // 按照投票人质押的比例分配奖励\r\n                uint256 voterReward = (voteCount * totalStakeExtractFee) /\r\n                    totalVotesForWinningOption;\r\n                // 计算获利部分金额\r\n                voterReward -= voteCount;\r\n                // 计算并分配奖励给赢家\r\n                balances[voter] += voterReward; // 更新赢家余额\r\n                emit RewardDistributed(voter, proposalId, voterReward, true);\r\n            } else {\r\n                uint256 voterPunish = (voteCount * totalStakeExtractFee) /\r\n                    totalVotesForFailedOption;\r\n                // 计算惩罚部分金额\r\n                voterPunish -= voteCount;\r\n                balances[voter] -= voterPunish; // 更新输家余额\r\n                emit RewardDistributed(voter, proposalId, voterPunish, false);\r\n            }\r\n        }\r\n        // 更新提案状态\r\n        proposal.isSettled = true;\r\n    }\r\n\r\n    // 评价一般提案\r\n    function settleFundsForAverageQuality(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 5) / 100; // Calculating 5% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        emit FundsSettledForAverageQuality(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            profit\r\n        );\r\n    }\r\n\r\n    function verifyComplianceAndExpectations(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 10) / 100; // Calculating 10% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        emit FundsSettledForAverageQuality(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            profit\r\n        );\r\n    }\r\n\r\n    function checkQualityComplianceBelowExpectations(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 punishment = (proposal.stakeAmount * 5) / 100; // Calculating 5% punishment\r\n\r\n        balances[proposal.proposer] -= punishment; // Updating balance without actual transfer\r\n\r\n        emit FundsPenalizedForNonCompliance(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            punishment\r\n        );\r\n    }\r\n\r\n    function deactivateProposal(uint256 _proposalId) public {\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        if (block.timestamp > proposal.endTime || proposal.active) {\r\n            proposal.active = false;\r\n            emit ProposalStatusChanged(_proposalId, false);\r\n        }\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"24","start":6457,"end":6481},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/ProposalLogic.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"34","start":11271,"end":11316},"type":"Warning"}],"version":"0.8.24","long_version":"0.8.24+commit.e11b9ed9.Windows.msvc","zk_version":"1.4.0","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2285],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2286,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2285],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[8256],"Context":[2285],"ECDSA":[3469],"EIP712":[3696],"IERC5805":[872],"Nonces":[2353],"SafeCast":[6579],"Time":[8531],"Votes":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":873,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2286,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2354,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3697,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":8257,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":6580,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3470,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":8532,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3696,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2353,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":777,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[777,872,230,887,2353,3696,861,2285],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":8256,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"1981:20:2"},"referencedDeclaration":7218,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":777,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":777,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":777,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"2231:20:2"},"referencedDeclaration":7218,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":777,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"2288:20:2"},"referencedDeclaration":7218,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[880],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8531_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":777,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[886],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8531_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":777,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[181],"body":{"id":333,"nodeType":"Block","src":"3475:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":327,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3492:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":329,"indexExpression":{"id":328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3513:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7443,"src":"3492:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":326,"id":332,"nodeType":"Return","src":"3485:45:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"3428:7:2","nodeType":"VariableDeclaration","scope":334,"src":"3420:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3466:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:2"},"scope":777,"src":"3402:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":369,"nodeType":"Block","src":"4018:268:2","statements":[{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:2","nodeType":"VariableDeclaration","scope":369,"src":"4028:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":344,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":348,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4075:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":350,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4088:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"4071:115:2","trueBody":{"id":357,"nodeType":"Block","src":"4106:80:2","statements":[{"errorCall":{"arguments":[{"id":353,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4147:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":354,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4158:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4127:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"4120:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":365,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4268:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"4250:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"4250:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":359,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4202:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":361,"indexExpression":{"id":360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4223:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"4202:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":343,"id":368,"nodeType":"Return","src":"4195:84:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3543:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:2","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"3952:7:2","nodeType":"VariableDeclaration","scope":370,"src":"3944:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:2","nodeType":"VariableDeclaration","scope":370,"src":"3961:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4009:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:2"},"scope":777,"src":"3922:364:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":401,"nodeType":"Block","src":"5007:256:2","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:2","nodeType":"VariableDeclaration","scope":401,"src":"5017:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":378,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":382,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5043:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5064:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":384,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5077:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"nodeType":"IfStatement","src":"5060:115:2","trueBody":{"id":391,"nodeType":"Block","src":"5095:80:2","statements":[{"errorCall":{"arguments":[{"id":387,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5136:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":388,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5147:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":386,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5116:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"5109:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":397,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"5227:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"5227:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":393,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5191:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"5191:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":377,"id":400,"nodeType":"Return","src":"5184:72:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"4292:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:2","nodeType":"VariableDeclaration","scope":402,"src":"4950:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"4998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:2"},"scope":777,"src":"4922:341:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":412,"nodeType":"Block","src":"5407:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":408,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5424:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7443,"src":"5424:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":407,"id":411,"nodeType":"Return","src":"5417:33:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"5269:66:2","text":" @dev Returns the current total supply of votes."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:2","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5364:2:2"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"5398:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:2"},"scope":777,"src":"5340:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":425,"nodeType":"Block","src":"5613:43:2","statements":[{"expression":{"baseExpression":{"id":421,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5630:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":423,"indexExpression":{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"5623:26:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5463:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"5566:7:2","nodeType":"VariableDeclaration","scope":426,"src":"5558:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"5604:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:2"},"scope":777,"src":"5539:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":442,"nodeType":"Block","src":"5790:86:2","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"5808:7:2","nodeType":"VariableDeclaration","scope":442,"src":"5800:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"5818:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:2"},{"expression":{"arguments":[{"id":438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5850:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5859:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":437,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5840:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5840:29:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5662:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":443,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:2","nodeType":"VariableDeclaration","scope":443,"src":"5756:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"5790:0:2"},"scope":777,"src":"5738:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":499,"nodeType":"Block","src":"6127:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":461,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6159:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"6137:91:2","trueBody":{"id":467,"nodeType":"Block","src":"6167:61:2","statements":[{"errorCall":{"arguments":[{"id":464,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6210:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6188:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"RevertStatement","src":"6181:36:2"}]}},{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"signer","nameLocation":"6245:6:2","nodeType":"VariableDeclaration","scope":499,"src":"6237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":477,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6319:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":478,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6340:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6351:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":480,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6358:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":473,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"6281:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6381:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6396:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6411:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":471,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6254:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3469_$","typeString":"type(library ECDSA)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"6254:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:2"},{"expression":{"arguments":[{"id":490,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6449:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6457:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"6432:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"6432:31:2"},{"expression":{"arguments":[{"id":495,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6483:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6491:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6473:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"6473:28:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"5882:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:2","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:2","nodeType":"VariableDeclaration","scope":500,"src":"5986:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:2","nodeType":"VariableDeclaration","scope":500,"src":"6013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:2","nodeType":"VariableDeclaration","scope":500,"src":"6036:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"v","nameLocation":"6066:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6060:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":451,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"r","nameLocation":"6085:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6077:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"s","nameLocation":"6104:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6096:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"6127:0:2"},"scope":777,"src":"5954:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":534,"nodeType":"Block","src":"6758:240:2","statements":[{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:2","nodeType":"VariableDeclaration","scope":534,"src":"6768:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"arguments":[{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":510,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6790:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6818:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":516,"indexExpression":{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6829:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6840:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"6818:31:2"},{"eventCall":{"arguments":[{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6881:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6890:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6865:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"EmitStatement","src":"6860:53:2"},{"expression":{"arguments":[{"id":527,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6942:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6955:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6982:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":526,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6923:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"6923:68:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"6514:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"account","nameLocation":"6713:7:2","nodeType":"VariableDeclaration","scope":535,"src":"6705:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:2","nodeType":"VariableDeclaration","scope":535,"src":"6722:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"6758:0:2"},"scope":777,"src":"6686:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"7321:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7335:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:2","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"7331:107:2","trueBody":{"id":560,"nodeType":"Block","src":"7355:83:2","statements":[{"expression":{"arguments":[{"id":552,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7375:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":553,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7394:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7419:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"7400:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5019,"src":"7400:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":551,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7369:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7218_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":559,"nodeType":"ExpressionStatement","src":"7369:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7451:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:2","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"nodeType":"IfStatement","src":"7447:110:2","trueBody":{"id":577,"nodeType":"Block","src":"7469:88:2","statements":[{"expression":{"arguments":[{"id":569,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7489:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":570,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7508:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7538:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"7519:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5019,"src":"7519:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":568,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7483:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7218_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":576,"nodeType":"ExpressionStatement","src":"7483:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":581,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7595:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":580,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7585:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7602:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7566:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"7566:58:2"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"7004:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"from","nameLocation":"7270:4:2","nodeType":"VariableDeclaration","scope":590,"src":"7262:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"to","nameLocation":"7284:2:2","nodeType":"VariableDeclaration","scope":590,"src":"7276:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"7296:6:2","nodeType":"VariableDeclaration","scope":590,"src":"7288:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"7321:0:2"},"scope":777,"src":"7232:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"7795:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7809:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7817:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7809:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7823:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7832:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7823:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7809:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"IfStatement","src":"7805:686:2","trueBody":{"id":665,"nodeType":"Block","src":"7835:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7853:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7869:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7861:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7861:7:2","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7861:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7853:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"7849:315:2","trueBody":{"id":634,"nodeType":"Block","src":"7873:291:2","statements":[{"assignments":[614,616],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"oldValue","nameLocation":"7900:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7892:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"newValue","nameLocation":"7918:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7910:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7910:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[{"baseExpression":{"id":618,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7957:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":620,"indexExpression":{"id":619,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7978:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":621,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8005:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"8036:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8045:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5019,"src":"8036:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":617,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7930:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7218_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7891:189:2"},{"eventCall":{"arguments":[{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8124:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"8130:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":631,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"8140:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8103:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"EmitStatement","src":"8098:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8181:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:2","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":664,"nodeType":"IfStatement","src":"8177:304:2","trueBody":{"id":663,"nodeType":"Block","src":"8199:282:2","statements":[{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"oldValue","nameLocation":"8226:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"newValue","nameLocation":"8244:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[{"baseExpression":{"id":647,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8283:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8304:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":650,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"8329:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8374:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"8355:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8364:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5019,"src":"8355:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8355:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":646,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8256:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7218_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8217:182:2"},{"eventCall":{"arguments":[{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8443:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8447:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8457:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8422:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"EmitStatement","src":"8417:49:2"}]}}]}}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"7637:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:2","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"from","nameLocation":"7753:4:2","nodeType":"VariableDeclaration","scope":668,"src":"7745:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"7767:2:2","nodeType":"VariableDeclaration","scope":668,"src":"7759:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"7779:6:2","nodeType":"VariableDeclaration","scope":668,"src":"7771:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"7795:0:2"},"scope":777,"src":"7717:780:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":685,"nodeType":"Block","src":"8653:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":678,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8688:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8709:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8688:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8718:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7506,"src":"8688:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"8670:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5635,"src":"8670:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8670:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":675,"id":684,"nodeType":"Return","src":"8663:64:2"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8503:64:2","text":" @dev Get number of checkpoints for `account`."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8581:15:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"8605:7:2","nodeType":"VariableDeclaration","scope":686,"src":"8597:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8596:17:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"8645:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":673,"name":"uint32","nodeType":"ElementaryTypeName","src":"8645:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8644:8:2"},"scope":777,"src":"8572:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"8949:61:2","statements":[{"expression":{"arguments":[{"id":701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8999:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":697,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8966:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7218_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8966:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8996:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"8966:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7223_memory_ptr_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":696,"id":703,"nodeType":"Return","src":"8959:44:2"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"8740:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8820:12:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"account","nameLocation":"8850:7:2","nodeType":"VariableDeclaration","scope":705,"src":"8842:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"8842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"pos","nameLocation":"8874:3:2","nodeType":"VariableDeclaration","scope":705,"src":"8867:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":690,"name":"uint32","nodeType":"ElementaryTypeName","src":"8867:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8832:51:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"8915:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":694,"nodeType":"UserDefinedTypeName","pathNode":{"id":693,"name":"Checkpoints.Checkpoint208","nameLocations":["8915:11:2","8927:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"8915:25:2"},"referencedDeclaration":7223,"src":"8915:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8914:34:2"},"scope":777,"src":"8811:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"9201:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":729,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9229:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":732,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9241:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9247:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7443,"src":"9241:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7218_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":735,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9257:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":731,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9238:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9238:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":727,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9218:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9224:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":7246,"src":"9218:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7218_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$7218_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":726,"id":738,"nodeType":"Return","src":"9211:53:2"}]},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9025:5:2","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"store","nameLocation":"9069:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9040:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"Checkpoints.Trace208","nameLocations":["9040:11:2","9052:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"9040:20:2"},"referencedDeclaration":7218,"src":"9040:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"op","nameLocation":"9134:2:2","nodeType":"VariableDeclaration","scope":740,"src":"9084:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":717,"nodeType":"FunctionTypeName","parameterTypes":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":709,"name":"uint208","nodeType":"ElementaryTypeName","src":"9093:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9102:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":711,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9092:18:2"},"returnParameterTypes":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9125:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":714,"name":"uint208","nodeType":"ElementaryTypeName","src":"9125:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9124:9:2"},"src":"9084:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"delta","nameLocation":"9154:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9146:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":719,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9030:135:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9183:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":722,"name":"uint208","nodeType":"ElementaryTypeName","src":"9183:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9192:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":724,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9182:18:2"},"scope":777,"src":"9016:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":753,"nodeType":"Block","src":"9344:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"9361:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9365:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9361:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":748,"id":752,"nodeType":"Return","src":"9354:12:2"}]},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9286:4:2","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"a","nameLocation":"9299:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9291:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":741,"name":"uint208","nodeType":"ElementaryTypeName","src":"9291:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"b","nameLocation":"9310:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9302:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":743,"name":"uint208","nodeType":"ElementaryTypeName","src":"9302:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9290:22:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"9335:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":746,"name":"uint208","nodeType":"ElementaryTypeName","src":"9335:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9334:9:2"},"scope":777,"src":"9277:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":767,"nodeType":"Block","src":"9451:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9468:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9472:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9468:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":762,"id":766,"nodeType":"Return","src":"9461:12:2"}]},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9388:9:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"a","nameLocation":"9406:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9398:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":755,"name":"uint208","nodeType":"ElementaryTypeName","src":"9398:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"b","nameLocation":"9417:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9409:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":757,"name":"uint208","nodeType":"ElementaryTypeName","src":"9409:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9397:22:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"9442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":760,"name":"uint208","nodeType":"ElementaryTypeName","src":"9442:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9441:9:2"},"scope":777,"src":"9379:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"9486:72:2","text":" @dev Must return the voting units held by an account."},"id":776,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9572:15:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9588:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9587:9:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9628:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:9:2"},"scope":777,"src":"9563:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":778,"src":"1892:7747:2","usedErrors":[155,281,288,2295,2553,2555,3132,3137,3142,4834,6692],"usedEvents":[164,173,841]}],"src":"109:9531:2"}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[797]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"146:123:3","text":" @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":797,"linearizedBaseContracts":[797],"name":"IERC3156FlashBorrower","nameLocation":"280:21:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"308:405:3","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"727:11:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"initiator","nameLocation":"756:9:3","nodeType":"VariableDeclaration","scope":796,"src":"748:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"token","nameLocation":"783:5:3","nodeType":"VariableDeclaration","scope":796,"src":"775:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"amount","nameLocation":"806:6:3","nodeType":"VariableDeclaration","scope":796,"src":"798:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"fee","nameLocation":"830:3:3","nodeType":"VariableDeclaration","scope":796,"src":"822:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"data","nameLocation":"858:4:3","nodeType":"VariableDeclaration","scope":796,"src":"843:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":790,"name":"bytes","nodeType":"ElementaryTypeName","src":"843:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"738:130:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"887:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"887:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"886:9:3"},"scope":797,"src":"718:178:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":798,"src":"270:628:3","usedErrors":[],"usedEvents":[]}],"src":"120:779:3"}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836]},"id":837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":798,"src":"144:66:4","symbolAliases":[{"foreign":{"id":800,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"152:21:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"212:121:4","text":" @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":836,"linearizedBaseContracts":[836],"name":"IERC3156FlashLender","nameLocation":"344:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"370:168:4","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":810,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"552:12:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"token","nameLocation":"573:5:4","nodeType":"VariableDeclaration","scope":810,"src":"565:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:15:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"603:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:9:4"},"scope":836,"src":"543:69:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"618:249:4","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":820,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"881:8:4","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"token","nameLocation":"898:5:4","nodeType":"VariableDeclaration","scope":820,"src":"890:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"amount","nameLocation":"913:6:4","nodeType":"VariableDeclaration","scope":820,"src":"905:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"889:31:4"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"944:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"943:9:4"},"scope":836,"src":"872:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"959:320:4","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":835,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1293:9:4","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"receiver","nameLocation":"1334:8:4","nodeType":"VariableDeclaration","scope":835,"src":"1312:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"IERC3156FlashBorrower","nameLocations":["1312:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"1312:21:4"},"referencedDeclaration":797,"src":"1312:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"token","nameLocation":"1360:5:4","nodeType":"VariableDeclaration","scope":835,"src":"1352:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"amount","nameLocation":"1383:6:4","nodeType":"VariableDeclaration","scope":835,"src":"1375:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"data","nameLocation":"1414:4:4","nodeType":"VariableDeclaration","scope":835,"src":"1399:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":829,"name":"bytes","nodeType":"ElementaryTypeName","src":"1399:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:122:4"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1443:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"1443:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1442:6:4"},"scope":836,"src":"1284:165:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":837,"src":"334:1117:4","usedErrors":[],"usedEvents":[]}],"src":"118:1334:4"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[861]},"id":862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":861,"linearizedBaseContracts":[861],"name":"IERC5267","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"158:84:5","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":841,"name":"EIP712DomainChanged","nameLocation":"253:19:5","nodeType":"EventDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"272:2:5"},"src":"247:28:5"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"281:140:5","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:5","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"fields","nameLocation":"517:6:5","nodeType":"VariableDeclaration","scope":860,"src":"510:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":844,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"name","nameLocation":"551:4:5","nodeType":"VariableDeclaration","scope":860,"src":"537:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"version","nameLocation":"583:7:5","nodeType":"VariableDeclaration","scope":860,"src":"569:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":848,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"chainId","nameLocation":"612:7:5","nodeType":"VariableDeclaration","scope":860,"src":"604:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:5","nodeType":"VariableDeclaration","scope":860,"src":"633:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"salt","nameLocation":"680:4:5","nodeType":"VariableDeclaration","scope":860,"src":"672:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"extensions","nameLocation":"715:10:5","nodeType":"VariableDeclaration","scope":860,"src":"698:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ArrayTypeName","src":"698:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:5"},"scope":861,"src":"426:310:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":862,"src":"133:605:5","usedErrors":[],"usedEvents":[841]}],"src":"107:632:5"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[872],"IERC6372":[887],"IVotes":[230]},"id":873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":863,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":231,"src":"133:54:6","symbolAliases":[{"foreign":{"id":864,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":888,"src":"188:40:6","symbolAliases":[{"foreign":{"id":866,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"196:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":868,"name":"IERC6372","nameLocations":["252:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":887,"src":"252:8:6"},"id":869,"nodeType":"InheritanceSpecifier","src":"252:8:6"},{"baseName":{"id":870,"name":"IVotes","nameLocations":["262:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:6"},"id":871,"nodeType":"InheritanceSpecifier","src":"262:6:6"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":872,"linearizedBaseContracts":[872,230,887],"name":"IERC5805","nameLocation":"240:8:6","nodeType":"ContractDefinition","nodes":[],"scope":873,"src":"230:41:6","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:6"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[887]},"id":888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":887,"linearizedBaseContracts":[887],"name":"IERC6372","nameLocation":"143:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"158:133:7","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":880,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:7","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"310:2:7"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"336:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":877,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:7"},"scope":887,"src":"296:48:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"350:48:7","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:7","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"475:2:7"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"501:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:7"},"scope":887,"src":"456:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":888,"src":"133:385:7","usedErrors":[],"usedEvents":[]}],"src":"107:412:7"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1024],"IERC20Errors":[929],"IERC721Errors":[977]},"id":1025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":889,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"138:139:8","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":929,"linearizedBaseContracts":[929],"name":"IERC20Errors","nameLocation":"288:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"307:309:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":899,"name":"ERC20InsufficientBalance","nameLocation":"627:24:8","nodeType":"ErrorDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"sender","nameLocation":"660:6:8","nodeType":"VariableDeclaration","scope":899,"src":"652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"balance","nameLocation":"676:7:8","nodeType":"VariableDeclaration","scope":899,"src":"668:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"needed","nameLocation":"693:6:8","nodeType":"VariableDeclaration","scope":899,"src":"685:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:8"},"src":"621:80:8"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"707:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":904,"name":"ERC20InvalidSender","nameLocation":"870:18:8","nodeType":"ErrorDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"sender","nameLocation":"897:6:8","nodeType":"VariableDeclaration","scope":904,"src":"889:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:8"},"src":"864:41:8"},{"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"911:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":909,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:8","nodeType":"ErrorDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:8","nodeType":"VariableDeclaration","scope":909,"src":"1102:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:8"},"src":"1075:45:8"},{"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"1126:345:8","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":918,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:8","nodeType":"ErrorDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"spender","nameLocation":"1517:7:8","nodeType":"VariableDeclaration","scope":918,"src":"1509:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:8","nodeType":"VariableDeclaration","scope":918,"src":"1526:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"needed","nameLocation":"1553:6:8","nodeType":"VariableDeclaration","scope":918,"src":"1545:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:8"},"src":"1476:85:8"},{"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"1567:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":923,"name":"ERC20InvalidApprover","nameLocation":"1752:20:8","nodeType":"ErrorDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"approver","nameLocation":"1781:8:8","nodeType":"VariableDeclaration","scope":923,"src":"1773:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:8"},"src":"1746:45:8"},{"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"1797:195:8","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":928,"name":"ERC20InvalidSpender","nameLocation":"2003:19:8","nodeType":"ErrorDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"spender","nameLocation":"2031:7:8","nodeType":"VariableDeclaration","scope":928,"src":"2023:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:8"},"src":"1997:43:8"}],"scope":1025,"src":"278:1764:8","usedErrors":[899,904,909,918,923,928],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"2044:141:8","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":977,"linearizedBaseContracts":[977],"name":"IERC721Errors","nameLocation":"2196:13:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2216:219:8","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":935,"name":"ERC721InvalidOwner","nameLocation":"2446:18:8","nodeType":"ErrorDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"2473:5:8","nodeType":"VariableDeclaration","scope":935,"src":"2465:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:8"},"src":"2440:40:8"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2486:132:8","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":940,"name":"ERC721NonexistentToken","nameLocation":"2629:22:8","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:8","nodeType":"VariableDeclaration","scope":940,"src":"2652:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:8"},"src":"2623:46:8"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"2675:289:8","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":949,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:8","nodeType":"ErrorDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"sender","nameLocation":"3004:6:8","nodeType":"VariableDeclaration","scope":949,"src":"2996:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:8","nodeType":"VariableDeclaration","scope":949,"src":"3012:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"owner","nameLocation":"3037:5:8","nodeType":"VariableDeclaration","scope":949,"src":"3029:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:8"},"src":"2969:75:8"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3050:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":954,"name":"ERC721InvalidSender","nameLocation":"3213:19:8","nodeType":"ErrorDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"sender","nameLocation":"3241:6:8","nodeType":"VariableDeclaration","scope":954,"src":"3233:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:8"},"src":"3207:42:8"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"3255:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":959,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:8","nodeType":"ErrorDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:8","nodeType":"VariableDeclaration","scope":959,"src":"3447:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:8"},"src":"3419:46:8"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"3471:247:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":966,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:8","nodeType":"ErrorDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"operator","nameLocation":"3764:8:8","nodeType":"VariableDeclaration","scope":966,"src":"3756:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:8","nodeType":"VariableDeclaration","scope":966,"src":"3774:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:8"},"src":"3723:68:8"},{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"3797:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":971,"name":"ERC721InvalidApprover","nameLocation":"3982:21:8","nodeType":"ErrorDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"approver","nameLocation":"4012:8:8","nodeType":"VariableDeclaration","scope":971,"src":"4004:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:8"},"src":"3976:46:8"},{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"4028:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":976,"name":"ERC721InvalidOperator","nameLocation":"4236:21:8","nodeType":"ErrorDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"4266:8:8","nodeType":"VariableDeclaration","scope":976,"src":"4258:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:8"},"src":"4230:46:8"}],"scope":1025,"src":"2186:2092:8","usedErrors":[935,940,949,954,959,966,971,976],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"4280:143:8","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1024,"linearizedBaseContracts":[1024],"name":"IERC1155Errors","nameLocation":"4434:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"4455:361:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":989,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:8","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"sender","nameLocation":"4862:6:8","nodeType":"VariableDeclaration","scope":989,"src":"4854:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"balance","nameLocation":"4878:7:8","nodeType":"VariableDeclaration","scope":989,"src":"4870:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"needed","nameLocation":"4895:6:8","nodeType":"VariableDeclaration","scope":989,"src":"4887:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:8","nodeType":"VariableDeclaration","scope":989,"src":"4903:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:8"},"src":"4821:99:8"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"4926:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":994,"name":"ERC1155InvalidSender","nameLocation":"5089:20:8","nodeType":"ErrorDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"sender","nameLocation":"5118:6:8","nodeType":"VariableDeclaration","scope":994,"src":"5110:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:8"},"src":"5083:43:8"},{"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"5132:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":999,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:8","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:8","nodeType":"VariableDeclaration","scope":999,"src":"5325:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:8"},"src":"5296:47:8"},{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"5349:256:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1006,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:8","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"operator","nameLocation":"5653:8:8","nodeType":"VariableDeclaration","scope":1006,"src":"5645:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"owner","nameLocation":"5671:5:8","nodeType":"VariableDeclaration","scope":1006,"src":"5663:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:8"},"src":"5610:68:8"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"5684:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1011,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:8","nodeType":"ErrorDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"approver","nameLocation":"5900:8:8","nodeType":"VariableDeclaration","scope":1011,"src":"5892:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:8"},"src":"5863:47:8"},{"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"5916:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1016,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:8","nodeType":"ErrorDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"operator","nameLocation":"6155:8:8","nodeType":"VariableDeclaration","scope":1016,"src":"6147:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:8"},"src":"6118:47:8"},{"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"6171:280:8","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1023,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:8","nodeType":"VariableDeclaration","scope":1023,"src":"6488:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:8","nodeType":"VariableDeclaration","scope":1023,"src":"6507:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:8"},"src":"6456:73:8"}],"scope":1025,"src":"4424:2107:8","usedErrors":[989,994,999,1006,1011,1016,1023],"usedEvents":[]}],"src":"112:6420:8"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2285],"ERC20":[1539],"IERC20":[1617],"IERC20Errors":[929],"IERC20Metadata":[2219]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1026,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1618,"src":"131:36:9","symbolAliases":[{"foreign":{"id":1027,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"139:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":2220,"src":"168:63:9","symbolAliases":[{"foreign":{"id":1029,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"176:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":2286,"src":"232:48:9","symbolAliases":[{"foreign":{"id":1031,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"240:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1025,"src":"281:65:9","symbolAliases":[{"foreign":{"id":1033,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"289:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1036,"name":"Context","nameLocations":["1428:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"1428:7:9"},"id":1037,"nodeType":"InheritanceSpecifier","src":"1428:7:9"},{"baseName":{"id":1038,"name":"IERC20","nameLocations":["1437:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1437:6:9"},"id":1039,"nodeType":"InheritanceSpecifier","src":"1437:6:9"},{"baseName":{"id":1040,"name":"IERC20Metadata","nameLocations":["1445:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"1445:14:9"},"id":1041,"nodeType":"InheritanceSpecifier","src":"1445:14:9"},{"baseName":{"id":1042,"name":"IERC20Errors","nameLocations":["1461:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":929,"src":"1461:12:9"},"id":1043,"nodeType":"InheritanceSpecifier","src":"1461:12:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"348:1052:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1539,"linearizedBaseContracts":[1539,929,2219,1617,2285],"name":"ERC20","nameLocation":"1419:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1047,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:9","nodeType":"VariableDeclaration","scope":1539,"src":"1480:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1046,"keyName":"account","keyNameLocation":"1496:7:9","keyType":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1053,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:9","nodeType":"VariableDeclaration","scope":1539,"src":"1540:83:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1052,"keyName":"account","keyNameLocation":"1556:7:9","keyType":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1051,"keyName":"spender","keyNameLocation":"1583:7:9","keyType":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1055,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:9","nodeType":"VariableDeclaration","scope":1539,"src":"1630:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1057,"mutability":"mutable","name":"_name","nameLocation":"1680:5:9","nodeType":"VariableDeclaration","scope":1539,"src":"1665:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1056,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1059,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:9","nodeType":"VariableDeclaration","scope":1539,"src":"1691:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1058,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1075,"nodeType":"Block","src":"1952:57:9","statements":[{"expression":{"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1067,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1962:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1068,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1970:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1070,"nodeType":"ExpressionStatement","src":"1962:13:9"},{"expression":{"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1071,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1985:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1072,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1995:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1074,"nodeType":"ExpressionStatement","src":"1985:17:9"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"1720:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1076,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"name_","nameLocation":"1922:5:9","nodeType":"VariableDeclaration","scope":1076,"src":"1908:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:9","nodeType":"VariableDeclaration","scope":1076,"src":"1929:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1063,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:9"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"1952:0:9"},"scope":1539,"src":"1896:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2206],"body":{"id":1084,"nodeType":"Block","src":"2134:29:9","statements":[{"expression":{"id":1082,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2151:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1081,"id":1083,"nodeType":"Return","src":"2144:12:9"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"2015:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:9","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"2087:2:9"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"2119:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:9"},"scope":1539,"src":"2074:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2212],"body":{"id":1093,"nodeType":"Block","src":"2338:31:9","statements":[{"expression":{"id":1091,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2355:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1090,"id":1092,"nodeType":"Return","src":"2348:14:9"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2169:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:9","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"2291:2:9"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"2323:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:9"},"scope":1539,"src":"2276:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2218],"body":{"id":1102,"nodeType":"Block","src":"3058:26:9","statements":[{"expression":{"hexValue":"3138","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1099,"id":1101,"nodeType":"Return","src":"3068:9:9"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"2375:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:9","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"3019:2:9"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"3051:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1097,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:9"},"scope":1539,"src":"3002:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1566],"body":{"id":1111,"nodeType":"Block","src":"3205:36:9","statements":[{"expression":{"id":1109,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3222:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1108,"id":1110,"nodeType":"Return","src":"3215:19:9"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3090:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:9","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"3164:2:9"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"3196:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:9"},"scope":1539,"src":"3144:97:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1574],"body":{"id":1124,"nodeType":"Block","src":"3373:42:9","statements":[{"expression":{"baseExpression":{"id":1120,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"3390:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1122,"indexExpression":{"id":1121,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"3400:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1123,"nodeType":"Return","src":"3383:25:9"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"3247:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:9","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"account","nameLocation":"3326:7:9","nodeType":"VariableDeclaration","scope":1125,"src":"3318:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:9"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"3364:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:9"},"scope":1539,"src":"3299:116:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1584],"body":{"id":1148,"nodeType":"Block","src":"3685:103:9","statements":[{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"owner","nameLocation":"3703:5:9","nodeType":"VariableDeclaration","scope":1148,"src":"3695:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1139,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1137,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3711:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:9"},{"expression":{"arguments":[{"id":1141,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3743:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3750:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3754:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1140,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"3733:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"3733:27:9"},{"expression":{"hexValue":"74727565","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1134,"id":1147,"nodeType":"Return","src":"3770:11:9"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"3421:184:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:9","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"to","nameLocation":"3636:2:9","nodeType":"VariableDeclaration","scope":1149,"src":"3628:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"value","nameLocation":"3648:5:9","nodeType":"VariableDeclaration","scope":1149,"src":"3640:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"3679:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:9"},"scope":1539,"src":"3610:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1594],"body":{"id":1165,"nodeType":"Block","src":"3935:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1159,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3952:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1161,"indexExpression":{"id":1160,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3964:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1163,"indexExpression":{"id":1162,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"3971:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1158,"id":1164,"nodeType":"Return","src":"3945:34:9"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"3794:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"3873:5:9","nodeType":"VariableDeclaration","scope":1166,"src":"3865:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"spender","nameLocation":"3888:7:9","nodeType":"VariableDeclaration","scope":1166,"src":"3880:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1166,"src":"3926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:9"},"scope":1539,"src":"3846:140:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1604],"body":{"id":1189,"nodeType":"Block","src":"4372:107:9","statements":[{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"4390:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"4382:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1178,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"4398:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:9"},{"expression":{"arguments":[{"id":1182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4429:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4436:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"4445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1430,"src":"4420:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"4420:31:9"},{"expression":{"hexValue":"74727565","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1175,"id":1188,"nodeType":"Return","src":"4461:11:9"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"3992:296:9","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:9","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"spender","nameLocation":"4318:7:9","nodeType":"VariableDeclaration","scope":1190,"src":"4310:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"value","nameLocation":"4335:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"4327:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:9"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"4366:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:9"},"scope":1539,"src":"4293:186:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1616],"body":{"id":1221,"nodeType":"Block","src":"5132:151:9","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"5150:7:9","nodeType":"VariableDeclaration","scope":1221,"src":"5142:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1204,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"5160:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:9"},{"expression":{"arguments":[{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"5198:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5204:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5213:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"5182:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"5182:37:9"},{"expression":{"arguments":[{"id":1214,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"5239:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5245:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5249:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1213,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5229:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"5229:26:9"},{"expression":{"hexValue":"74727565","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1201,"id":1220,"nodeType":"Return","src":"5265:11:9"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"4485:549:9","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:9","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"from","nameLocation":"5069:4:9","nodeType":"VariableDeclaration","scope":1222,"src":"5061:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"to","nameLocation":"5083:2:9","nodeType":"VariableDeclaration","scope":1222,"src":"5075:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"5095:5:9","nodeType":"VariableDeclaration","scope":1222,"src":"5087:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:9"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"5126:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:9"},"scope":1539,"src":"5039:244:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1268,"nodeType":"Block","src":"5725:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5739:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:9","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"IfStatement","src":"5735:86:9","trueBody":{"id":1245,"nodeType":"Block","src":"5759:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:9","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1238,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5780:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"RevertStatement","src":"5773:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5834:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:9","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"IfStatement","src":"5830:86:9","trueBody":{"id":1260,"nodeType":"Block","src":"5852:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:9","typeDescriptions":{}}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1253,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5873:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"RevertStatement","src":"5866:39:9"}]}},{"expression":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5933:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5939:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5943:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"5925:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"5925:24:9"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"5289:362:9","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"from","nameLocation":"5683:4:9","nodeType":"VariableDeclaration","scope":1269,"src":"5675:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"to","nameLocation":"5697:2:9","nodeType":"VariableDeclaration","scope":1269,"src":"5689:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"value","nameLocation":"5709:5:9","nodeType":"VariableDeclaration","scope":1269,"src":"5701:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:9"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"5725:0:9"},"scope":1539,"src":"5656:300:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"6346:1032:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6360:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:9","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1316,"nodeType":"Block","src":"6534:362:9","statements":[{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:9","nodeType":"VariableDeclaration","scope":1316,"src":"6548:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"baseExpression":{"id":1292,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6570:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1294,"indexExpression":{"id":1293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6580:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6603:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6617:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"6599:115:9","trueBody":{"id":1305,"nodeType":"Block","src":"6624:90:9","statements":[{"errorCall":{"arguments":[{"id":1300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6674:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6680:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6693:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6649:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"RevertStatement","src":"6642:57:9"}]}},{"id":1315,"nodeType":"UncheckedBlock","src":"6727:159:9","statements":[{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6834:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1309,"indexExpression":{"id":1308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6844:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6852:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6866:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"6834:37:9"}]}]},"id":1317,"nodeType":"IfStatement","src":"6356:540:9","trueBody":{"id":1289,"nodeType":"Block","src":"6380:148:9","statements":[{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6496:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6512:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"6496:21:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6910:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1337,"nodeType":"Block","src":"7125:206:9","statements":[{"id":1336,"nodeType":"UncheckedBlock","src":"7139:182:9","statements":[{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1330,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7284:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1332,"indexExpression":{"id":1331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"7294:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"7284:22:9"}]}]},"id":1338,"nodeType":"IfStatement","src":"6906:425:9","trueBody":{"id":1329,"nodeType":"Block","src":"6928:191:9","statements":[{"id":1328,"nodeType":"UncheckedBlock","src":"6942:167:9","statements":[{"expression":{"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1324,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"7073:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7089:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ExpressionStatement","src":"7073:21:9"}]}]}},{"eventCall":{"arguments":[{"id":1340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7355:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"7361:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7365:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7346:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"EmitStatement","src":"7341:30:9"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"5962:304:9","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:9","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"from","nameLocation":"6296:4:9","nodeType":"VariableDeclaration","scope":1346,"src":"6288:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"to","nameLocation":"6310:2:9","nodeType":"VariableDeclaration","scope":1346,"src":"6302:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"6322:5:9","nodeType":"VariableDeclaration","scope":1346,"src":"6314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:9"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"6346:0:9"},"scope":1539,"src":"6271:1107:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"7777:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7791:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:9","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"7787:91:9","trueBody":{"id":1367,"nodeType":"Block","src":"7814:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:9","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7835:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"RevertStatement","src":"7828:39:9"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:9","typeDescriptions":{}}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7907:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"7916:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7887:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"7887:35:9"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"7384:332:9","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:9","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"account","nameLocation":"7744:7:9","nodeType":"VariableDeclaration","scope":1379,"src":"7736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"value","nameLocation":"7761:5:9","nodeType":"VariableDeclaration","scope":1379,"src":"7753:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:9"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"7777:0:9"},"scope":1539,"src":"7721:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1411,"nodeType":"Block","src":"8303:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8317:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:9","typeDescriptions":{}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"8313:89:9","trueBody":{"id":1400,"nodeType":"Block","src":"8340:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:9","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"8361:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"8354:37:9"}]}},{"expression":{"arguments":[{"id":1403,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8419:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:9","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8440:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1402,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8411:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"8411:35:9"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"7935:307:9","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:9","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"account","nameLocation":"8270:7:9","nodeType":"VariableDeclaration","scope":1412,"src":"8262:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"value","nameLocation":"8287:5:9","nodeType":"VariableDeclaration","scope":1412,"src":"8279:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:9"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[],"src":"8303:0:9"},"scope":1539,"src":"8247:206:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"9063:54:9","statements":[{"expression":{"arguments":[{"id":1423,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"9082:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"9089:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"9098:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1422,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1490,"src":"9073:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"9073:37:9"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"8459:525:9","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:9","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"owner","nameLocation":"9015:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"9007:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"spender","nameLocation":"9030:7:9","nodeType":"VariableDeclaration","scope":1430,"src":"9022:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"9047:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"9039:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:9"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"9063:0:9"},"scope":1539,"src":"8989:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"10047:334:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10061:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:9","typeDescriptions":{}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1456,"nodeType":"IfStatement","src":"10057:89:9","trueBody":{"id":1455,"nodeType":"Block","src":"10082:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:9","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1448,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"10103:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"RevertStatement","src":"10096:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10159:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:9","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"IfStatement","src":"10155:90:9","trueBody":{"id":1470,"nodeType":"Block","src":"10182:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:9","typeDescriptions":{}}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1463,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10203:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"10196:38:9"}]}},{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1472,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"10254:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1475,"indexExpression":{"id":1473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10266:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1476,"indexExpression":{"id":1474,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10273:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10284:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"10254:35:9"},{"condition":{"id":1480,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10303:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"10299:76:9","trueBody":{"id":1487,"nodeType":"Block","src":"10314:61:9","statements":[{"eventCall":{"arguments":[{"id":1482,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10342:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10349:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10358:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"10333:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"EmitStatement","src":"10328:36:9"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"9123:821:9","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:9","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"owner","nameLocation":"9975:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"9967:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"spender","nameLocation":"9990:7:9","nodeType":"VariableDeclaration","scope":1490,"src":"9982:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"10007:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"9999:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:9","nodeType":"VariableDeclaration","scope":1490,"src":"10014:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1438,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:9"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"10047:0:9"},"scope":1539,"src":"9949:432:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"10752:388:9","statements":[{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:9","nodeType":"VariableDeclaration","scope":1537,"src":"10762:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1503,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10799:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10806:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1502,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10789:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10828:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:9","memberName":"max","nodeType":"MemberAccess","src":"10848:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"nodeType":"IfStatement","src":"10824:310:9","trueBody":{"id":1535,"nodeType":"Block","src":"10867:267:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10885:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10904:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"IfStatement","src":"10881:130:9","trueBody":{"id":1523,"nodeType":"Block","src":"10911:100:9","statements":[{"errorCall":{"arguments":[{"id":1518,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10972:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10990:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"10936:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"RevertStatement","src":"10929:67:9"}]}},{"id":1534,"nodeType":"UncheckedBlock","src":"11024:100:9","statements":[{"expression":{"arguments":[{"id":1526,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11061:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"11068:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"11077:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"11096:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1525,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1490,"src":"11052:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"11052:57:9"}]}]}}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"10387:271:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:9","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"owner","nameLocation":"10696:5:9","nodeType":"VariableDeclaration","scope":1538,"src":"10688:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"spender","nameLocation":"10711:7:9","nodeType":"VariableDeclaration","scope":1538,"src":"10703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"value","nameLocation":"10728:5:9","nodeType":"VariableDeclaration","scope":1538,"src":"10720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:9"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"10752:0:9"},"scope":1539,"src":"10663:477:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1540,"src":"1401:9741:9","usedErrors":[899,904,909,918,923,928],"usedEvents":[1551,1560]}],"src":"105:11038:9"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1617]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"132:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1617,"linearizedBaseContracts":[1617],"name":"IERC20","nameLocation":"213:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"226:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1551,"name":"Transfer","nameLocation":"395:8:10","nodeType":"EventDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:10","nodeType":"VariableDeclaration","scope":1551,"src":"404:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:10","nodeType":"VariableDeclaration","scope":1551,"src":"426:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:10","nodeType":"VariableDeclaration","scope":1551,"src":"446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:10"},"src":"389:72:10"},{"anonymous":false,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"467:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1560,"name":"Approval","nameLocation":"626:8:10","nodeType":"EventDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:10","nodeType":"VariableDeclaration","scope":1560,"src":"635:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:10","nodeType":"VariableDeclaration","scope":1560,"src":"658:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:10","nodeType":"VariableDeclaration","scope":1560,"src":"683:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:10"},"src":"620:78:10"},{"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"704:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1566,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":1617,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"835:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1574,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:10","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"account","nameLocation":"938:7:10","nodeType":"VariableDeclaration","scope":1574,"src":"930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:10"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"970:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:10"},"scope":1617,"src":"911:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"985:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1584,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:10","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"to","nameLocation":"1229:2:10","nodeType":"VariableDeclaration","scope":1584,"src":"1221:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"value","nameLocation":"1241:5:10","nodeType":"VariableDeclaration","scope":1584,"src":"1233:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:10"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1584,"src":"1266:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1581,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:10"},"scope":1617,"src":"1203:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"1278:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1594,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:10","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"owner","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":1594,"src":"1566:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"spender","nameLocation":"1589:7:10","nodeType":"VariableDeclaration","scope":1594,"src":"1581:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:10"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"1621:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:10"},"scope":1617,"src":"1547:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"1636:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1604,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:10","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"spender","nameLocation":"2333:7:10","nodeType":"VariableDeclaration","scope":1604,"src":"2325:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"value","nameLocation":"2350:5:10","nodeType":"VariableDeclaration","scope":1604,"src":"2342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:10"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"2375:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1601,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:10"},"scope":1617,"src":"2308:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"2387:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1616,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:10","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"from","nameLocation":"2719:4:10","nodeType":"VariableDeclaration","scope":1616,"src":"2711:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"to","nameLocation":"2733:2:10","nodeType":"VariableDeclaration","scope":1616,"src":"2725:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"value","nameLocation":"2745:5:10","nodeType":"VariableDeclaration","scope":1616,"src":"2737:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:10"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"2770:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:10"},"scope":1617,"src":"2689:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1618,"src":"203:2575:10","usedErrors":[],"usedEvents":[1551,1560]}],"src":"106:2673:10"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2285],"ERC20":[1539],"ERC20Burnable":[1663]},"id":1664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1664,"sourceUnit":1540,"src":"150:35:11","symbolAliases":[{"foreign":{"id":1620,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"158:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1664,"sourceUnit":2286,"src":"186:51:11","symbolAliases":[{"foreign":{"id":1622,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"194:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1625,"name":"Context","nameLocations":["483:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"483:7:11"},"id":1626,"nodeType":"InheritanceSpecifier","src":"483:7:11"},{"baseName":{"id":1627,"name":"ERC20","nameLocations":["492:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"492:5:11"},"id":1628,"nodeType":"InheritanceSpecifier","src":"492:5:11"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"239:208:11","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1663,"linearizedBaseContracts":[1663,1539,929,2219,1617,2285],"name":"ERC20Burnable","nameLocation":"466:13:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1640,"nodeType":"Block","src":"662:43:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1635,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"678:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"692:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"672:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"672:26:11"}]},"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"504:109:11","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:11","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"value","nameLocation":"640:5:11","nodeType":"VariableDeclaration","scope":1641,"src":"632:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:11"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"662:0:11"},"scope":1663,"src":"618:87:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1661,"nodeType":"Block","src":"1086:93:11","statements":[{"expression":{"arguments":[{"id":1650,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1112:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1651,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"1121:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1135:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1096:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"1096:45:11"},{"expression":{"arguments":[{"id":1657,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1157:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1166:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1151:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"1151:21:11"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"711:305:11","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:11","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"account","nameLocation":"1047:7:11","nodeType":"VariableDeclaration","scope":1662,"src":"1039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"value","nameLocation":"1064:5:11","nodeType":"VariableDeclaration","scope":1662,"src":"1056:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:11"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"1086:0:11"},"scope":1663,"src":"1021:158:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1664,"src":"448:733:11","usedErrors":[899,904,909,918,923,928],"usedEvents":[1551,1560]}],"src":"124:1058:11"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","exportedSymbols":{"ERC20":[1539],"ERC20FlashMint":[1907],"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836]},"id":1908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1665,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"../../../interfaces/IERC3156FlashBorrower.sol","id":1667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":798,"src":"151:84:12","symbolAliases":[{"foreign":{"id":1666,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"159:21:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"../../../interfaces/IERC3156FlashLender.sol","id":1669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":837,"src":"236:80:12","symbolAliases":[{"foreign":{"id":1668,"name":"IERC3156FlashLender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"244:19:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":1540,"src":"317:35:12","symbolAliases":[{"foreign":{"id":1670,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"325:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1673,"name":"ERC20","nameLocations":["965:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"965:5:12"},"id":1674,"nodeType":"InheritanceSpecifier","src":"965:5:12"},{"baseName":{"id":1675,"name":"IERC3156FlashLender","nameLocations":["972:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":836,"src":"972:19:12"},"id":1676,"nodeType":"InheritanceSpecifier","src":"972:19:12"}],"canonicalName":"ERC20FlashMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"354:574:12","text":" @dev Implementation of the ERC3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n overriding {maxFlashLoan} so that it correctly reflects the supply cap."},"fullyImplemented":true,"id":1907,"linearizedBaseContracts":[1907,836,1539,929,2219,1617,2285],"name":"ERC20FlashMint","nameLocation":"947:14:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1681,"mutability":"constant","name":"RETURN_VALUE","nameLocation":"1023:12:12","nodeType":"VariableDeclaration","scope":1907,"src":"998:85:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"998:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1048:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1678,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1038:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1038:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1090:52:12","text":" @dev The loan token is not valid."},"errorSelector":"b5a7db92","id":1686,"name":"ERC3156UnsupportedToken","nameLocation":"1153:23:12","nodeType":"ErrorDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"token","nameLocation":"1185:5:12","nodeType":"VariableDeclaration","scope":1686,"src":"1177:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1176:15:12"},"src":"1147:45:12"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"1198:82:12","text":" @dev The requested loan exceeds the max loan value for `token`."},"errorSelector":"fd9a7609","id":1691,"name":"ERC3156ExceededMaxLoan","nameLocation":"1291:22:12","nodeType":"ErrorDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"maxLoan","nameLocation":"1322:7:12","nodeType":"VariableDeclaration","scope":1691,"src":"1314:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1313:17:12"},"src":"1285:46:12"},{"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"1337:93:12","text":" @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer."},"errorSelector":"678c5b00","id":1696,"name":"ERC3156InvalidReceiver","nameLocation":"1441:22:12","nodeType":"ErrorDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"receiver","nameLocation":"1472:8:12","nodeType":"VariableDeclaration","scope":1696,"src":"1464:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"1464:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1463:18:12"},"src":"1435:47:12"},{"baseFunctions":[810],"body":{"id":1721,"nodeType":"Block","src":"2009:86:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2026:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2043:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2035:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:12","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2026:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2087:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2026:62:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2056:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2051:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2051:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2065:3:12","memberName":"max","nodeType":"MemberAccess","src":"2051:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1715,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2071:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2051:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1703,"id":1720,"nodeType":"Return","src":"2019:69:12"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1488:441:12","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned.\n NOTE: This function does not consider any form of supply cap, so in case\n it's used in a token with a cap like {ERC20Capped}, make sure to override this\n function to integrate the cap instead of `type(uint256).max`."},"functionSelector":"613255ab","id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"1943:12:12","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"token","nameLocation":"1964:5:12","nodeType":"VariableDeclaration","scope":1722,"src":"1956:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1955:15:12"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"2000:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1999:9:12"},"scope":1907,"src":"1934:161:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[820],"body":{"id":1749,"nodeType":"Block","src":"2546:146:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2560:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1735,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2577:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2569:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:12","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2569:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2560:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"2556:90:12","trueBody":{"id":1742,"nodeType":"Block","src":"2584:62:12","statements":[{"errorCall":{"arguments":[{"id":1739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2629:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1738,"name":"ERC3156UnsupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2605:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2605:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"RevertStatement","src":"2598:37:12"}]}},{"expression":{"arguments":[{"id":1745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2672:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2679:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1744,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2662:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1731,"id":1748,"nodeType":"Return","src":"2655:30:12"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"2101:354:12","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"2469:8:12","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"token","nameLocation":"2486:5:12","nodeType":"VariableDeclaration","scope":1750,"src":"2478:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"value","nameLocation":"2501:5:12","nodeType":"VariableDeclaration","scope":1750,"src":"2493:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:30:12"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"2537:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2536:9:12"},"scope":1907,"src":"2460:232:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"3169:138:12","statements":[{"expression":{"id":1760,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3262:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"nodeType":"ExpressionStatement","src":"3262:5:12"},{"expression":{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1763,"nodeType":"ExpressionStatement","src":"3277:5:12"},{"expression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3299:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1759,"id":1765,"nodeType":"Return","src":"3292:8:12"}]},"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"2698:377:12","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"3089:9:12","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"token","nameLocation":"3107:5:12","nodeType":"VariableDeclaration","scope":1767,"src":"3099:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"3122:5:12","nodeType":"VariableDeclaration","scope":1767,"src":"3114:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3098:30:12"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"3160:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3159:9:12"},"scope":1907,"src":"3080:227:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"3695:34:12","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3712:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:12","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1772,"id":1777,"nodeType":"Return","src":"3705:17:12"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"3313:308:12","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"3635:17:12","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"3652:2:12"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"3686:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"3686:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3685:9:12"},"scope":1907,"src":"3626:103:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[835],"body":{"id":1905,"nodeType":"Block","src":"4954:792:12","statements":[{"assignments":[1795],"declarations":[{"constant":false,"id":1795,"mutability":"mutable","name":"maxLoan","nameLocation":"4972:7:12","nodeType":"VariableDeclaration","scope":1905,"src":"4964:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"arguments":[{"id":1797,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"4995:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1796,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4982:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4982:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4964:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5015:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1801,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5015:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"IfStatement","src":"5011:84:12","trueBody":{"id":1807,"nodeType":"Block","src":"5032:63:12","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5076:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"ERC3156ExceededMaxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5053:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"RevertStatement","src":"5046:38:12"}]}},{"assignments":[1810],"declarations":[{"constant":false,"id":1810,"mutability":"mutable","name":"fee","nameLocation":"5112:3:12","nodeType":"VariableDeclaration","scope":1905,"src":"5104:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1815,"initialValue":{"arguments":[{"id":1812,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5127:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5134:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5118:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5104:36:12"},{"expression":{"arguments":[{"arguments":[{"id":1819,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5164:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:12","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1816,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5150:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5150:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"5150:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1826,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"5216:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5216:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5230:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5237:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1830,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5244:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1831,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"5249:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1824,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5195:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5204:11:12","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":796,"src":"5195:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1833,"name":"RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5258:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5195:75:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"nodeType":"IfStatement","src":"5191:154:12","trueBody":{"id":1842,"nodeType":"Block","src":"5272:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1838,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5324:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5316:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:12","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1835,"name":"ERC3156InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5293:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"RevertStatement","src":"5286:48:12"}]}},{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"5362:16:12","nodeType":"VariableDeclaration","scope":1905,"src":"5354:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"5354:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1848,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1846,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5381:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5381:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5354:46:12"},{"expression":{"arguments":[{"arguments":[{"id":1852,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5434:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5426:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:12","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1856,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5453:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5445:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"5445:7:12","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5460:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1859,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5468:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5460:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"5410:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"5410:62:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5486:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5493:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5486:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5498:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5526:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5518:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"5518:7:12","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5518:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5498:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5486:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1901,"nodeType":"Block","src":"5598:121:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1887,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5626:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:12","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5637:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1884,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5612:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"5612:31:12"},{"expression":{"arguments":[{"arguments":[{"id":1895,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5675:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5667:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"5667:7:12","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5667:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5686:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1898,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5704:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1892,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5657:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5657:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"5657:51:12"}]},"id":1902,"nodeType":"IfStatement","src":"5482:237:12","trueBody":{"id":1883,"nodeType":"Block","src":"5530:62:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1876,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5558:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5550:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"5550:7:12","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5550:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5569:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1879,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5577:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5569:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1873,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5544:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5544:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"ExpressionStatement","src":"5544:37:12"}]}},{"expression":{"hexValue":"74727565","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5735:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1793,"id":1904,"nodeType":"Return","src":"5728:11:12"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"3735:760:12","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n value + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param value The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"4793:9:12","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"receiver","nameLocation":"4834:8:12","nodeType":"VariableDeclaration","scope":1906,"src":"4812:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1782,"nodeType":"UserDefinedTypeName","pathNode":{"id":1781,"name":"IERC3156FlashBorrower","nameLocations":["4812:21:12"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"4812:21:12"},"referencedDeclaration":797,"src":"4812:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"token","nameLocation":"4860:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4852:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"value","nameLocation":"4883:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4875:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4875:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"data","nameLocation":"4913:4:12","nodeType":"VariableDeclaration","scope":1906,"src":"4898:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4898:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:121:12"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"4948:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"4948:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4947:6:12"},"scope":1907,"src":"4784:962:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1908,"src":"929:4819:12","usedErrors":[899,904,909,918,923,928,1686,1691,1696],"usedEvents":[1551,1560]}],"src":"125:5624:12"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3469],"EIP712":[3696],"ERC20":[1539],"ERC20Permit":[2061],"IERC20Permit":[2255],"Nonces":[2353]},"id":2062,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1909,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2062,"sourceUnit":2256,"src":"148:48:13","symbolAliases":[{"foreign":{"id":1910,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"156:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2062,"sourceUnit":1540,"src":"197:35:13","symbolAliases":[{"foreign":{"id":1912,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"205:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2062,"sourceUnit":3470,"src":"233:60:13","symbolAliases":[{"foreign":{"id":1914,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"241:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2062,"sourceUnit":3697,"src":"294:62:13","symbolAliases":[{"foreign":{"id":1916,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"302:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2062,"sourceUnit":2354,"src":"357:49:13","symbolAliases":[{"foreign":{"id":1918,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"365:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1921,"name":"ERC20","nameLocations":["929:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"929:5:13"},"id":1922,"nodeType":"InheritanceSpecifier","src":"929:5:13"},{"baseName":{"id":1923,"name":"IERC20Permit","nameLocations":["936:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"936:12:13"},"id":1924,"nodeType":"InheritanceSpecifier","src":"936:12:13"},{"baseName":{"id":1925,"name":"EIP712","nameLocations":["950:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3696,"src":"950:6:13"},"id":1926,"nodeType":"InheritanceSpecifier","src":"950:6:13"},{"baseName":{"id":1927,"name":"Nonces","nameLocations":["958:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2353,"src":"958:6:13"},"id":1928,"nodeType":"InheritanceSpecifier","src":"958:6:13"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"408:487:13","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2061,"linearizedBaseContracts":[2061,2353,3696,861,2255,1539,929,2219,1617,2285],"name":"ERC20Permit","nameLocation":"914:11:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1933,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:13","nodeType":"VariableDeclaration","scope":2061,"src":"971:146:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1930,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"1124:52:13","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1938,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:13","nodeType":"ErrorDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:13","nodeType":"VariableDeclaration","scope":1938,"src":"1211:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:13"},"src":"1181:48:13"},{"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"1235:45:13","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1945,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:13","nodeType":"ErrorDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"signer","nameLocation":"1320:6:13","nodeType":"VariableDeclaration","scope":1945,"src":"1312:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"owner","nameLocation":"1336:5:13","nodeType":"VariableDeclaration","scope":1945,"src":"1328:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:13"},"src":"1285:58:13"},{"body":{"id":1955,"nodeType":"Block","src":"1624:2:13","statements":[]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"1349:220:13","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1956,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1951,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1613:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1953,"kind":"baseConstructorSpecifier","modifierName":{"id":1950,"name":"EIP712","nameLocations":["1606:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3696,"src":"1606:6:13"},"nodeType":"ModifierInvocation","src":"1606:17:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"name","nameLocation":"1600:4:13","nodeType":"VariableDeclaration","scope":1956,"src":"1586:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:13"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"1624:0:13"},"scope":2061,"src":"1574:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2240],"body":{"id":2032,"nodeType":"Block","src":"1869:483:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1974,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1976,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1901:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"1879:97:13","trueBody":{"id":1982,"nodeType":"Block","src":"1911:65:13","statements":[{"errorCall":{"arguments":[{"id":1979,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1956:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1978,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1932:23:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"RevertStatement","src":"1925:40:13"}]}},{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:13","nodeType":"VariableDeclaration","scope":2032,"src":"1986:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1999,"initialValue":{"arguments":[{"arguments":[{"id":1989,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2028:15:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2045:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2052:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2061:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2078:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1993,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2068:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1996,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2086:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1987,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1986,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:13"},{"assignments":[2001],"declarations":[{"constant":false,"id":2001,"mutability":"mutable","name":"hash","nameLocation":"2115:4:13","nodeType":"VariableDeclaration","scope":2032,"src":"2107:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[{"id":2003,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"2139:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2002,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2122:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:13"},{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"signer","nameLocation":"2169:6:13","nodeType":"VariableDeclaration","scope":2032,"src":"2161:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2015,"initialValue":{"arguments":[{"id":2010,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"2192:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2011,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2198:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2012,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2201:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2013,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2204:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2008,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"2178:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3469_$","typeString":"type(library ECDSA)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"2178:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2016,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2220:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2017,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2230:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"2216:88:13","trueBody":{"id":2024,"nodeType":"Block","src":"2237:67:13","statements":[{"errorCall":{"arguments":[{"id":2020,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2279:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2287:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2019,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2258:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"RevertStatement","src":"2251:42:13"}]}},{"expression":{"arguments":[{"id":2027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2323:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2028,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2330:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2339:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2026,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1430,"src":"2314:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"ExpressionStatement","src":"2314:31:13"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"1632:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:13","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"owner","nameLocation":"1713:5:13","nodeType":"VariableDeclaration","scope":2033,"src":"1705:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"spender","nameLocation":"1736:7:13","nodeType":"VariableDeclaration","scope":2033,"src":"1728:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"1761:5:13","nodeType":"VariableDeclaration","scope":2033,"src":"1753:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:13","nodeType":"VariableDeclaration","scope":2033,"src":"1776:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"v","nameLocation":"1808:1:13","nodeType":"VariableDeclaration","scope":2033,"src":"1802:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1966,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"r","nameLocation":"1827:1:13","nodeType":"VariableDeclaration","scope":2033,"src":"1819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"s","nameLocation":"1846:1:13","nodeType":"VariableDeclaration","scope":2033,"src":"1838:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:13"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"1869:0:13"},"scope":2061,"src":"1680:672:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2248,2312],"body":{"id":2049,"nodeType":"Block","src":"2506:43:13","statements":[{"expression":{"arguments":[{"id":2046,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2536:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2044,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2061_$","typeString":"type(contract super ERC20Permit)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:13","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2523:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2043,"id":2048,"nodeType":"Return","src":"2516:26:13"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"2358:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:13","nodeType":"FunctionDefinition","overrides":{"id":2040,"nodeType":"OverrideSpecifier","overrides":[{"id":2038,"name":"IERC20Permit","nameLocations":["2466:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2466:12:13"},{"id":2039,"name":"Nonces","nameLocations":["2480:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2353,"src":"2480:6:13"}],"src":"2457:30:13"},"parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"owner","nameLocation":"2430:5:13","nodeType":"VariableDeclaration","scope":2050,"src":"2422:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:13"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"2497:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:13"},"scope":2061,"src":"2406:143:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2254],"body":{"id":2059,"nodeType":"Block","src":"2724:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2056,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2741:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2055,"id":2058,"nodeType":"Return","src":"2734:27:13"}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"2555:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:13","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[],"src":"2681:2:13"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2715:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:13"},"scope":2061,"src":"2656:112:13","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2062,"src":"896:1874:13","usedErrors":[899,904,909,918,923,928,1938,1945,2295,2553,2555,3132,3137,3142],"usedEvents":[841,1551,1560]}],"src":"122:2649:13"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[8256],"ERC20":[1539],"ERC20Votes":[2193],"Votes":[777]},"id":2194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2063,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2065,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2194,"sourceUnit":1540,"src":"147:35:14","symbolAliases":[{"foreign":{"id":2064,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"155:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2067,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2194,"sourceUnit":778,"src":"183:58:14","symbolAliases":[{"foreign":{"id":2066,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"191:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":2069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2194,"sourceUnit":8257,"src":"242:67:14","symbolAliases":[{"foreign":{"id":2068,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"250:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2071,"name":"ERC20","nameLocations":["1201:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"1201:5:14"},"id":2072,"nodeType":"InheritanceSpecifier","src":"1201:5:14"},{"baseName":{"id":2073,"name":"Votes","nameLocations":["1208:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1208:5:14"},"id":2074,"nodeType":"InheritanceSpecifier","src":"1208:5:14"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"311:857:14","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2193,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[2193,777,872,230,887,2353,3696,861,1539,929,2219,1617,2285],"name":"ERC20Votes","nameLocation":"1187:10:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"1220:100:14","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":2081,"name":"ERC20ExceededSafeSupply","nameLocation":"1331:23:14","nodeType":"ErrorDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"increasedSupply","nameLocation":"1363:15:14","nodeType":"VariableDeclaration","scope":2081,"src":"1355:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"cap","nameLocation":"1388:3:14","nodeType":"VariableDeclaration","scope":2081,"src":"1380:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:38:14"},"src":"1325:68:14"},{"body":{"id":2093,"nodeType":"Block","src":"2146:41:14","statements":[{"expression":{"expression":{"arguments":[{"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2088,"name":"uint208","nodeType":"ElementaryTypeName","src":"2168:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2163:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2177:3:14","memberName":"max","nodeType":"MemberAccess","src":"2163:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2086,"id":2092,"nodeType":"Return","src":"2156:24:14"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"1399:680:14","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2093:10:14","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"2103:2:14"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"2137:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2136:9:14"},"scope":2193,"src":"2084:103:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1346],"body":{"id":2147,"nodeType":"Block","src":"2411:329:14","statements":[{"expression":{"arguments":[{"id":2108,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2435:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"2441:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2105,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2421:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2193_$","typeString":"type(contract super ERC20Votes)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2427:7:14","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"2421:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"2421:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2465:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2481:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2473:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","typeDescriptions":{}}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2465:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"2461:226:14","trueBody":{"id":2139,"nodeType":"Block","src":"2485:202:14","statements":[{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"supply","nameLocation":"2507:6:14","nodeType":"VariableDeclaration","scope":2139,"src":"2499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2123,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2121,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2516:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:30:14"},{"assignments":[2125],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"cap","nameLocation":"2551:3:14","nodeType":"VariableDeclaration","scope":2139,"src":"2543:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2128,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2126,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2557:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2543:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2587:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2130,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2596:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"2583:94:14","trueBody":{"id":2137,"nodeType":"Block","src":"2601:76:14","statements":[{"errorCall":{"arguments":[{"id":2133,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2650:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2134,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2658:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2626:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"RevertStatement","src":"2619:43:14"}]}}]}},{"expression":{"arguments":[{"id":2142,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2717:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"2723:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2696:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"2696:37:14"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"2193:129:14","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2148,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2336:7:14","nodeType":"FunctionDefinition","overrides":{"id":2103,"nodeType":"OverrideSpecifier","overrides":[],"src":"2402:8:14"},"parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"from","nameLocation":"2352:4:14","nodeType":"VariableDeclaration","scope":2148,"src":"2344:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"to","nameLocation":"2366:2:14","nodeType":"VariableDeclaration","scope":2148,"src":"2358:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"value","nameLocation":"2378:5:14","nodeType":"VariableDeclaration","scope":2148,"src":"2370:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:41:14"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"2411:0:14"},"scope":2193,"src":"2327:413:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[776],"body":{"id":2161,"nodeType":"Block","src":"3091:42:14","statements":[{"expression":{"arguments":[{"id":2158,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"3118:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2157,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3108:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2156,"id":2160,"nodeType":"Return","src":"3101:25:14"}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"2746:249:14","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3009:15:14","nodeType":"FunctionDefinition","overrides":{"id":2153,"nodeType":"OverrideSpecifier","overrides":[],"src":"3064:8:14"},"parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"account","nameLocation":"3033:7:14","nodeType":"VariableDeclaration","scope":2162,"src":"3025:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3024:17:14"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"3082:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:9:14"},"scope":2193,"src":"3000:133:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"3286:48:14","statements":[{"expression":{"arguments":[{"id":2171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3319:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2170,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3303:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2169,"id":2173,"nodeType":"Return","src":"3296:31:14"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"3139:64:14","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3217:14:14","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"account","nameLocation":"3240:7:14","nodeType":"VariableDeclaration","scope":2175,"src":"3232:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3231:17:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"3278:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2167,"name":"uint32","nodeType":"ElementaryTypeName","src":"3278:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3277:8:14"},"scope":2193,"src":"3208:126:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2191,"nodeType":"Block","src":"3524:50:14","statements":[{"expression":{"arguments":[{"id":2187,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3554:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3563:3:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2186,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3541:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7223_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2185,"id":2190,"nodeType":"Return","src":"3534:33:14"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"3340:66:14","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3420:11:14","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"account","nameLocation":"3440:7:14","nodeType":"VariableDeclaration","scope":2192,"src":"3432:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"pos","nameLocation":"3456:3:14","nodeType":"VariableDeclaration","scope":2192,"src":"3449:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2179,"name":"uint32","nodeType":"ElementaryTypeName","src":"3449:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3431:29:14"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"3490:32:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2183,"nodeType":"UserDefinedTypeName","pathNode":{"id":2182,"name":"Checkpoints.Checkpoint208","nameLocations":["3490:11:14","3502:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"3490:25:14"},"referencedDeclaration":7223,"src":"3490:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3489:34:14"},"scope":2193,"src":"3411:163:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2194,"src":"1169:2407:14","usedErrors":[155,281,288,899,904,909,918,923,928,2081,2295,2553,2555,3132,3137,3142,4834,6692],"usedEvents":[164,173,841,1551,1560]}],"src":"121:3456:14"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1617],"IERC20Metadata":[2219]},"id":2220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2195,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2197,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2220,"sourceUnit":1618,"src":"151:37:15","symbolAliases":[{"foreign":{"id":2196,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"159:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2199,"name":"IERC20","nameLocations":["305:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"305:6:15"},"id":2200,"nodeType":"InheritanceSpecifier","src":"305:6:15"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"190:86:15","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2219,"linearizedBaseContracts":[2219,1617],"name":"IERC20Metadata","nameLocation":"287:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"318:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2206,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:15","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"390:2:15"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"416:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2203,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:15"},"scope":2219,"src":"377:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"437:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2212,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:15","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[],"src":"513:2:15"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2212,"src":"539:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2209,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:15"},"scope":2219,"src":"498:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"560:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2218,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:15","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[],"src":"647:2:15"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2218,"src":"673:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2215,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:15"},"scope":2219,"src":"630:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2220,"src":"277:405:15","usedErrors":[],"usedEvents":[1551,1560]}],"src":"125:558:15"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2255]},"id":2256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2221,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"149:1963:16","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2255,"linearizedBaseContracts":[2255],"name":"IERC20Permit","nameLocation":"2123:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"2142:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2240,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:16","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"owner","nameLocation":"3030:5:16","nodeType":"VariableDeclaration","scope":2240,"src":"3022:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"spender","nameLocation":"3053:7:16","nodeType":"VariableDeclaration","scope":2240,"src":"3045:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"value","nameLocation":"3078:5:16","nodeType":"VariableDeclaration","scope":2240,"src":"3070:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:16","nodeType":"VariableDeclaration","scope":2240,"src":"3093:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"v","nameLocation":"3125:1:16","nodeType":"VariableDeclaration","scope":2240,"src":"3119:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2232,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"r","nameLocation":"3144:1:16","nodeType":"VariableDeclaration","scope":2240,"src":"3136:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"s","nameLocation":"3163:1:16","nodeType":"VariableDeclaration","scope":2240,"src":"3155:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:16"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[],"src":"3179:0:16"},"scope":2255,"src":"2997:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"3186:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2248,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:16","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"owner","nameLocation":"3509:5:16","nodeType":"VariableDeclaration","scope":2248,"src":"3501:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:16"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2248,"src":"3539:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:16"},"scope":2255,"src":"3485:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"3554:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2254,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:16","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"3765:2:16"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2254,"src":"3791:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:16"},"scope":2255,"src":"3740:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2256,"src":"2113:1689:16","usedErrors":[],"usedEvents":[]}],"src":"123:3680:16"}},"@openzeppelin/contracts/utils/Context.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2285]},"id":2286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2285,"linearizedBaseContracts":[2285],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2266,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":2263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2262,"id":2265,"nodeType":"Return","src":"728:17:17"}]},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":2285,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":2272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2271,"id":2274,"nodeType":"Return","src":"835:15:17"}]},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2276,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2269,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":2285,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2280,"id":2282,"nodeType":"Return","src":"945:8:17"}]},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":2285,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2286,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"}},"@openzeppelin/contracts/utils/Nonces.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2353]},"id":2354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2287,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"125:83:18","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2353,"linearizedBaseContracts":[2353],"name":"Nonces","nameLocation":"227:6:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"240:90:18","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2295,"name":"InvalidAccountNonce","nameLocation":"341:19:18","nodeType":"ErrorDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"account","nameLocation":"369:7:18","nodeType":"VariableDeclaration","scope":2295,"src":"361:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:18","nodeType":"VariableDeclaration","scope":2295,"src":"378:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:18"},"src":"335:65:18"},{"constant":false,"id":2299,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:18","nodeType":"VariableDeclaration","scope":2353,"src":"406:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2298,"keyName":"account","keyNameLocation":"422:7:18","keyType":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2311,"nodeType":"Block","src":"607:38:18","statements":[{"expression":{"baseExpression":{"id":2307,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"624:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2309,"indexExpression":{"id":2308,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"632:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2306,"id":2310,"nodeType":"Return","src":"617:21:18"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"464:69:18","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:18","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"owner","nameLocation":"562:5:18","nodeType":"VariableDeclaration","scope":2312,"src":"554:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:18"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"598:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:18"},"scope":2353,"src":"538:107:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2326,"nodeType":"Block","src":"828:326:18","statements":[{"id":2325,"nodeType":"UncheckedBlock","src":"1031:117:18","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:18","subExpression":{"baseExpression":{"id":2320,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"1121:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2322,"indexExpression":{"id":2321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"1129:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2319,"id":2324,"nodeType":"Return","src":"1114:23:18"}]}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"651:103:18","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:18","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"owner","nameLocation":"786:5:18","nodeType":"VariableDeclaration","scope":2327,"src":"778:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:18"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"819:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:18"},"scope":2353,"src":"759:395:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2351,"nodeType":"Block","src":"1338:149:18","statements":[{"assignments":[2336],"declarations":[{"constant":false,"id":2336,"mutability":"mutable","name":"current","nameLocation":"1356:7:18","nodeType":"VariableDeclaration","scope":2351,"src":"1348:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2340,"initialValue":{"arguments":[{"id":2338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1376:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"1366:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"1396:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2342,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1405:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2350,"nodeType":"IfStatement","src":"1392:89:18","trueBody":{"id":2349,"nodeType":"Block","src":"1414:67:18","statements":[{"errorCall":{"arguments":[{"id":2345,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1455:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2346,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1462:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1435:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"RevertStatement","src":"1428:42:18"}]}}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"1160:100:18","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:18","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"owner","nameLocation":"1299:5:18","nodeType":"VariableDeclaration","scope":2352,"src":"1291:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:18","nodeType":"VariableDeclaration","scope":2352,"src":"1306:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:18"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[],"src":"1338:0:18"},"scope":2353,"src":"1265:222:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2354,"src":"209:1280:18","usedErrors":[2295],"usedEvents":[]}],"src":"99:1391:18"}},"@openzeppelin/contracts/utils/Pausable.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2285],"Pausable":[2470]},"id":2471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2355,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2471,"sourceUnit":2286,"src":"128:45:19","symbolAliases":[{"foreign":{"id":2356,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"136:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2359,"name":"Context","nameLocations":["645:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"645:7:19"},"id":2360,"nodeType":"InheritanceSpecifier","src":"645:7:19"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"175:439:19","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2470,"linearizedBaseContracts":[2470,2285],"name":"Pausable","nameLocation":"633:8:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2362,"mutability":"mutable","name":"_paused","nameLocation":"672:7:19","nodeType":"VariableDeclaration","scope":2470,"src":"659:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2361,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"686:73:19","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2367,"name":"Paused","nameLocation":"770:6:19","nodeType":"EventDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:19","nodeType":"VariableDeclaration","scope":2367,"src":"777:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:19"},"src":"764:30:19"},{"anonymous":false,"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"800:70:19","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2372,"name":"Unpaused","nameLocation":"881:8:19","nodeType":"EventDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:19","nodeType":"VariableDeclaration","scope":2372,"src":"890:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:19"},"src":"875:32:19"},{"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"913:76:19","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2375,"name":"EnforcedPause","nameLocation":"1000:13:19","nodeType":"ErrorDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[],"src":"1013:2:19"},"src":"994:22:19"},{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"1022:80:19","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2378,"name":"ExpectedPause","nameLocation":"1113:13:19","nodeType":"ErrorDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"1126:2:19"},"src":"1107:22:19"},{"body":{"id":2386,"nodeType":"Block","src":"1221:32:19","statements":[{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"1231:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"ExpressionStatement","src":"1231:15:19"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"1135:67:19","text":" @dev Initializes the contract in unpaused state."},"id":2387,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"1218:2:19"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"1221:0:19"},"scope":2470,"src":"1207:46:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"1464:47:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2390,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"1474:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2392,"nodeType":"ExpressionStatement","src":"1474:19:19"},{"id":2393,"nodeType":"PlaceholderStatement","src":"1503:1:19"}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"1259:175:19","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2395,"name":"whenNotPaused","nameLocation":"1448:13:19","nodeType":"ModifierDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"1461:2:19"},"src":"1439:72:19","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"1711:44:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2398,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1721:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2400,"nodeType":"ExpressionStatement","src":"1721:16:19"},{"id":2401,"nodeType":"PlaceholderStatement","src":"1747:1:19"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"1517:167:19","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2403,"name":"whenPaused","nameLocation":"1698:10:19","nodeType":"ModifierDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[],"src":"1708:2:19"},"src":"1689:66:19","virtual":false,"visibility":"internal"},{"body":{"id":2411,"nodeType":"Block","src":"1903:31:19","statements":[{"expression":{"id":2409,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"1920:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2408,"id":2410,"nodeType":"Return","src":"1913:14:19"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1761:84:19","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2412,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:19","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[],"src":"1865:2:19"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2412,"src":"1897:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:19"},"scope":2470,"src":"1850:84:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2423,"nodeType":"Block","src":"2053:77:19","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2416,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2067:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"2063:61:19","trueBody":{"id":2421,"nodeType":"Block","src":"2077:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2418,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2098:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"RevertStatement","src":"2091:22:19"}]}}]},"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"1940:57:19","text":" @dev Throws if the contract is paused."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:19","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[],"src":"2028:2:19"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"2053:0:19"},"scope":2470,"src":"2002:128:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"2250:78:19","statements":[{"condition":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:19","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2428,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2265:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"2260:62:19","trueBody":{"id":2434,"nodeType":"Block","src":"2275:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2431,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2296:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"RevertStatement","src":"2289:22:19"}]}}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"2136:61:19","text":" @dev Throws if the contract is not paused."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:19","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"2225:2:19"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[],"src":"2250:0:19"},"scope":2470,"src":"2202:126:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"2512:66:19","statements":[{"expression":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2443,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"2522:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"ExpressionStatement","src":"2522:14:19"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2448,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2558:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2447,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2551:6:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"EmitStatement","src":"2546:25:19"}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"2334:124:19","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2453,"implemented":true,"kind":"function","modifiers":[{"id":2441,"kind":"modifierInvocation","modifierName":{"id":2440,"name":"whenNotPaused","nameLocations":["2498:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"2498:13:19"},"nodeType":"ModifierInvocation","src":"2498:13:19"}],"name":"_pause","nameLocation":"2472:6:19","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[],"src":"2478:2:19"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[],"src":"2512:0:19"},"scope":2470,"src":"2463:115:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"2758:69:19","statements":[{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2459,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"2768:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2462,"nodeType":"ExpressionStatement","src":"2768:15:19"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2807:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2463,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"2798:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"EmitStatement","src":"2793:27:19"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"2584:121:19","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2469,"implemented":true,"kind":"function","modifiers":[{"id":2457,"kind":"modifierInvocation","modifierName":{"id":2456,"name":"whenPaused","nameLocations":["2747:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2403,"src":"2747:10:19"},"nodeType":"ModifierInvocation","src":"2747:10:19"}],"name":"_unpause","nameLocation":"2719:8:19","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"2727:2:19"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"2758:0:19"},"scope":2470,"src":"2710:117:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2471,"src":"615:2214:19","usedErrors":[2375,2378],"usedEvents":[2367,2372]}],"src":"102:2728:19"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2539]},"id":2540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2472,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"135:750:20","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2539,"linearizedBaseContracts":[2539],"name":"ReentrancyGuard","nameLocation":"904:15:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2476,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:20","nodeType":"VariableDeclaration","scope":2539,"src":"1674:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2479,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:20","nodeType":"VariableDeclaration","scope":2539,"src":"1720:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2481,"mutability":"mutable","name":"_status","nameLocation":"1779:7:20","nodeType":"VariableDeclaration","scope":2539,"src":"1763:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"1793:52:20","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2484,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:20","nodeType":"ErrorDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[],"src":"1884:2:20"},"src":"1850:37:20"},{"body":{"id":2491,"nodeType":"Block","src":"1907:38:20","statements":[{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2487,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"1917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2488,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"1927:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ExpressionStatement","src":"1917:21:20"}]},"id":2492,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[],"src":"1904:2:20"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"1907:0:20"},"scope":2539,"src":"1893:52:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"2346:79:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2495,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2356:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"2356:21:20"},{"id":2498,"nodeType":"PlaceholderStatement","src":"2387:1:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2499,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2398:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"ExpressionStatement","src":"2398:20:20"}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"1951:366:20","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2503,"name":"nonReentrant","nameLocation":"2331:12:20","nodeType":"ModifierDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[],"src":"2343:2:20"},"src":"2322:103:20","virtual":false,"visibility":"internal"},{"body":{"id":2518,"nodeType":"Block","src":"2470:268:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2558:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2507,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2569:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"2554:86:20","trueBody":{"id":2512,"nodeType":"Block","src":"2578:62:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2509,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2599:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"RevertStatement","src":"2592:37:20"}]}},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2514,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2714:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2515,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2724:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"2714:17:20"}]},"id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:20","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"2459:2:20"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[],"src":"2470:0:20"},"scope":2539,"src":"2431:307:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2526,"nodeType":"Block","src":"2782:170:20","statements":[{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2924:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2523,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2934:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"2924:21:20"}]},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:20","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"2771:2:20"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[],"src":"2782:0:20"},"scope":2539,"src":"2744:208:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2537,"nodeType":"Block","src":"3195:42:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3212:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2534,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3223:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2532,"id":2536,"nodeType":"Return","src":"3205:25:20"}]},"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"2958:168:20","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:20","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"3163:2:20"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"3189:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2530,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:20"},"scope":2539,"src":"3131:106:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2540,"src":"886:2353:20","usedErrors":[2484],"usedEvents":[]}],"src":"109:3131:20"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":21,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2545],"ShortStrings":[2756],"StorageSlot":[2866]},"id":2757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2757,"sourceUnit":2867,"src":"132:46:21","symbolAliases":[{"foreign":{"id":2542,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"140:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2545,"name":"ShortString","nameLocation":"353:11:21","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:21","underlyingType":{"id":2544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"378:876:21","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2756,"linearizedBaseContracts":[2756],"name":"ShortStrings","nameLocation":"1263:12:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2549,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:21","nodeType":"VariableDeclaration","scope":2756,"src":"1345:111:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2553,"name":"StringTooLong","nameLocation":"1469:13:21","nodeType":"ErrorDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"str","nameLocation":"1490:3:21","nodeType":"VariableDeclaration","scope":2553,"src":"1483:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2550,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:21"},"src":"1463:32:21"},{"errorSelector":"b3512b0c","id":2555,"name":"InvalidShortString","nameLocation":"1506:18:21","nodeType":"ErrorDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"1524:2:21"},"src":"1500:27:21"},{"body":{"id":2598,"nodeType":"Block","src":"1786:208:21","statements":[{"assignments":[2565],"declarations":[{"constant":false,"id":2565,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:21","nodeType":"VariableDeclaration","scope":2598,"src":"1796:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2564,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2570,"initialValue":{"arguments":[{"id":2568,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1822:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2566,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:21","typeDescriptions":{}}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2571,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1840:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:21","memberName":"length","nodeType":"MemberAccess","src":"1840:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:21","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"IfStatement","src":"1836:72:21","trueBody":{"id":2579,"nodeType":"Block","src":"1858:50:21","statements":[{"errorCall":{"arguments":[{"id":2576,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1893:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2575,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1879:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"RevertStatement","src":"1872:25:21"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2589,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1965:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:21","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:21","typeDescriptions":{}}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2592,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1974:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:21","memberName":"length","nodeType":"MemberAccess","src":"1974:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:21","typeDescriptions":{}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2581,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1924:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"type(ShortString)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:21","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:21","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"functionReturnParameters":2563,"id":2597,"nodeType":"Return","src":"1917:70:21"}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"1533:170:21","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:21","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"str","nameLocation":"1745:3:21","nodeType":"VariableDeclaration","scope":2599,"src":"1731:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:21"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"1773:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2561,"nodeType":"UserDefinedTypeName","pathNode":{"id":2560,"name":"ShortString","nameLocations":["1773:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"1773:11:21"},"referencedDeclaration":2545,"src":"1773:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:21"},"scope":2756,"src":"1708:286:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"2152:331:21","statements":[{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"len","nameLocation":"2170:3:21","nodeType":"VariableDeclaration","scope":2624,"src":"2162:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2613,"initialValue":{"arguments":[{"id":2611,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"2187:4:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"id":2610,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:21"},{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"str","nameLocation":"2294:3:21","nodeType":"VariableDeclaration","scope":2624,"src":"2280:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2620,"initialValue":{"arguments":[{"hexValue":"3332","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2616,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:21"},{"AST":{"nativeSrc":"2376:81:21","nodeType":"YulBlock","src":"2376:81:21","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:21","nodeType":"YulIdentifier","src":"2397:3:21"},{"name":"len","nativeSrc":"2402:3:21","nodeType":"YulIdentifier","src":"2402:3:21"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:21","nodeType":"YulIdentifier","src":"2390:6:21"},"nativeSrc":"2390:16:21","nodeType":"YulFunctionCall","src":"2390:16:21"},"nativeSrc":"2390:16:21","nodeType":"YulExpressionStatement","src":"2390:16:21"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:21","nodeType":"YulIdentifier","src":"2430:3:21"},{"kind":"number","nativeSrc":"2435:4:21","nodeType":"YulLiteral","src":"2435:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:21","nodeType":"YulIdentifier","src":"2426:3:21"},"nativeSrc":"2426:14:21","nodeType":"YulFunctionCall","src":"2426:14:21"},{"name":"sstr","nativeSrc":"2442:4:21","nodeType":"YulIdentifier","src":"2442:4:21"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:21","nodeType":"YulIdentifier","src":"2419:6:21"},"nativeSrc":"2419:28:21","nodeType":"YulFunctionCall","src":"2419:28:21"},"nativeSrc":"2419:28:21","nodeType":"YulExpressionStatement","src":"2419:28:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2609,"isOffset":false,"isSlot":false,"src":"2402:3:21","valueSize":1},{"declaration":2603,"isOffset":false,"isSlot":false,"src":"2442:4:21","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"2397:3:21","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"2430:3:21","valueSize":1}],"id":2621,"nodeType":"InlineAssembly","src":"2367:90:21"},{"expression":{"id":2622,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2473:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2607,"id":2623,"nodeType":"Return","src":"2466:10:21"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"2000:73:21","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:21","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:21","nodeType":"VariableDeclaration","scope":2625,"src":"2096:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2602,"nodeType":"UserDefinedTypeName","pathNode":{"id":2601,"name":"ShortString","nameLocations":["2096:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"2096:11:21"},"referencedDeclaration":2545,"src":"2096:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:21"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"2137:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2605,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:21"},"scope":2756,"src":"2078:405:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"2625:175:21","statements":[{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"result","nameLocation":"2643:6:21","nodeType":"VariableDeclaration","scope":2656,"src":"2635:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2640,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"2679:4:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"expression":{"id":2638,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2660:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"type(ShortString)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:21","typeDescriptions":{}}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"2706:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:21","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2653,"nodeType":"IfStatement","src":"2702:69:21","trueBody":{"id":2652,"nodeType":"Block","src":"2719:52:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2649,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"2740:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2651,"nodeType":"RevertStatement","src":"2733:27:21"}]}},{"expression":{"id":2654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"2787:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2633,"id":2655,"nodeType":"Return","src":"2780:13:21"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"2489:61:21","text":" @dev Return the length of a `ShortString`."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:21","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:21","nodeType":"VariableDeclaration","scope":2657,"src":"2575:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2628,"nodeType":"UserDefinedTypeName","pathNode":{"id":2627,"name":"ShortString","nameLocations":["2575:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"2575:11:21"},"referencedDeclaration":2545,"src":"2575:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:21"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"2616:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:21"},"scope":2756,"src":"2555:245:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"3023:231:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"3043:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2668,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:21","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:21","memberName":"length","nodeType":"MemberAccess","src":"3037:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2694,"nodeType":"Block","src":"3121:127:21","statements":[{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2683,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"3161:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2680,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3135:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2866_$","typeString":"type(library StorageSlot)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:21","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2843,"src":"3135:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2774_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2774_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:21","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"3135:38:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"3176:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2688,"nodeType":"ExpressionStatement","src":"3135:46:21"},{"expression":{"arguments":[{"id":2691,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"3219:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2689,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3202:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"type(ShortString)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:21","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:21","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"functionReturnParameters":2667,"id":2693,"nodeType":"Return","src":"3195:42:21"}]},"id":2695,"nodeType":"IfStatement","src":"3033:215:21","trueBody":{"id":2679,"nodeType":"Block","src":"3063:52:21","statements":[{"expression":{"arguments":[{"id":2676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"3098:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2675,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3084:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"functionReturnParameters":2667,"id":2678,"nodeType":"Return","src":"3077:27:21"}]}}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"2806:103:21","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:21","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"value","nameLocation":"2963:5:21","nodeType":"VariableDeclaration","scope":2697,"src":"2949:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"store","nameLocation":"2985:5:21","nodeType":"VariableDeclaration","scope":2697,"src":"2970:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2661,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:21"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"3010:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2665,"nodeType":"UserDefinedTypeName","pathNode":{"id":2664,"name":"ShortString","nameLocations":["3010:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"3010:11:21"},"referencedDeclaration":2545,"src":"3010:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:21"},"scope":2756,"src":"2914:340:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"3494:158:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"3527:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"expression":{"id":2708,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3508:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"type(ShortString)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2712,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"3537:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2721,"nodeType":"Block","src":"3609:37:21","statements":[{"expression":{"id":2719,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"3630:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2707,"id":2720,"nodeType":"Return","src":"3623:12:21"}]},"id":2722,"nodeType":"IfStatement","src":"3504:142:21","trueBody":{"id":2718,"nodeType":"Block","src":"3556:47:21","statements":[{"expression":{"arguments":[{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"3586:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"id":2714,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"3577:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2707,"id":2717,"nodeType":"Return","src":"3570:22:21"}]}}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"3260:120:21","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:21","nodeType":"FunctionDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"value","nameLocation":"3427:5:21","nodeType":"VariableDeclaration","scope":2724,"src":"3415:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2700,"nodeType":"UserDefinedTypeName","pathNode":{"id":2699,"name":"ShortString","nameLocations":["3415:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"3415:11:21"},"referencedDeclaration":2545,"src":"3415:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"store","nameLocation":"3449:5:21","nodeType":"VariableDeclaration","scope":2724,"src":"3434:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2702,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:21"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"3479:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2705,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:21"},"scope":2756,"src":"3385:267:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"4132:174:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4165:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"expression":{"id":2735,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4146:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"type(ShortString)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2739,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"4175:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2752,"nodeType":"Block","src":"4249:51:21","statements":[{"expression":{"expression":{"arguments":[{"id":2748,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"4276:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2746,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:21","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:21","memberName":"length","nodeType":"MemberAccess","src":"4270:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2734,"id":2751,"nodeType":"Return","src":"4263:26:21"}]},"id":2753,"nodeType":"IfStatement","src":"4142:158:21","trueBody":{"id":2745,"nodeType":"Block","src":"4194:49:21","statements":[{"expression":{"arguments":[{"id":2742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4226:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}],"id":2741,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"4215:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2545_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2734,"id":2744,"nodeType":"Return","src":"4208:24:21"}]}}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"3658:364:21","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:21","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"value","nameLocation":"4071:5:21","nodeType":"VariableDeclaration","scope":2755,"src":"4059:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":2727,"nodeType":"UserDefinedTypeName","pathNode":{"id":2726,"name":"ShortString","nameLocations":["4059:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"4059:11:21"},"referencedDeclaration":2545,"src":"4059:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"store","nameLocation":"4093:5:21","nodeType":"VariableDeclaration","scope":2755,"src":"4078:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2729,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:21"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2755,"src":"4123:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:21"},"scope":2756,"src":"4027:279:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2757,"src":"1255:3053:21","usedErrors":[2553,2555],"usedEvents":[]}],"src":"106:4203:21"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":22,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2866]},"id":2867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2758,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"219:1025:22","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2866,"linearizedBaseContracts":[2866],"name":"StorageSlot","nameLocation":"1253:11:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2762,"members":[{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"1308:5:22","nodeType":"VariableDeclaration","scope":2762,"src":"1300:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:22","nodeType":"StructDefinition","scope":2866,"src":"1271:49:22","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2765,"members":[{"constant":false,"id":2764,"mutability":"mutable","name":"value","nameLocation":"1360:5:22","nodeType":"VariableDeclaration","scope":2765,"src":"1355:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2763,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:22","nodeType":"StructDefinition","scope":2866,"src":"1326:46:22","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2768,"members":[{"constant":false,"id":2767,"mutability":"mutable","name":"value","nameLocation":"1415:5:22","nodeType":"VariableDeclaration","scope":2768,"src":"1407:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:22","nodeType":"StructDefinition","scope":2866,"src":"1378:49:22","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2771,"members":[{"constant":false,"id":2770,"mutability":"mutable","name":"value","nameLocation":"1470:5:22","nodeType":"VariableDeclaration","scope":2771,"src":"1462:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:22","nodeType":"StructDefinition","scope":2866,"src":"1433:49:22","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2774,"members":[{"constant":false,"id":2773,"mutability":"mutable","name":"value","nameLocation":"1523:5:22","nodeType":"VariableDeclaration","scope":2774,"src":"1516:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:22","nodeType":"StructDefinition","scope":2866,"src":"1488:47:22","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2777,"members":[{"constant":false,"id":2776,"mutability":"mutable","name":"value","nameLocation":"1574:5:22","nodeType":"VariableDeclaration","scope":2777,"src":"1568:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2775,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:22","nodeType":"StructDefinition","scope":2866,"src":"1541:45:22","visibility":"public"},{"body":{"id":2787,"nodeType":"Block","src":"1768:106:22","statements":[{"AST":{"nativeSrc":"1830:38:22","nodeType":"YulBlock","src":"1830:38:22","statements":[{"nativeSrc":"1844:14:22","nodeType":"YulAssignment","src":"1844:14:22","value":{"name":"slot","nativeSrc":"1854:4:22","nodeType":"YulIdentifier","src":"1854:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:22","nodeType":"YulIdentifier","src":"1844:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2784,"isOffset":false,"isSlot":true,"src":"1844:6:22","suffix":"slot","valueSize":1},{"declaration":2780,"isOffset":false,"isSlot":false,"src":"1854:4:22","valueSize":1}],"id":2786,"nodeType":"InlineAssembly","src":"1821:47:22"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"1592:87:22","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2788,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:22","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"slot","nameLocation":"1716:4:22","nodeType":"VariableDeclaration","scope":2788,"src":"1708:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:22"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"r","nameLocation":"1765:1:22","nodeType":"VariableDeclaration","scope":2788,"src":"1745:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2762_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2783,"nodeType":"UserDefinedTypeName","pathNode":{"id":2782,"name":"AddressSlot","nameLocations":["1745:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2762,"src":"1745:11:22"},"referencedDeclaration":2762,"src":"1745:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2762_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:22"},"scope":2866,"src":"1684:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2798,"nodeType":"Block","src":"2056:106:22","statements":[{"AST":{"nativeSrc":"2118:38:22","nodeType":"YulBlock","src":"2118:38:22","statements":[{"nativeSrc":"2132:14:22","nodeType":"YulAssignment","src":"2132:14:22","value":{"name":"slot","nativeSrc":"2142:4:22","nodeType":"YulIdentifier","src":"2142:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:22","nodeType":"YulIdentifier","src":"2132:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2795,"isOffset":false,"isSlot":true,"src":"2132:6:22","suffix":"slot","valueSize":1},{"declaration":2791,"isOffset":false,"isSlot":false,"src":"2142:4:22","valueSize":1}],"id":2797,"nodeType":"InlineAssembly","src":"2109:47:22"}]},"documentation":{"id":2789,"nodeType":"StructuredDocumentation","src":"1880:87:22","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:22","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"slot","nameLocation":"2004:4:22","nodeType":"VariableDeclaration","scope":2799,"src":"1996:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:22"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"r","nameLocation":"2053:1:22","nodeType":"VariableDeclaration","scope":2799,"src":"2033:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2765_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2794,"nodeType":"UserDefinedTypeName","pathNode":{"id":2793,"name":"BooleanSlot","nameLocations":["2033:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"2033:11:22"},"referencedDeclaration":2765,"src":"2033:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2765_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:22"},"scope":2866,"src":"1972:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"2344:106:22","statements":[{"AST":{"nativeSrc":"2406:38:22","nodeType":"YulBlock","src":"2406:38:22","statements":[{"nativeSrc":"2420:14:22","nodeType":"YulAssignment","src":"2420:14:22","value":{"name":"slot","nativeSrc":"2430:4:22","nodeType":"YulIdentifier","src":"2430:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:22","nodeType":"YulIdentifier","src":"2420:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2806,"isOffset":false,"isSlot":true,"src":"2420:6:22","suffix":"slot","valueSize":1},{"declaration":2802,"isOffset":false,"isSlot":false,"src":"2430:4:22","valueSize":1}],"id":2808,"nodeType":"InlineAssembly","src":"2397:47:22"}]},"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"2168:87:22","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:22","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"slot","nameLocation":"2292:4:22","nodeType":"VariableDeclaration","scope":2810,"src":"2284:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:22"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"r","nameLocation":"2341:1:22","nodeType":"VariableDeclaration","scope":2810,"src":"2321:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2768_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2805,"nodeType":"UserDefinedTypeName","pathNode":{"id":2804,"name":"Bytes32Slot","nameLocations":["2321:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2768,"src":"2321:11:22"},"referencedDeclaration":2768,"src":"2321:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2768_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:22"},"scope":2866,"src":"2260:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"2632:106:22","statements":[{"AST":{"nativeSrc":"2694:38:22","nodeType":"YulBlock","src":"2694:38:22","statements":[{"nativeSrc":"2708:14:22","nodeType":"YulAssignment","src":"2708:14:22","value":{"name":"slot","nativeSrc":"2718:4:22","nodeType":"YulIdentifier","src":"2718:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:22","nodeType":"YulIdentifier","src":"2708:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2817,"isOffset":false,"isSlot":true,"src":"2708:6:22","suffix":"slot","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"2718:4:22","valueSize":1}],"id":2819,"nodeType":"InlineAssembly","src":"2685:47:22"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"2456:87:22","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:22","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"slot","nameLocation":"2580:4:22","nodeType":"VariableDeclaration","scope":2821,"src":"2572:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:22"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"r","nameLocation":"2629:1:22","nodeType":"VariableDeclaration","scope":2821,"src":"2609:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2771_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"Uint256Slot","nameLocations":["2609:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"2609:11:22"},"referencedDeclaration":2771,"src":"2609:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2771_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:22"},"scope":2866,"src":"2548:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2831,"nodeType":"Block","src":"2917:106:22","statements":[{"AST":{"nativeSrc":"2979:38:22","nodeType":"YulBlock","src":"2979:38:22","statements":[{"nativeSrc":"2993:14:22","nodeType":"YulAssignment","src":"2993:14:22","value":{"name":"slot","nativeSrc":"3003:4:22","nodeType":"YulIdentifier","src":"3003:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:22","nodeType":"YulIdentifier","src":"2993:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2828,"isOffset":false,"isSlot":true,"src":"2993:6:22","suffix":"slot","valueSize":1},{"declaration":2824,"isOffset":false,"isSlot":false,"src":"3003:4:22","valueSize":1}],"id":2830,"nodeType":"InlineAssembly","src":"2970:47:22"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"2744:86:22","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2832,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:22","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"slot","nameLocation":"2866:4:22","nodeType":"VariableDeclaration","scope":2832,"src":"2858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:22"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"r","nameLocation":"2914:1:22","nodeType":"VariableDeclaration","scope":2832,"src":"2895:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2774_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2827,"nodeType":"UserDefinedTypeName","pathNode":{"id":2826,"name":"StringSlot","nameLocations":["2895:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":2774,"src":"2895:10:22"},"referencedDeclaration":2774,"src":"2895:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2774_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:22"},"scope":2866,"src":"2835:188:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"3225:112:22","statements":[{"AST":{"nativeSrc":"3287:44:22","nodeType":"YulBlock","src":"3287:44:22","statements":[{"nativeSrc":"3301:20:22","nodeType":"YulAssignment","src":"3301:20:22","value":{"name":"store.slot","nativeSrc":"3311:10:22","nodeType":"YulIdentifier","src":"3311:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:22","nodeType":"YulIdentifier","src":"3301:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2839,"isOffset":false,"isSlot":true,"src":"3301:6:22","suffix":"slot","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":true,"src":"3311:10:22","suffix":"slot","valueSize":1}],"id":2841,"nodeType":"InlineAssembly","src":"3278:53:22"}]},"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"3029:101:22","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:22","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"store","nameLocation":"3173:5:22","nodeType":"VariableDeclaration","scope":2843,"src":"3158:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:22"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"r","nameLocation":"3222:1:22","nodeType":"VariableDeclaration","scope":2843,"src":"3203:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2774_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"StringSlot","nameLocations":["3203:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":2774,"src":"3203:10:22"},"referencedDeclaration":2774,"src":"3203:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2774_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:22"},"scope":2866,"src":"3135:202:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"3513:106:22","statements":[{"AST":{"nativeSrc":"3575:38:22","nodeType":"YulBlock","src":"3575:38:22","statements":[{"nativeSrc":"3589:14:22","nodeType":"YulAssignment","src":"3589:14:22","value":{"name":"slot","nativeSrc":"3599:4:22","nodeType":"YulIdentifier","src":"3599:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:22","nodeType":"YulIdentifier","src":"3589:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":true,"src":"3589:6:22","suffix":"slot","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"3599:4:22","valueSize":1}],"id":2852,"nodeType":"InlineAssembly","src":"3566:47:22"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"3343:85:22","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:22","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"slot","nameLocation":"3463:4:22","nodeType":"VariableDeclaration","scope":2854,"src":"3455:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:22"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"r","nameLocation":"3510:1:22","nodeType":"VariableDeclaration","scope":2854,"src":"3492:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2777_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"BytesSlot","nameLocations":["3492:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"3492:9:22"},"referencedDeclaration":2777,"src":"3492:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2777_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:22"},"scope":2866,"src":"3433:186:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2864,"nodeType":"Block","src":"3816:112:22","statements":[{"AST":{"nativeSrc":"3878:44:22","nodeType":"YulBlock","src":"3878:44:22","statements":[{"nativeSrc":"3892:20:22","nodeType":"YulAssignment","src":"3892:20:22","value":{"name":"store.slot","nativeSrc":"3902:10:22","nodeType":"YulIdentifier","src":"3902:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:22","nodeType":"YulIdentifier","src":"3892:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2861,"isOffset":false,"isSlot":true,"src":"3892:6:22","suffix":"slot","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":true,"src":"3902:10:22","suffix":"slot","valueSize":1}],"id":2863,"nodeType":"InlineAssembly","src":"3869:53:22"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"3625:99:22","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:22","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"store","nameLocation":"3765:5:22","nodeType":"VariableDeclaration","scope":2865,"src":"3751:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:22"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"r","nameLocation":"3813:1:22","nodeType":"VariableDeclaration","scope":2865,"src":"3795:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2777_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2860,"nodeType":"UserDefinedTypeName","pathNode":{"id":2859,"name":"BytesSlot","nameLocations":["3795:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"3795:9:22"},"referencedDeclaration":2777,"src":"3795:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2777_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:22"},"scope":2866,"src":"3729:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2867,"src":"1245:2685:22","usedErrors":[],"usedEvents":[]}],"src":"193:3738:22"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":23,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4824],"SignedMath":[6684],"Strings":[3121]},"id":3122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2868,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":4825,"src":"127:37:23","symbolAliases":[{"foreign":{"id":2869,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"135:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":6685,"src":"165:49:23","symbolAliases":[{"foreign":{"id":2871,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"173:10:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"216:34:23","text":" @dev String operations."},"fullyImplemented":true,"id":3121,"linearizedBaseContracts":[3121],"name":"Strings","nameLocation":"259:7:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2876,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:23","nodeType":"VariableDeclaration","scope":3121,"src":"273:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2874,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2879,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:23","nodeType":"VariableDeclaration","scope":3121,"src":"335:42:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2877,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"384:81:23","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2886,"name":"StringsInsufficientHexLength","nameLocation":"476:28:23","nodeType":"ErrorDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"value","nameLocation":"513:5:23","nodeType":"VariableDeclaration","scope":2886,"src":"505:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"length","nameLocation":"528:6:23","nodeType":"VariableDeclaration","scope":2886,"src":"520:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:23"},"src":"470:66:23"},{"body":{"id":2933,"nodeType":"Block","src":"708:627:23","statements":[{"id":2932,"nodeType":"UncheckedBlock","src":"718:611:23","statements":[{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"length","nameLocation":"750:6:23","nodeType":"VariableDeclaration","scope":2932,"src":"742:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"759:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:23","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4644,"src":"759:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:23"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"buffer","nameLocation":"808:6:23","nodeType":"VariableDeclaration","scope":2932,"src":"794:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2903,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2909,"initialValue":{"arguments":[{"id":2907,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"828:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2905,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:23"},{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"ptr","nameLocation":"857:3:23","nodeType":"VariableDeclaration","scope":2932,"src":"849:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2912,"nodeType":"VariableDeclarationStatement","src":"849:11:23"},{"AST":{"nativeSrc":"930:67:23","nodeType":"YulBlock","src":"930:67:23","statements":[{"nativeSrc":"948:35:23","nodeType":"YulAssignment","src":"948:35:23","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:23","nodeType":"YulIdentifier","src":"959:6:23"},{"arguments":[{"kind":"number","nativeSrc":"971:2:23","nodeType":"YulLiteral","src":"971:2:23","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:23","nodeType":"YulIdentifier","src":"975:6:23"}],"functionName":{"name":"add","nativeSrc":"967:3:23","nodeType":"YulIdentifier","src":"967:3:23"},"nativeSrc":"967:15:23","nodeType":"YulFunctionCall","src":"967:15:23"}],"functionName":{"name":"add","nativeSrc":"955:3:23","nodeType":"YulIdentifier","src":"955:3:23"},"nativeSrc":"955:28:23","nodeType":"YulFunctionCall","src":"955:28:23"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:23","nodeType":"YulIdentifier","src":"948:3:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2904,"isOffset":false,"isSlot":false,"src":"959:6:23","valueSize":1},{"declaration":2895,"isOffset":false,"isSlot":false,"src":"975:6:23","valueSize":1},{"declaration":2911,"isOffset":false,"isSlot":false,"src":"948:3:23","valueSize":1}],"id":2913,"nodeType":"InlineAssembly","src":"921:76:23"},{"body":{"id":2928,"nodeType":"Block","src":"1023:269:23","statements":[{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:23","subExpression":{"id":2915,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"1041:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"1041:5:23"},{"AST":{"nativeSrc":"1124:86:23","nodeType":"YulBlock","src":"1124:86:23","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:23","nodeType":"YulIdentifier","src":"1154:3:23"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:23","nodeType":"YulIdentifier","src":"1168:5:23"},{"kind":"number","nativeSrc":"1175:2:23","nodeType":"YulLiteral","src":"1175:2:23","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:23","nodeType":"YulIdentifier","src":"1164:3:23"},"nativeSrc":"1164:14:23","nodeType":"YulFunctionCall","src":"1164:14:23"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:23","nodeType":"YulIdentifier","src":"1180:10:23"}],"functionName":{"name":"byte","nativeSrc":"1159:4:23","nodeType":"YulIdentifier","src":"1159:4:23"},"nativeSrc":"1159:32:23","nodeType":"YulFunctionCall","src":"1159:32:23"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:23","nodeType":"YulIdentifier","src":"1146:7:23"},"nativeSrc":"1146:46:23","nodeType":"YulFunctionCall","src":"1146:46:23"},"nativeSrc":"1146:46:23","nodeType":"YulExpressionStatement","src":"1146:46:23"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2876,"isOffset":false,"isSlot":false,"src":"1180:10:23","valueSize":1},{"declaration":2911,"isOffset":false,"isSlot":false,"src":"1154:3:23","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"1168:5:23","valueSize":1}],"id":2918,"nodeType":"InlineAssembly","src":"1115:95:23"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1227:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"1227:11:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1260:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2927,"nodeType":"IfStatement","src":"1256:21:23","trueBody":{"id":2926,"nodeType":"Break","src":"1272:5:23"}}]},"condition":{"hexValue":"74727565","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2929,"nodeType":"WhileStatement","src":"1010:282:23"},{"expression":{"id":2930,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"1312:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2893,"id":2931,"nodeType":"Return","src":"1305:13:23"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"542:90:23","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:23","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"663:5:23","nodeType":"VariableDeclaration","scope":2934,"src":"655:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:23"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"693:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:23"},"scope":3121,"src":"637:698:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2959,"nodeType":"Block","src":"1511:92:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"1542:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:23","trueExpression":{"hexValue":"2d","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"1588:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2952,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1573:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6684_$","typeString":"type(library SignedMath)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:23","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"1573:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1564:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2942,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:23","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:23","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:23","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2941,"id":2958,"nodeType":"Return","src":"1521:75:23"}]},"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"1341:89:23","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:23","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"value","nameLocation":"1466:5:23","nodeType":"VariableDeclaration","scope":2960,"src":"1459:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2936,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:23"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2960,"src":"1496:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2939,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:23"},"scope":3121,"src":"1435:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2979,"nodeType":"Block","src":"1782:100:23","statements":[{"id":2978,"nodeType":"UncheckedBlock","src":"1792:84:23","statements":[{"expression":{"arguments":[{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"1835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"1854:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2970,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"1842:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:23","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4766,"src":"1842:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2968,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2980,3063,3083],"referencedDeclaration":3063,"src":"1823:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2967,"id":2977,"nodeType":"Return","src":"1816:49:23"}]}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"1609:94:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:23","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"value","nameLocation":"1737:5:23","nodeType":"VariableDeclaration","scope":2980,"src":"1729:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:23"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"1767:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2965,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:23"},"scope":3121,"src":"1708:174:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3062,"nodeType":"Block","src":"2095:435:23","statements":[{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:23","nodeType":"VariableDeclaration","scope":3062,"src":"2105:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2993,"initialValue":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"2126:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:23"},{"assignments":[2995],"declarations":[{"constant":false,"id":2995,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:23","nodeType":"VariableDeclaration","scope":3062,"src":"2141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2994,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3004,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2999,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2177:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2996,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:23"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3005,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2198:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3007,"indexExpression":{"hexValue":"30","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3010,"nodeType":"ExpressionStatement","src":"2198:15:23"},{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2223:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3013,"indexExpression":{"hexValue":"31","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3016,"nodeType":"ExpressionStatement","src":"2223:15:23"},{"body":{"id":3045,"nodeType":"Block","src":"2293:95:23","statements":[{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3031,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2307:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3033,"indexExpression":{"id":3032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"2314:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3034,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"2319:10:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3038,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2330:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3040,"nodeType":"ExpressionStatement","src":"2307:40:23"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3041,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2361:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"2361:16:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"2281:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"initializationExpression":{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"i","nameLocation":"2261:1:23","nodeType":"VariableDeclaration","scope":3046,"src":"2253:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3020,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2269:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:23"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:23","subExpression":{"id":3028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"2290:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"nodeType":"ExpressionStatement","src":"2288:3:23"},"nodeType":"ForStatement","src":"2248:140:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2401:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3056,"nodeType":"IfStatement","src":"2397:96:23","trueBody":{"id":3055,"nodeType":"Block","src":"2418:75:23","statements":[{"errorCall":{"arguments":[{"id":3051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"2468:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3052,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2475:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"2439:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3054,"nodeType":"RevertStatement","src":"2432:50:23"}]}},{"expression":{"arguments":[{"id":3059,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2516:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3057,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:23","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2989,"id":3061,"nodeType":"Return","src":"2502:21:23"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"1888:112:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3063,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:23","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"value","nameLocation":"2034:5:23","nodeType":"VariableDeclaration","scope":3063,"src":"2026:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"length","nameLocation":"2049:6:23","nodeType":"VariableDeclaration","scope":3063,"src":"2041:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:23"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3063,"src":"2080:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2987,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:23"},"scope":3121,"src":"2005:525:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3082,"nodeType":"Block","src":"2762:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3076,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2807:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3074,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:23","typeDescriptions":{}}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:23","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3079,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2815:14:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3071,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2980,3063,3083],"referencedDeclaration":3063,"src":"2779:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3070,"id":3081,"nodeType":"Return","src":"2772:58:23"}]},"documentation":{"id":3064,"nodeType":"StructuredDocumentation","src":"2536:148:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:23","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"addr","nameLocation":"2718:4:23","nodeType":"VariableDeclaration","scope":3083,"src":"2710:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:23"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"2747:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3068,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:23"},"scope":3121,"src":"2689:148:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3119,"nodeType":"Block","src":"2992:104:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3015:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3093,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:23","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:23","memberName":"length","nodeType":"MemberAccess","src":"3009:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3034:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3098,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:23","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:23","memberName":"length","nodeType":"MemberAccess","src":"3028:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3063:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3105,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:23","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3104,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3086:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:23","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3110,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3092,"id":3118,"nodeType":"Return","src":"3002:87:23"}]},"documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"2843:66:23","text":" @dev Returns true if the two strings are equal."},"id":3120,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:23","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"a","nameLocation":"2943:1:23","nodeType":"VariableDeclaration","scope":3120,"src":"2929:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3085,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"b","nameLocation":"2960:1:23","nodeType":"VariableDeclaration","scope":3120,"src":"2946:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:23"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"2986:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:23"},"scope":3121,"src":"2914:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3122,"src":"251:2847:23","usedErrors":[2886],"usedEvents":[]}],"src":"101:2998:23"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":24,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3469]},"id":3470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3123,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"138:205:24","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3469,"linearizedBaseContracts":[3469],"name":"ECDSA","nameLocation":"352:5:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3129,"members":[{"id":3125,"name":"NoError","nameLocation":"392:7:24","nodeType":"EnumValue","src":"392:7:24"},{"id":3126,"name":"InvalidSignature","nameLocation":"409:16:24","nodeType":"EnumValue","src":"409:16:24"},{"id":3127,"name":"InvalidSignatureLength","nameLocation":"435:22:24","nodeType":"EnumValue","src":"435:22:24"},{"id":3128,"name":"InvalidSignatureS","nameLocation":"467:17:24","nodeType":"EnumValue","src":"467:17:24"}],"name":"RecoverError","nameLocation":"369:12:24","nodeType":"EnumDefinition","src":"364:126:24"},{"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"496:63:24","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3132,"name":"ECDSAInvalidSignature","nameLocation":"570:21:24","nodeType":"ErrorDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[],"src":"591:2:24"},"src":"564:30:24"},{"documentation":{"id":3133,"nodeType":"StructuredDocumentation","src":"600:60:24","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3137,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:24","nodeType":"ErrorDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"length","nameLocation":"707:6:24","nodeType":"VariableDeclaration","scope":3137,"src":"699:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:24"},"src":"665:50:24"},{"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"721:85:24","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3142,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:24","nodeType":"ErrorDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"s","nameLocation":"848:1:24","nodeType":"VariableDeclaration","scope":3142,"src":"840:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:24"},"src":"811:40:24"},{"body":{"id":3194,"nodeType":"Block","src":"2242:653:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3157,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"2256:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:24","memberName":"length","nodeType":"MemberAccess","src":"2256:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3192,"nodeType":"Block","src":"2781:108:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3179,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:24","typeDescriptions":{}}},"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3183,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2815:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"2815:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3187,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"2860:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:24","memberName":"length","nodeType":"MemberAccess","src":"2860:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:24","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3156,"id":3191,"nodeType":"Return","src":"2795:83:24"}]},"id":3193,"nodeType":"IfStatement","src":"2252:637:24","trueBody":{"id":3178,"nodeType":"Block","src":"2280:495:24","statements":[{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"r","nameLocation":"2302:1:24","nodeType":"VariableDeclaration","scope":3178,"src":"2294:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3163,"nodeType":"VariableDeclarationStatement","src":"2294:9:24"},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"s","nameLocation":"2325:1:24","nodeType":"VariableDeclaration","scope":3178,"src":"2317:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3166,"nodeType":"VariableDeclarationStatement","src":"2317:9:24"},{"assignments":[3168],"declarations":[{"constant":false,"id":3168,"mutability":"mutable","name":"v","nameLocation":"2346:1:24","nodeType":"VariableDeclaration","scope":3178,"src":"2340:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3167,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3169,"nodeType":"VariableDeclarationStatement","src":"2340:7:24"},{"AST":{"nativeSrc":"2548:171:24","nodeType":"YulBlock","src":"2548:171:24","statements":[{"nativeSrc":"2566:32:24","nodeType":"YulAssignment","src":"2566:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:24","nodeType":"YulIdentifier","src":"2581:9:24"},{"kind":"number","nativeSrc":"2592:4:24","nodeType":"YulLiteral","src":"2592:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:24","nodeType":"YulIdentifier","src":"2577:3:24"},"nativeSrc":"2577:20:24","nodeType":"YulFunctionCall","src":"2577:20:24"}],"functionName":{"name":"mload","nativeSrc":"2571:5:24","nodeType":"YulIdentifier","src":"2571:5:24"},"nativeSrc":"2571:27:24","nodeType":"YulFunctionCall","src":"2571:27:24"},"variableNames":[{"name":"r","nativeSrc":"2566:1:24","nodeType":"YulIdentifier","src":"2566:1:24"}]},{"nativeSrc":"2615:32:24","nodeType":"YulAssignment","src":"2615:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:24","nodeType":"YulIdentifier","src":"2630:9:24"},{"kind":"number","nativeSrc":"2641:4:24","nodeType":"YulLiteral","src":"2641:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:24","nodeType":"YulIdentifier","src":"2626:3:24"},"nativeSrc":"2626:20:24","nodeType":"YulFunctionCall","src":"2626:20:24"}],"functionName":{"name":"mload","nativeSrc":"2620:5:24","nodeType":"YulIdentifier","src":"2620:5:24"},"nativeSrc":"2620:27:24","nodeType":"YulFunctionCall","src":"2620:27:24"},"variableNames":[{"name":"s","nativeSrc":"2615:1:24","nodeType":"YulIdentifier","src":"2615:1:24"}]},{"nativeSrc":"2664:41:24","nodeType":"YulAssignment","src":"2664:41:24","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:24","nodeType":"YulLiteral","src":"2674:1:24","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:24","nodeType":"YulIdentifier","src":"2687:9:24"},{"kind":"number","nativeSrc":"2698:4:24","nodeType":"YulLiteral","src":"2698:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:24","nodeType":"YulIdentifier","src":"2683:3:24"},"nativeSrc":"2683:20:24","nodeType":"YulFunctionCall","src":"2683:20:24"}],"functionName":{"name":"mload","nativeSrc":"2677:5:24","nodeType":"YulIdentifier","src":"2677:5:24"},"nativeSrc":"2677:27:24","nodeType":"YulFunctionCall","src":"2677:27:24"}],"functionName":{"name":"byte","nativeSrc":"2669:4:24","nodeType":"YulIdentifier","src":"2669:4:24"},"nativeSrc":"2669:36:24","nodeType":"YulFunctionCall","src":"2669:36:24"},"variableNames":[{"name":"v","nativeSrc":"2664:1:24","nodeType":"YulIdentifier","src":"2664:1:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3162,"isOffset":false,"isSlot":false,"src":"2566:1:24","valueSize":1},{"declaration":3165,"isOffset":false,"isSlot":false,"src":"2615:1:24","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"2581:9:24","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"2630:9:24","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"2687:9:24","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"2664:1:24","valueSize":1}],"id":3170,"nodeType":"InlineAssembly","src":"2539:180:24"},{"expression":{"arguments":[{"id":3172,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"2750:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3173,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"2756:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"2759:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3175,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"2762:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3171,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3195,3275,3383],"referencedDeclaration":3383,"src":"2739:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3156,"id":3177,"nodeType":"Return","src":"2732:32:24"}]}}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"857:1267:24","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:24","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"hash","nameLocation":"2157:4:24","nodeType":"VariableDeclaration","scope":3195,"src":"2149:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"signature","nameLocation":"2176:9:24","nodeType":"VariableDeclaration","scope":3195,"src":"2163:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:24"},"returnParameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3195,"src":"2210:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3195,"src":"2219:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3152,"nodeType":"UserDefinedTypeName","pathNode":{"id":3151,"name":"RecoverError","nameLocations":["2219:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"2219:12:24"},"referencedDeclaration":3129,"src":"2219:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3195,"src":"2233:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:24"},"scope":3469,"src":"2129:766:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3224,"nodeType":"Block","src":"3789:168:24","statements":[{"assignments":[3206,3209,3211],"declarations":[{"constant":false,"id":3206,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:24","nodeType":"VariableDeclaration","scope":3224,"src":"3800:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"error","nameLocation":"3832:5:24","nodeType":"VariableDeclaration","scope":3224,"src":"3819:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3208,"nodeType":"UserDefinedTypeName","pathNode":{"id":3207,"name":"RecoverError","nameLocations":["3819:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"3819:12:24"},"referencedDeclaration":3129,"src":"3819:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:24","nodeType":"VariableDeclaration","scope":3224,"src":"3839:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3216,"initialValue":{"arguments":[{"id":3213,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"3870:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3214,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3876:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3212,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3195,3275,3383],"referencedDeclaration":3195,"src":"3859:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:24"},{"expression":{"arguments":[{"id":3218,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3908:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"id":3219,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"3915:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3217,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"3896:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3129_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3221,"nodeType":"ExpressionStatement","src":"3896:28:24"},{"expression":{"id":3222,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"3941:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3204,"id":3223,"nodeType":"Return","src":"3934:16:24"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"2901:796:24","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:24","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"hash","nameLocation":"3727:4:24","nodeType":"VariableDeclaration","scope":3225,"src":"3719:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"signature","nameLocation":"3746:9:24","nodeType":"VariableDeclaration","scope":3225,"src":"3733:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3199,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:24"},"returnParameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"3780:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:24"},"scope":3469,"src":"3702:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"4285:342:24","statements":[{"id":3273,"nodeType":"UncheckedBlock","src":"4295:326:24","statements":[{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"s","nameLocation":"4327:1:24","nodeType":"VariableDeclaration","scope":3273,"src":"4319:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3250,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3244,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"4331:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:24","typeDescriptions":{}}},"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:24"},{"assignments":[3252],"declarations":[{"constant":false,"id":3252,"mutability":"mutable","name":"v","nameLocation":"4528:1:24","nodeType":"VariableDeclaration","scope":3273,"src":"4522:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3251,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3265,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3257,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"4547:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:24","typeDescriptions":{}}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:24","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3253,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:24","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:24"},{"expression":{"arguments":[{"id":3267,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"4596:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3268,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4602:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3269,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"4605:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3270,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4608:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3266,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3195,3275,3383],"referencedDeclaration":3383,"src":"4585:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3241,"id":3272,"nodeType":"Return","src":"4578:32:24"}]}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"3963:205:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:24","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"hash","nameLocation":"4201:4:24","nodeType":"VariableDeclaration","scope":3275,"src":"4193:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"r","nameLocation":"4215:1:24","nodeType":"VariableDeclaration","scope":3275,"src":"4207:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"vs","nameLocation":"4226:2:24","nodeType":"VariableDeclaration","scope":3275,"src":"4218:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:24"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"4253:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"4262:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3237,"nodeType":"UserDefinedTypeName","pathNode":{"id":3236,"name":"RecoverError","nameLocations":["4262:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"4262:12:24"},"referencedDeclaration":3129,"src":"4262:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"4276:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:24"},"scope":3469,"src":"4173:454:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3307,"nodeType":"Block","src":"4840:164:24","statements":[{"assignments":[3288,3291,3293],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:24","nodeType":"VariableDeclaration","scope":3307,"src":"4851:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"error","nameLocation":"4883:5:24","nodeType":"VariableDeclaration","scope":3307,"src":"4870:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"RecoverError","nameLocations":["4870:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"4870:12:24"},"referencedDeclaration":3129,"src":"4870:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:24","nodeType":"VariableDeclaration","scope":3307,"src":"4890:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3299,"initialValue":{"arguments":[{"id":3295,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4921:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3296,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"4927:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3297,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"4930:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3294,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3195,3275,3383],"referencedDeclaration":3275,"src":"4910:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:24"},{"expression":{"arguments":[{"id":3301,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"4955:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"id":3302,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"4962:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3300,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"4943:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3129_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"ExpressionStatement","src":"4943:28:24"},{"expression":{"id":3305,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"4988:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3286,"id":3306,"nodeType":"Return","src":"4981:16:24"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"4633:116:24","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:24","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"hash","nameLocation":"4779:4:24","nodeType":"VariableDeclaration","scope":3308,"src":"4771:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"r","nameLocation":"4793:1:24","nodeType":"VariableDeclaration","scope":3308,"src":"4785:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"vs","nameLocation":"4804:2:24","nodeType":"VariableDeclaration","scope":3308,"src":"4796:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:24"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3308,"src":"4831:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:24"},"scope":3469,"src":"4754:250:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"5298:1372:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3329,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"6194:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:24","typeDescriptions":{}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"IfStatement","src":"6182:164:24","trueBody":{"id":3342,"nodeType":"Block","src":"6267:79:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:24","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3337,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6301:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"6301:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"id":3339,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"6333:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3326,"id":3341,"nodeType":"Return","src":"6281:54:24"}]}},{"assignments":[3345],"declarations":[{"constant":false,"id":3345,"mutability":"mutable","name":"signer","nameLocation":"6448:6:24","nodeType":"VariableDeclaration","scope":3382,"src":"6440:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3344,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3352,"initialValue":{"arguments":[{"id":3347,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"6467:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3348,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"6473:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"6476:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3350,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"6479:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3346,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"6495:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:24","typeDescriptions":{}}},"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3372,"nodeType":"IfStatement","src":"6491:113:24","trueBody":{"id":3371,"nodeType":"Block","src":"6517:87:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:24","typeDescriptions":{}}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3363,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6551:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3126,"src":"6551:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:24","typeDescriptions":{}}},"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3326,"id":3370,"nodeType":"Return","src":"6531:62:24"}]}},{"expression":{"components":[{"id":3373,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"6622:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3374,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6630:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3125,"src":"6630:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:24","typeDescriptions":{}}},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3326,"id":3381,"nodeType":"Return","src":"6614:49:24"}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"5010:125:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:24","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"hash","nameLocation":"5177:4:24","nodeType":"VariableDeclaration","scope":3383,"src":"5169:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"v","nameLocation":"5197:1:24","nodeType":"VariableDeclaration","scope":3383,"src":"5191:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3312,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"r","nameLocation":"5216:1:24","nodeType":"VariableDeclaration","scope":3383,"src":"5208:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"s","nameLocation":"5235:1:24","nodeType":"VariableDeclaration","scope":3383,"src":"5227:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:24"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"5266:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3319,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"5275:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3322,"nodeType":"UserDefinedTypeName","pathNode":{"id":3321,"name":"RecoverError","nameLocations":["5275:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"5275:12:24"},"referencedDeclaration":3129,"src":"5275:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"5289:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:24"},"scope":3469,"src":"5140:1530:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"6897:166:24","statements":[{"assignments":[3398,3401,3403],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:24","nodeType":"VariableDeclaration","scope":3418,"src":"6908:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"error","nameLocation":"6940:5:24","nodeType":"VariableDeclaration","scope":3418,"src":"6927:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3400,"nodeType":"UserDefinedTypeName","pathNode":{"id":3399,"name":"RecoverError","nameLocations":["6927:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"6927:12:24"},"referencedDeclaration":3129,"src":"6927:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:24","nodeType":"VariableDeclaration","scope":3418,"src":"6947:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3410,"initialValue":{"arguments":[{"id":3405,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"6978:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3406,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"6984:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3407,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"6987:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3408,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"6990:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3404,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3195,3275,3383],"referencedDeclaration":3383,"src":"6967:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3129_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:24"},{"expression":{"arguments":[{"id":3412,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"7014:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},{"id":3413,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"7021:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3411,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"7002:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3129_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3415,"nodeType":"ExpressionStatement","src":"7002:28:24"},{"expression":{"id":3416,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"7047:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3396,"id":3417,"nodeType":"Return","src":"7040:16:24"}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"6676:122:24","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:24","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"hash","nameLocation":"6828:4:24","nodeType":"VariableDeclaration","scope":3419,"src":"6820:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"v","nameLocation":"6840:1:24","nodeType":"VariableDeclaration","scope":3419,"src":"6834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3387,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"r","nameLocation":"6851:1:24","nodeType":"VariableDeclaration","scope":3419,"src":"6843:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"s","nameLocation":"6862:1:24","nodeType":"VariableDeclaration","scope":3419,"src":"6854:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:24"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"6888:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:24"},"scope":3469,"src":"6803:260:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"7268:460:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"7282:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3429,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7291:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3125,"src":"7291:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"7378:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3435,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7387:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3126,"src":"7387:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"7483:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3443,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7492:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"7492:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"7617:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3455,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7626:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3129_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"7626:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3463,"nodeType":"IfStatement","src":"7613:109:24","trueBody":{"id":3462,"nodeType":"Block","src":"7658:64:24","statements":[{"errorCall":{"arguments":[{"id":3459,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"7702:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3458,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"7679:22:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3461,"nodeType":"RevertStatement","src":"7672:39:24"}]}},"id":3464,"nodeType":"IfStatement","src":"7479:243:24","trueBody":{"id":3453,"nodeType":"Block","src":"7529:78:24","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3449,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"7586:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:24","typeDescriptions":{}}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"7550:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"RevertStatement","src":"7543:53:24"}]}},"id":3465,"nodeType":"IfStatement","src":"7374:348:24","trueBody":{"id":3441,"nodeType":"Block","src":"7418:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3438,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"7439:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"RevertStatement","src":"7432:30:24"}]}},"id":3466,"nodeType":"IfStatement","src":"7278:444:24","trueBody":{"id":3433,"nodeType":"Block","src":"7313:55:24","statements":[{"functionReturnParameters":3427,"id":3432,"nodeType":"Return","src":"7327:7:24"}]}}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"7069:122:24","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:24","nodeType":"FunctionDefinition","parameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"error","nameLocation":"7230:5:24","nodeType":"VariableDeclaration","scope":3468,"src":"7217:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3422,"nodeType":"UserDefinedTypeName","pathNode":{"id":3421,"name":"RecoverError","nameLocations":["7217:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"7217:12:24"},"referencedDeclaration":3129,"src":"7217:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3129","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:24","nodeType":"VariableDeclaration","scope":3468,"src":"7237:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:24"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[],"src":"7268:0:24"},"scope":3469,"src":"7196:532:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3470,"src":"344:7386:24","usedErrors":[3132,3137,3142],"usedEvents":[]}],"src":"112:7619:24"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":25,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3696],"IERC5267":[861],"MessageHashUtils":[3770],"ShortString":[2545],"ShortStrings":[2756]},"id":3697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3697,"sourceUnit":3771,"src":"139:56:25","symbolAliases":[{"foreign":{"id":3472,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"147:16:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3697,"sourceUnit":2757,"src":"196:62:25","symbolAliases":[{"foreign":{"id":3474,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"204:12:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3475,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"218:11:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3697,"sourceUnit":862,"src":"259:55:25","symbolAliases":[{"foreign":{"id":3477,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"267:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3480,"name":"IERC5267","nameLocations":["1988:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":861,"src":"1988:8:25"},"id":3481,"nodeType":"InheritanceSpecifier","src":"1988:8:25"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"316:1643:25","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3696,"linearizedBaseContracts":[3696,861],"name":"EIP712","nameLocation":"1978:6:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3483,"libraryName":{"id":3482,"name":"ShortStrings","nameLocations":["2009:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"2009:12:25"},"nodeType":"UsingForDirective","src":"2003:25:25"},{"constant":true,"id":3488,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:25","nodeType":"VariableDeclaration","scope":3696,"src":"2034:140:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3485,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3490,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:25","nodeType":"VariableDeclaration","scope":3696,"src":"2373:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3492,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:25","nodeType":"VariableDeclaration","scope":3696,"src":"2427:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3494,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:25","nodeType":"VariableDeclaration","scope":3696,"src":"2473:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3493,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3496,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:25","nodeType":"VariableDeclaration","scope":3696,"src":"2517:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3498,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:25","nodeType":"VariableDeclaration","scope":3696,"src":"2560:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3501,"mutability":"immutable","name":"_name","nameLocation":"2637:5:25","nodeType":"VariableDeclaration","scope":3696,"src":"2607:35:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":3500,"nodeType":"UserDefinedTypeName","pathNode":{"id":3499,"name":"ShortString","nameLocations":["2607:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"2607:11:25"},"referencedDeclaration":2545,"src":"2607:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3504,"mutability":"immutable","name":"_version","nameLocation":"2678:8:25","nodeType":"VariableDeclaration","scope":3696,"src":"2648:38:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"},"typeName":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"ShortString","nameLocations":["2648:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"2648:11:25"},"referencedDeclaration":2545,"src":"2648:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3506,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:25","nodeType":"VariableDeclaration","scope":3696,"src":"2692:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3505,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3508,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:25","nodeType":"VariableDeclaration","scope":3696,"src":"2726:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3507,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3565,"nodeType":"Block","src":"3383:376:25","statements":[{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3516,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"3393:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3519,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"3432:13:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3517,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"3401:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:25","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"3401:30:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2545_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"src":"3393:53:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"id":3522,"nodeType":"ExpressionStatement","src":"3393:53:25"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3523,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3456:8:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3526,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"3501:16:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3524,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3467:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:25","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"3467:33:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2545_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"src":"3456:62:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"id":3529,"nodeType":"ExpressionStatement","src":"3456:62:25"},{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3528:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3534,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"3558:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:25","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3531,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3538,"nodeType":"ExpressionStatement","src":"3528:36:25"},{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"3574:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3543,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3607:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3541,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:25","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3540,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3547,"nodeType":"ExpressionStatement","src":"3574:42:25"},{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3548,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3627:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"3627:30:25"},{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3553,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"3667:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3554,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"3692:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3557,"nodeType":"ExpressionStatement","src":"3667:48:25"},{"expression":{"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3725:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3561,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3559,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:25","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3564,"nodeType":"ExpressionStatement","src":"3725:27:25"}]},"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"2764:559:25","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3566,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"name","nameLocation":"3354:4:25","nodeType":"VariableDeclaration","scope":3566,"src":"3340:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3510,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"version","nameLocation":"3374:7:25","nodeType":"VariableDeclaration","scope":3566,"src":"3360:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3512,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:25"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[],"src":"3383:0:25"},"scope":3696,"src":"3328:431:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"3907:200:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:25","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3576,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3938:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3578,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3580,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3970:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3589,"nodeType":"Block","src":"4046:55:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3586,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"4067:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3571,"id":3588,"nodeType":"Return","src":"4060:30:25"}]},"id":3590,"nodeType":"IfStatement","src":"3917:184:25","trueBody":{"id":3585,"nodeType":"Block","src":"3986:54:25","statements":[{"expression":{"id":3583,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"4007:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3571,"id":3584,"nodeType":"Return","src":"4000:29:25"}]}}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"3765:75:25","text":" @dev Returns the domain separator for the current chain."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:25","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[],"src":"3872:2:25"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"3898:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:25"},"scope":3696,"src":"3845:262:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"4177:115:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":3600,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"4215:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3601,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4226:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3602,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4239:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3603,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3607,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:25","typeDescriptions":{}}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3598,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:25","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3597,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3596,"id":3611,"nodeType":"Return","src":"4187:98:25"}]},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:25","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"4143:2:25"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3613,"src":"4168:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:25"},"scope":3696,"src":"4113:179:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3628,"nodeType":"Block","src":"5003:90:25","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3623,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"5053:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3625,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"5075:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3621,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"5020:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3770_$","typeString":"type(library MessageHashUtils)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:25","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3769,"src":"5020:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3620,"id":3627,"nodeType":"Return","src":"5013:73:25"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"4298:614:25","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3629,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:25","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:25","nodeType":"VariableDeclaration","scope":3629,"src":"4943:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:25"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"4994:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:25"},"scope":3696,"src":"4917:176:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[860],"body":{"id":3670,"nodeType":"Block","src":"5472:229:25","statements":[{"expression":{"components":[{"hexValue":"0f","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3649,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"5533:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3651,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"5560:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:25","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3696","typeString":"contract EIP712"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3655,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:25","typeDescriptions":{}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:25","typeDescriptions":{}}},"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ArrayTypeName","src":"5672:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3647,"id":3669,"nodeType":"Return","src":"5482:212:25"}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"5099:40:25","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:25","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[],"src":"5165:2:25"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"fields","nameLocation":"5249:6:25","nodeType":"VariableDeclaration","scope":3671,"src":"5242:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3632,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"name","nameLocation":"5283:4:25","nodeType":"VariableDeclaration","scope":3671,"src":"5269:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3634,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"version","nameLocation":"5315:7:25","nodeType":"VariableDeclaration","scope":3671,"src":"5301:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3636,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:25","nodeType":"VariableDeclaration","scope":3671,"src":"5336:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:25","nodeType":"VariableDeclaration","scope":3671,"src":"5365:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3640,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"salt","nameLocation":"5412:4:25","nodeType":"VariableDeclaration","scope":3671,"src":"5404:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:25","nodeType":"VariableDeclaration","scope":3671,"src":"5430:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ArrayTypeName","src":"5430:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:25"},"scope":3696,"src":"5144:557:25","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3682,"nodeType":"Block","src":"6082:65:25","statements":[{"expression":{"arguments":[{"id":3679,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"6126:13:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3677,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"6099:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:25","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"6099:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2545_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3676,"id":3681,"nodeType":"Return","src":"6092:48:25"}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"5707:256:25","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3683,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:25","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[],"src":"6041:2:25"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"6067:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3674,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:25"},"scope":3696,"src":"6021:126:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"6537:71:25","statements":[{"expression":{"arguments":[{"id":3691,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6584:16:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3689,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"6554:8:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2545","typeString":"ShortString"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:25","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"6554:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2545_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2545_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3688,"id":3693,"nodeType":"Return","src":"6547:54:25"}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"6153:262:25","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:25","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"6496:2:25"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"6522:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3686,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:25"},"scope":3696,"src":"6473:135:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3697,"src":"1960:4650:25","usedErrors":[2553,2555],"usedEvents":[841]}],"src":"113:6498:25"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"id":26,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3770],"Strings":[3121]},"id":3771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3771,"sourceUnit":3122,"src":"149:39:26","symbolAliases":[{"foreign":{"id":3699,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"157:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"190:330:26","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3770,"linearizedBaseContracts":[3770],"name":"MessageHashUtils","nameLocation":"529:16:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":3710,"nodeType":"Block","src":"1314:368:26","statements":[{"AST":{"nativeSrc":"1376:300:26","nodeType":"YulBlock","src":"1376:300:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:26","nodeType":"YulLiteral","src":"1397:4:26","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:26","nodeType":"YulLiteral","src":"1403:34:26","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:26","nodeType":"YulIdentifier","src":"1390:6:26"},"nativeSrc":"1390:48:26","nodeType":"YulFunctionCall","src":"1390:48:26"},"nativeSrc":"1390:48:26","nodeType":"YulExpressionStatement","src":"1390:48:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:26","nodeType":"YulLiteral","src":"1499:4:26","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:26","nodeType":"YulIdentifier","src":"1505:11:26"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:26","nodeType":"YulIdentifier","src":"1492:6:26"},"nativeSrc":"1492:25:26","nodeType":"YulFunctionCall","src":"1492:25:26"},"nativeSrc":"1492:25:26","nodeType":"YulExpressionStatement","src":"1492:25:26"},{"nativeSrc":"1571:31:26","nodeType":"YulAssignment","src":"1571:31:26","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:26","nodeType":"YulLiteral","src":"1591:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:26","nodeType":"YulLiteral","src":"1597:4:26","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:26","nodeType":"YulIdentifier","src":"1581:9:26"},"nativeSrc":"1581:21:26","nodeType":"YulFunctionCall","src":"1581:21:26"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:26","nodeType":"YulIdentifier","src":"1571:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3707,"isOffset":false,"isSlot":false,"src":"1571:6:26","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"1505:11:26","valueSize":1}],"id":3709,"nodeType":"InlineAssembly","src":"1367:309:26"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"552:665:26","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:26","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:26","nodeType":"VariableDeclaration","scope":3711,"src":"1254:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:26"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"digest","nameLocation":"1306:6:26","nodeType":"VariableDeclaration","scope":3711,"src":"1298:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:26"},"scope":3770,"src":"1222:460:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3736,"nodeType":"Block","src":"2234:143:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3728,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"2343:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:26","memberName":"length","nodeType":"MemberAccess","src":"2343:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3726,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2326:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3121_$","typeString":"type(library Strings)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"2326:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3724,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:26","typeDescriptions":{}}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3732,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"2361:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3720,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:26","typeDescriptions":{}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:26","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3719,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3718,"id":3735,"nodeType":"Return","src":"2244:126:26"}]},"documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"1688:455:26","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3737,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:26","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"message","nameLocation":"2193:7:26","nodeType":"VariableDeclaration","scope":3737,"src":"2180:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3713,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:26"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"2225:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:26"},"scope":3770,"src":"2148:229:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"2831:80:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3751,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"2887:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3752,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"2898:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3748,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3747,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3746,"id":3755,"nodeType":"Return","src":"2841:63:26"}]},"documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"2383:332:26","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:26","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"validator","nameLocation":"2769:9:26","nodeType":"VariableDeclaration","scope":3757,"src":"2761:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"data","nameLocation":"2793:4:26","nodeType":"VariableDeclaration","scope":3757,"src":"2780:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3741,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:26"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3757,"src":"2822:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:26"},"scope":3770,"src":"2720:191:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"3462:292:26","statements":[{"AST":{"nativeSrc":"3524:224:26","nodeType":"YulBlock","src":"3524:224:26","statements":[{"nativeSrc":"3538:22:26","nodeType":"YulVariableDeclaration","src":"3538:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:26","nodeType":"YulLiteral","src":"3555:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:26","nodeType":"YulIdentifier","src":"3549:5:26"},"nativeSrc":"3549:11:26","nodeType":"YulFunctionCall","src":"3549:11:26"},"variables":[{"name":"ptr","nativeSrc":"3542:3:26","nodeType":"YulTypedName","src":"3542:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:26","nodeType":"YulIdentifier","src":"3580:3:26"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:26","nodeType":"YulLiteral","src":"3585:10:26","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:26","nodeType":"YulIdentifier","src":"3573:6:26"},"nativeSrc":"3573:23:26","nodeType":"YulFunctionCall","src":"3573:23:26"},"nativeSrc":"3573:23:26","nodeType":"YulExpressionStatement","src":"3573:23:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:26","nodeType":"YulIdentifier","src":"3620:3:26"},{"kind":"number","nativeSrc":"3625:4:26","nodeType":"YulLiteral","src":"3625:4:26","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:26","nodeType":"YulIdentifier","src":"3616:3:26"},"nativeSrc":"3616:14:26","nodeType":"YulFunctionCall","src":"3616:14:26"},{"name":"domainSeparator","nativeSrc":"3632:15:26","nodeType":"YulIdentifier","src":"3632:15:26"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:26","nodeType":"YulIdentifier","src":"3609:6:26"},"nativeSrc":"3609:39:26","nodeType":"YulFunctionCall","src":"3609:39:26"},"nativeSrc":"3609:39:26","nodeType":"YulExpressionStatement","src":"3609:39:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:26","nodeType":"YulIdentifier","src":"3672:3:26"},{"kind":"number","nativeSrc":"3677:4:26","nodeType":"YulLiteral","src":"3677:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:26","nodeType":"YulIdentifier","src":"3668:3:26"},"nativeSrc":"3668:14:26","nodeType":"YulFunctionCall","src":"3668:14:26"},{"name":"structHash","nativeSrc":"3684:10:26","nodeType":"YulIdentifier","src":"3684:10:26"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:26","nodeType":"YulIdentifier","src":"3661:6:26"},"nativeSrc":"3661:34:26","nodeType":"YulFunctionCall","src":"3661:34:26"},"nativeSrc":"3661:34:26","nodeType":"YulExpressionStatement","src":"3661:34:26"},{"nativeSrc":"3708:30:26","nodeType":"YulAssignment","src":"3708:30:26","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:26","nodeType":"YulIdentifier","src":"3728:3:26"},{"kind":"number","nativeSrc":"3733:4:26","nodeType":"YulLiteral","src":"3733:4:26","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:26","nodeType":"YulIdentifier","src":"3718:9:26"},"nativeSrc":"3718:20:26","nodeType":"YulFunctionCall","src":"3718:20:26"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:26","nodeType":"YulIdentifier","src":"3708:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3765,"isOffset":false,"isSlot":false,"src":"3708:6:26","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"3632:15:26","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"3684:10:26","valueSize":1}],"id":3767,"nodeType":"InlineAssembly","src":"3515:233:26"}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"2917:431:26","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:26","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:26","nodeType":"VariableDeclaration","scope":3769,"src":"3378:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:26","nodeType":"VariableDeclaration","scope":3769,"src":"3403:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:26"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"digest","nameLocation":"3454:6:26","nodeType":"VariableDeclaration","scope":3769,"src":"3446:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:26"},"scope":3770,"src":"3353:401:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3771,"src":"521:3235:26","usedErrors":[],"usedEvents":[]}],"src":"123:3634:26"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":27,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4824]},"id":4825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"129:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4824,"linearizedBaseContracts":[4824],"name":"Math","nameLocation":"211:4:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"222:50:27","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3776,"name":"MathOverflowedMulDiv","nameLocation":"283:20:27","nodeType":"ErrorDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[],"src":"303:2:27"},"src":"277:29:27"},{"canonicalName":"Math.Rounding","id":3781,"members":[{"id":3777,"name":"Floor","nameLocation":"336:5:27","nodeType":"EnumValue","src":"336:5:27"},{"id":3778,"name":"Ceil","nameLocation":"379:4:27","nodeType":"EnumValue","src":"379:4:27"},{"id":3779,"name":"Trunc","nameLocation":"421:5:27","nodeType":"EnumValue","src":"421:5:27"},{"id":3780,"name":"Expand","nameLocation":"451:6:27","nodeType":"EnumValue","src":"451:6:27"}],"name":"Rounding","nameLocation":"317:8:27","nodeType":"EnumDefinition","src":"312:169:27"},{"body":{"id":3812,"nodeType":"Block","src":"661:140:27","statements":[{"id":3811,"nodeType":"UncheckedBlock","src":"671:124:27","statements":[{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"c","nameLocation":"703:1:27","nodeType":"VariableDeclaration","scope":3811,"src":"695:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"707:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"711:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"730:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"734:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"726:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3792,"id":3805,"nodeType":"Return","src":"737:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3808,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"782:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3792,"id":3810,"nodeType":"Return","src":"768:16:27"}]}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"487:93:27","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:27","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"a","nameLocation":"609:1:27","nodeType":"VariableDeclaration","scope":3813,"src":"601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"b","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":3813,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:27"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"646:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3788,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"652:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:27"},"scope":4824,"src":"585:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"984:113:27","statements":[{"id":3839,"nodeType":"UncheckedBlock","src":"994:97:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1022:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1026:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"1018:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3824,"id":3831,"nodeType":"Return","src":"1029:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1074:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1078:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3824,"id":3838,"nodeType":"Return","src":"1060:20:27"}]}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"807:96:27","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:27","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"a","nameLocation":"932:1:27","nodeType":"VariableDeclaration","scope":3841,"src":"924:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"b","nameLocation":"943:1:27","nodeType":"VariableDeclaration","scope":3841,"src":"935:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:27"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"969:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3820,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"975:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:27"},"scope":4824,"src":"908:189:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3882,"nodeType":"Block","src":"1283:417:27","statements":[{"id":3881,"nodeType":"UncheckedBlock","src":"1293:401:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1551:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"1547:28:27","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3852,"id":3859,"nodeType":"Return","src":"1559:16:27"}},{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"c","nameLocation":"1597:1:27","nodeType":"VariableDeclaration","scope":3881,"src":"1589:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1605:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1624:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1628:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1633:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3876,"nodeType":"IfStatement","src":"1620:33:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3852,"id":3875,"nodeType":"Return","src":"1636:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3878,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1681:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3852,"id":3880,"nodeType":"Return","src":"1667:16:27"}]}]},"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"1103:99:27","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:27","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"a","nameLocation":"1231:1:27","nodeType":"VariableDeclaration","scope":3883,"src":"1223:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"b","nameLocation":"1242:1:27","nodeType":"VariableDeclaration","scope":3883,"src":"1234:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:27"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"1268:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3848,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"1274:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:27"},"scope":4824,"src":"1207:493:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3910,"nodeType":"Block","src":"1887:114:27","statements":[{"id":3909,"nodeType":"UncheckedBlock","src":"1897:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1925:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3902,"nodeType":"IfStatement","src":"1921:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3894,"id":3901,"nodeType":"Return","src":"1933:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1978:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1982:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3894,"id":3908,"nodeType":"Return","src":"1964:20:27"}]}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"1706:100:27","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3911,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:27","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"a","nameLocation":"1835:1:27","nodeType":"VariableDeclaration","scope":3911,"src":"1827:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"b","nameLocation":"1846:1:27","nodeType":"VariableDeclaration","scope":3911,"src":"1838:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:27"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"1872:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3890,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"1878:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:27"},"scope":4824,"src":"1811:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3938,"nodeType":"Block","src":"2198:114:27","statements":[{"id":3937,"nodeType":"UncheckedBlock","src":"2208:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2236:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"2232:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3922,"id":3929,"nodeType":"Return","src":"2244:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2289:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2293:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3922,"id":3936,"nodeType":"Return","src":"2275:20:27"}]}]},"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"2007:110:27","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:27","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"a","nameLocation":"2146:1:27","nodeType":"VariableDeclaration","scope":3939,"src":"2138:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"b","nameLocation":"2157:1:27","nodeType":"VariableDeclaration","scope":3939,"src":"2149:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:27"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"2183:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3918,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"2189:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:27"},"scope":4824,"src":"2122:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"2449:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"2466:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2470:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2478:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:27","trueExpression":{"id":3952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"2474:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3948,"id":3955,"nodeType":"Return","src":"2459:20:27"}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"2318:59:27","text":" @dev Returns the largest of two numbers."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:27","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"a","nameLocation":"2403:1:27","nodeType":"VariableDeclaration","scope":3957,"src":"2395:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"b","nameLocation":"2414:1:27","nodeType":"VariableDeclaration","scope":3957,"src":"2406:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:27"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"2440:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:27"},"scope":4824,"src":"2382:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"2624:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2641:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"2645:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"2653:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:27","trueExpression":{"id":3970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2649:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3966,"id":3973,"nodeType":"Return","src":"2634:20:27"}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"2492:60:27","text":" @dev Returns the smallest of two numbers."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:27","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"a","nameLocation":"2578:1:27","nodeType":"VariableDeclaration","scope":3975,"src":"2570:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"b","nameLocation":"2589:1:27","nodeType":"VariableDeclaration","scope":3975,"src":"2581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:27"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"2615:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:27"},"scope":4824,"src":"2557:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"2845:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2900:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2904:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2910:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2914:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3984,"id":3996,"nodeType":"Return","src":"2892:28:27"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"2667:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:27","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"a","nameLocation":"2799:1:27","nodeType":"VariableDeclaration","scope":3998,"src":"2791:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"b","nameLocation":"2810:1:27","nodeType":"VariableDeclaration","scope":3998,"src":"2802:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:27"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"2836:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:27"},"scope":4824,"src":"2774:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4031,"nodeType":"Block","src":"3219:260:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3233:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"IfStatement","src":"3229:127:27","trueBody":{"id":4015,"nodeType":"Block","src":"3241:115:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3340:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4012,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3344:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4014,"nodeType":"Return","src":"3333:12:27"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3444:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3458:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3467:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:27","trueExpression":{"hexValue":"30","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4030,"nodeType":"Return","src":"3437:35:27"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"2933:210:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:27","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"a","nameLocation":"3173:1:27","nodeType":"VariableDeclaration","scope":4032,"src":"3165:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"b","nameLocation":"3184:1:27","nodeType":"VariableDeclaration","scope":4032,"src":"3176:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:27"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4032,"src":"3210:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:27"},"scope":4824,"src":"3148:331:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"3901:4018:27","statements":[{"id":4156,"nodeType":"UncheckedBlock","src":"3911:4002:27","statements":[{"assignments":[4045],"declarations":[{"constant":false,"id":4045,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:27","nodeType":"VariableDeclaration","scope":4156,"src":"4232:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4049,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4046,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"4248:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4047,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"4252:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:27"},{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:27","nodeType":"VariableDeclaration","scope":4156,"src":"4312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"nodeType":"VariableDeclarationStatement","src":"4312:13:27"},{"AST":{"nativeSrc":"4392:122:27","nodeType":"YulBlock","src":"4392:122:27","statements":[{"nativeSrc":"4410:30:27","nodeType":"YulVariableDeclaration","src":"4410:30:27","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:27","nodeType":"YulIdentifier","src":"4427:1:27"},{"name":"y","nativeSrc":"4430:1:27","nodeType":"YulIdentifier","src":"4430:1:27"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:27","nodeType":"YulLiteral","src":"4437:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:27","nodeType":"YulIdentifier","src":"4433:3:27"},"nativeSrc":"4433:6:27","nodeType":"YulFunctionCall","src":"4433:6:27"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:27","nodeType":"YulIdentifier","src":"4420:6:27"},"nativeSrc":"4420:20:27","nodeType":"YulFunctionCall","src":"4420:20:27"},"variables":[{"name":"mm","nativeSrc":"4414:2:27","nodeType":"YulTypedName","src":"4414:2:27","type":""}]},{"nativeSrc":"4457:43:27","nodeType":"YulAssignment","src":"4457:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:27","nodeType":"YulIdentifier","src":"4474:2:27"},{"name":"prod0","nativeSrc":"4478:5:27","nodeType":"YulIdentifier","src":"4478:5:27"}],"functionName":{"name":"sub","nativeSrc":"4470:3:27","nodeType":"YulIdentifier","src":"4470:3:27"},"nativeSrc":"4470:14:27","nodeType":"YulFunctionCall","src":"4470:14:27"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:27","nodeType":"YulIdentifier","src":"4489:2:27"},{"name":"prod0","nativeSrc":"4493:5:27","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"lt","nativeSrc":"4486:2:27","nodeType":"YulIdentifier","src":"4486:2:27"},"nativeSrc":"4486:13:27","nodeType":"YulFunctionCall","src":"4486:13:27"}],"functionName":{"name":"sub","nativeSrc":"4466:3:27","nodeType":"YulIdentifier","src":"4466:3:27"},"nativeSrc":"4466:34:27","nodeType":"YulFunctionCall","src":"4466:34:27"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:27","nodeType":"YulIdentifier","src":"4457:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4045,"isOffset":false,"isSlot":false,"src":"4478:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"4493:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"4457:5:27","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"4427:1:27","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"4430:1:27","valueSize":1}],"id":4053,"nodeType":"InlineAssembly","src":"4383:131:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4062,"nodeType":"IfStatement","src":"4591:368:27","trueBody":{"id":4061,"nodeType":"Block","src":"4607:352:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4925:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4933:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4043,"id":4060,"nodeType":"Return","src":"4918:26:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4064,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5080:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"5061:88:27","trueBody":{"id":4069,"nodeType":"Block","src":"5087:62:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"5112:20:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"5105:29:27"}]}},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:27","nodeType":"VariableDeclaration","scope":4156,"src":"5404:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4073,"nodeType":"VariableDeclarationStatement","src":"5404:17:27"},{"AST":{"nativeSrc":"5444:291:27","nodeType":"YulBlock","src":"5444:291:27","statements":[{"nativeSrc":"5513:38:27","nodeType":"YulAssignment","src":"5513:38:27","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:27","nodeType":"YulIdentifier","src":"5533:1:27"},{"name":"y","nativeSrc":"5536:1:27","nodeType":"YulIdentifier","src":"5536:1:27"},{"name":"denominator","nativeSrc":"5539:11:27","nodeType":"YulIdentifier","src":"5539:11:27"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:27","nodeType":"YulIdentifier","src":"5526:6:27"},"nativeSrc":"5526:25:27","nodeType":"YulFunctionCall","src":"5526:25:27"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:27","nodeType":"YulIdentifier","src":"5513:9:27"}]},{"nativeSrc":"5633:41:27","nodeType":"YulAssignment","src":"5633:41:27","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:27","nodeType":"YulIdentifier","src":"5646:5:27"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:27","nodeType":"YulIdentifier","src":"5656:9:27"},{"name":"prod0","nativeSrc":"5667:5:27","nodeType":"YulIdentifier","src":"5667:5:27"}],"functionName":{"name":"gt","nativeSrc":"5653:2:27","nodeType":"YulIdentifier","src":"5653:2:27"},"nativeSrc":"5653:20:27","nodeType":"YulFunctionCall","src":"5653:20:27"}],"functionName":{"name":"sub","nativeSrc":"5642:3:27","nodeType":"YulIdentifier","src":"5642:3:27"},"nativeSrc":"5642:32:27","nodeType":"YulFunctionCall","src":"5642:32:27"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:27","nodeType":"YulIdentifier","src":"5633:5:27"}]},{"nativeSrc":"5691:30:27","nodeType":"YulAssignment","src":"5691:30:27","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:27","nodeType":"YulIdentifier","src":"5704:5:27"},{"name":"remainder","nativeSrc":"5711:9:27","nodeType":"YulIdentifier","src":"5711:9:27"}],"functionName":{"name":"sub","nativeSrc":"5700:3:27","nodeType":"YulIdentifier","src":"5700:3:27"},"nativeSrc":"5700:21:27","nodeType":"YulFunctionCall","src":"5700:21:27"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:27","nodeType":"YulIdentifier","src":"5691:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4039,"isOffset":false,"isSlot":false,"src":"5539:11:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5667:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5691:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5704:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"5633:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"5646:5:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5513:9:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5656:9:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5711:9:27","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"5533:1:27","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"5536:1:27","valueSize":1}],"id":4074,"nodeType":"InlineAssembly","src":"5435:300:27"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"twos","nameLocation":"5947:4:27","nodeType":"VariableDeclaration","scope":4156,"src":"5939:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5954:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4079,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5973:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:27"},{"AST":{"nativeSrc":"6008:362:27","nodeType":"YulBlock","src":"6008:362:27","statements":[{"nativeSrc":"6073:37:27","nodeType":"YulAssignment","src":"6073:37:27","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:27","nodeType":"YulIdentifier","src":"6092:11:27"},{"name":"twos","nativeSrc":"6105:4:27","nodeType":"YulIdentifier","src":"6105:4:27"}],"functionName":{"name":"div","nativeSrc":"6088:3:27","nodeType":"YulIdentifier","src":"6088:3:27"},"nativeSrc":"6088:22:27","nodeType":"YulFunctionCall","src":"6088:22:27"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:27","nodeType":"YulIdentifier","src":"6073:11:27"}]},{"nativeSrc":"6177:25:27","nodeType":"YulAssignment","src":"6177:25:27","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:27","nodeType":"YulIdentifier","src":"6190:5:27"},{"name":"twos","nativeSrc":"6197:4:27","nodeType":"YulIdentifier","src":"6197:4:27"}],"functionName":{"name":"div","nativeSrc":"6186:3:27","nodeType":"YulIdentifier","src":"6186:3:27"},"nativeSrc":"6186:16:27","nodeType":"YulFunctionCall","src":"6186:16:27"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:27","nodeType":"YulIdentifier","src":"6177:5:27"}]},{"nativeSrc":"6317:39:27","nodeType":"YulAssignment","src":"6317:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:27","nodeType":"YulLiteral","src":"6337:1:27","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:27","nodeType":"YulIdentifier","src":"6340:4:27"}],"functionName":{"name":"sub","nativeSrc":"6333:3:27","nodeType":"YulIdentifier","src":"6333:3:27"},"nativeSrc":"6333:12:27","nodeType":"YulFunctionCall","src":"6333:12:27"},{"name":"twos","nativeSrc":"6347:4:27","nodeType":"YulIdentifier","src":"6347:4:27"}],"functionName":{"name":"div","nativeSrc":"6329:3:27","nodeType":"YulIdentifier","src":"6329:3:27"},"nativeSrc":"6329:23:27","nodeType":"YulFunctionCall","src":"6329:23:27"},{"kind":"number","nativeSrc":"6354:1:27","nodeType":"YulLiteral","src":"6354:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:27","nodeType":"YulIdentifier","src":"6325:3:27"},"nativeSrc":"6325:31:27","nodeType":"YulFunctionCall","src":"6325:31:27"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:27","nodeType":"YulIdentifier","src":"6317:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4039,"isOffset":false,"isSlot":false,"src":"6073:11:27","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"6092:11:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"6177:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"6190:5:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6105:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6197:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6317:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6340:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6347:4:27","valueSize":1}],"id":4084,"nodeType":"InlineAssembly","src":"5999:371:27"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4085,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"6436:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"6445:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4087,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"6453:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4090,"nodeType":"ExpressionStatement","src":"6436:21:27"},{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:27","nodeType":"VariableDeclaration","scope":4156,"src":"6775:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4099,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4094,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"6798:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:27"},{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7046:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7060:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4107,"nodeType":"ExpressionStatement","src":"7031:36:27"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7115:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7129:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"7100:36:27"},{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7185:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7199:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"7170:36:27"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7240:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7255:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4127,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ExpressionStatement","src":"7240:36:27"},{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7325:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4135,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"7310:36:27"},{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7396:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4143,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7410:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4147,"nodeType":"ExpressionStatement","src":"7381:36:27"},{"expression":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"7851:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"7860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4150,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4153,"nodeType":"ExpressionStatement","src":"7851:24:27"},{"expression":{"id":4154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"7896:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4043,"id":4155,"nodeType":"Return","src":"7889:13:27"}]}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"3485:313:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:27","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"x","nameLocation":"3827:1:27","nodeType":"VariableDeclaration","scope":4158,"src":"3819:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"y","nameLocation":"3838:1:27","nodeType":"VariableDeclaration","scope":4158,"src":"3830:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:27","nodeType":"VariableDeclaration","scope":4158,"src":"3841:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:27"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"result","nameLocation":"3893:6:27","nodeType":"VariableDeclaration","scope":4158,"src":"3885:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:27"},"scope":4824,"src":"3803:4116:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4200,"nodeType":"Block","src":"8161:192:27","statements":[{"assignments":[4174],"declarations":[{"constant":false,"id":4174,"mutability":"mutable","name":"result","nameLocation":"8179:6:27","nodeType":"VariableDeclaration","scope":4200,"src":"8171:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4180,"initialValue":{"arguments":[{"id":4176,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8195:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8198:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"8201:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4175,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4158,4201],"referencedDeclaration":4158,"src":"8188:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4182,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"8244:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4181,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"8227:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4185,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8264:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8267:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4187,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"8270:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4184,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4197,"nodeType":"IfStatement","src":"8223:101:27","trueBody":{"id":4196,"nodeType":"Block","src":"8288:36:27","statements":[{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ExpressionStatement","src":"8302:11:27"}]}},{"expression":{"id":4198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8340:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4172,"id":4199,"nodeType":"Return","src":"8333:13:27"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"7925:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:27","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"x","nameLocation":"8075:1:27","nodeType":"VariableDeclaration","scope":4201,"src":"8067:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"y","nameLocation":"8086:1:27","nodeType":"VariableDeclaration","scope":4201,"src":"8078:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:27","nodeType":"VariableDeclaration","scope":4201,"src":"8089:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:27","nodeType":"VariableDeclaration","scope":4201,"src":"8110:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4167,"nodeType":"UserDefinedTypeName","pathNode":{"id":4166,"name":"Rounding","nameLocations":["8110:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"8110:8:27"},"referencedDeclaration":3781,"src":"8110:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:27"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4201,"src":"8152:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:27"},"scope":4824,"src":"8051:302:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4312,"nodeType":"Block","src":"8644:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8658:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"nodeType":"IfStatement","src":"8654:45:27","trueBody":{"id":4214,"nodeType":"Block","src":"8666:33:27","statements":[{"expression":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4208,"id":4213,"nodeType":"Return","src":"8680:8:27"}]}},{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"result","nameLocation":"9386:6:27","nodeType":"VariableDeclaration","scope":4312,"src":"9378:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9406:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4219,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4480,4515],"referencedDeclaration":4480,"src":"9401:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:27"},{"id":4311,"nodeType":"UncheckedBlock","src":"9815:408:27","statements":[{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9839:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9849:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9858:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9862:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"9839:35:27"},{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9888:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9898:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9907:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9911:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"9888:35:27"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9937:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9947:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9956:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9960:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"9937:35:27"},{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9996:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10005:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10009:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"9986:35:27"},{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10035:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10045:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10054:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10058:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"10035:35:27"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10084:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10094:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10103:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10107:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"10084:35:27"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10133:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10143:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10152:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10156:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"10133:35:27"},{"expression":{"arguments":[{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10193:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10201:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4304,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10189:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4208,"id":4310,"nodeType":"Return","src":"10182:30:27"}]}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"8359:223:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4313,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:27","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"a","nameLocation":"8609:1:27","nodeType":"VariableDeclaration","scope":4313,"src":"8601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:27"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4313,"src":"8635:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:27"},"scope":4824,"src":"8587:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"10405:164:27","statements":[{"id":4346,"nodeType":"UncheckedBlock","src":"10415:148:27","statements":[{"assignments":[4325],"declarations":[{"constant":false,"id":4325,"mutability":"mutable","name":"result","nameLocation":"10447:6:27","nodeType":"VariableDeclaration","scope":4346,"src":"10439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4329,"initialValue":{"arguments":[{"id":4327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"10461:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4313,4348],"referencedDeclaration":4313,"src":"10456:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10484:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4332,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"10511:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4331,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"10494:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10524:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10533:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"10542:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:27","trueExpression":{"hexValue":"31","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4323,"id":4345,"nodeType":"Return","src":"10477:75:27"}]}]},"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"10235:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:27","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"a","nameLocation":"10351:1:27","nodeType":"VariableDeclaration","scope":4348,"src":"10343:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:27","nodeType":"VariableDeclaration","scope":4348,"src":"10354:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"Rounding","nameLocations":["10354:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"10354:8:27"},"referencedDeclaration":3781,"src":"10354:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:27"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"10396:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:27"},"scope":4824,"src":"10329:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"10760:922:27","statements":[{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"result","nameLocation":"10778:6:27","nodeType":"VariableDeclaration","scope":4479,"src":"10770:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4359,"initialValue":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:27"},{"id":4476,"nodeType":"UncheckedBlock","src":"10798:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10826:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"10822:99:27","trueBody":{"id":4373,"nodeType":"Block","src":"10844:77:27","statements":[{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10862:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"10862:13:27"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10893:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"10893:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10938:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4389,"nodeType":"IfStatement","src":"10934:96:27","trueBody":{"id":4388,"nodeType":"Block","src":"10955:75:27","statements":[{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"10973:12:27"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11003:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"11003:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11047:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4404,"nodeType":"IfStatement","src":"11043:96:27","trueBody":{"id":4403,"nodeType":"Block","src":"11064:75:27","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11082:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"11082:12:27"},{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11112:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"11112:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11156:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"11152:96:27","trueBody":{"id":4418,"nodeType":"Block","src":"11173:75:27","statements":[{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11191:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"11191:12:27"},{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11221:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"11221:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11265:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4434,"nodeType":"IfStatement","src":"11261:93:27","trueBody":{"id":4433,"nodeType":"Block","src":"11281:73:27","statements":[{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11299:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4428,"nodeType":"ExpressionStatement","src":"11299:11:27"},{"expression":{"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11328:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"nodeType":"ExpressionStatement","src":"11328:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11371:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4449,"nodeType":"IfStatement","src":"11367:93:27","trueBody":{"id":4448,"nodeType":"Block","src":"11387:73:27","statements":[{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4443,"nodeType":"ExpressionStatement","src":"11405:11:27"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11434:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"11434:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11477:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4464,"nodeType":"IfStatement","src":"11473:93:27","trueBody":{"id":4463,"nodeType":"Block","src":"11493:73:27","statements":[{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11511:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"11511:11:27"},{"expression":{"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11540:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"nodeType":"ExpressionStatement","src":"11540:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11583:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"nodeType":"IfStatement","src":"11579:64:27","trueBody":{"id":4474,"nodeType":"Block","src":"11599:44:27","statements":[{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11617:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"11617:11:27"}]}}]},{"expression":{"id":4477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11669:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4355,"id":4478,"nodeType":"Return","src":"11662:13:27"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"10575:119:27","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:27","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"10721:5:27","nodeType":"VariableDeclaration","scope":4480,"src":"10713:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:27"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"10751:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:27"},"scope":4824,"src":"10699:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"11915:168:27","statements":[{"id":4513,"nodeType":"UncheckedBlock","src":"11925:152:27","statements":[{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"result","nameLocation":"11957:6:27","nodeType":"VariableDeclaration","scope":4513,"src":"11949:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"11971:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4480,4515],"referencedDeclaration":4480,"src":"11966:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"11998:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4499,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"12025:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4498,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"12008:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"12043:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"12052:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:27","trueExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4490,"id":4512,"nodeType":"Return","src":"11991:75:27"}]}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"11688:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:27","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"value","nameLocation":"11857:5:27","nodeType":"VariableDeclaration","scope":4515,"src":"11849:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:27","nodeType":"VariableDeclaration","scope":4515,"src":"11864:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"Rounding","nameLocations":["11864:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"11864:8:27"},"referencedDeclaration":3781,"src":"11864:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:27"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"11906:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:27"},"scope":4824,"src":"11835:248:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"12276:854:27","statements":[{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"result","nameLocation":"12294:6:27","nodeType":"VariableDeclaration","scope":4643,"src":"12286:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4526,"initialValue":{"hexValue":"30","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:27"},{"id":4640,"nodeType":"UncheckedBlock","src":"12314:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"12338:103:27","trueBody":{"id":4542,"nodeType":"Block","src":"12361:80:27","statements":[{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"12379:17:27"},{"expression":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12414:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ExpressionStatement","src":"12414:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4560,"nodeType":"IfStatement","src":"12454:103:27","trueBody":{"id":4559,"nodeType":"Block","src":"12477:80:27","statements":[{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12495:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"12495:17:27"},{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12530:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4558,"nodeType":"ExpressionStatement","src":"12530:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12574:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"12570:103:27","trueBody":{"id":4576,"nodeType":"Block","src":"12593:80:27","statements":[{"expression":{"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12611:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"nodeType":"ExpressionStatement","src":"12611:17:27"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12646:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"12646:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12690:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"12686:100:27","trueBody":{"id":4593,"nodeType":"Block","src":"12708:78:27","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12726:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"12726:16:27"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"12760:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12803:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4611,"nodeType":"IfStatement","src":"12799:100:27","trueBody":{"id":4610,"nodeType":"Block","src":"12821:78:27","statements":[{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12839:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4605,"nodeType":"ExpressionStatement","src":"12839:16:27"},{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12873:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"12873:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12916:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"12912:100:27","trueBody":{"id":4627,"nodeType":"Block","src":"12934:78:27","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12952:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ExpressionStatement","src":"12952:16:27"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"12986:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"13029:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"13025:66:27","trueBody":{"id":4638,"nodeType":"Block","src":"13047:44:27","statements":[{"expression":{"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13065:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ExpressionStatement","src":"13065:11:27"}]}}]},{"expression":{"id":4641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13117:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4522,"id":4642,"nodeType":"Return","src":"13110:13:27"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"12089:120:27","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:27","nodeType":"FunctionDefinition","parameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"value","nameLocation":"12237:5:27","nodeType":"VariableDeclaration","scope":4644,"src":"12229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:27"},"returnParameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4644,"src":"12267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:27"},"scope":4824,"src":"12214:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4678,"nodeType":"Block","src":"13365:170:27","statements":[{"id":4677,"nodeType":"UncheckedBlock","src":"13375:154:27","statements":[{"assignments":[4656],"declarations":[{"constant":false,"id":4656,"mutability":"mutable","name":"result","nameLocation":"13407:6:27","nodeType":"VariableDeclaration","scope":4677,"src":"13399:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4660,"initialValue":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13422:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4644,4679],"referencedDeclaration":4644,"src":"13416:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"13449:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4663,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"13476:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4662,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"13459:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"13495:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13504:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:27","trueExpression":{"hexValue":"31","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4654,"id":4676,"nodeType":"Return","src":"13442:76:27"}]}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"13136:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4679,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:27","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"13307:5:27","nodeType":"VariableDeclaration","scope":4679,"src":"13299:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:27","nodeType":"VariableDeclaration","scope":4679,"src":"13314:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4649,"nodeType":"UserDefinedTypeName","pathNode":{"id":4648,"name":"Rounding","nameLocations":["13314:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"13314:8:27"},"referencedDeclaration":3781,"src":"13314:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:27"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"13356:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:27"},"scope":4824,"src":"13284:251:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"13855:600:27","statements":[{"assignments":[4688],"declarations":[{"constant":false,"id":4688,"mutability":"mutable","name":"result","nameLocation":"13873:6:27","nodeType":"VariableDeclaration","scope":4765,"src":"13865:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4690,"initialValue":{"hexValue":"30","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:27"},{"id":4762,"nodeType":"UncheckedBlock","src":"13893:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13921:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"13917:98:27","trueBody":{"id":4704,"nodeType":"Block","src":"13939:76:27","statements":[{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13957:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"13957:13:27"},{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"13988:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4703,"nodeType":"ExpressionStatement","src":"13988:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14032:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4720,"nodeType":"IfStatement","src":"14028:95:27","trueBody":{"id":4719,"nodeType":"Block","src":"14049:74:27","statements":[{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14067:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4714,"nodeType":"ExpressionStatement","src":"14067:12:27"},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14097:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"14097:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14140:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"14136:95:27","trueBody":{"id":4734,"nodeType":"Block","src":"14157:74:27","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"14175:12:27"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"14205:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4750,"nodeType":"IfStatement","src":"14244:95:27","trueBody":{"id":4749,"nodeType":"Block","src":"14265:74:27","statements":[{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14283:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"14283:12:27"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14313:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"14313:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4761,"nodeType":"IfStatement","src":"14352:64:27","trueBody":{"id":4760,"nodeType":"Block","src":"14372:44:27","statements":[{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14390:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"14390:11:27"}]}}]},{"expression":{"id":4763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14442:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4686,"id":4764,"nodeType":"Return","src":"14435:13:27"}]},"documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"13541:246:27","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:27","nodeType":"FunctionDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"value","nameLocation":"13816:5:27","nodeType":"VariableDeclaration","scope":4766,"src":"13808:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:27"},"returnParameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4766,"src":"13846:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:27"},"scope":4824,"src":"13792:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4803,"nodeType":"Block","src":"14692:177:27","statements":[{"id":4802,"nodeType":"UncheckedBlock","src":"14702:161:27","statements":[{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"result","nameLocation":"14734:6:27","nodeType":"VariableDeclaration","scope":4802,"src":"14726:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4782,"initialValue":{"arguments":[{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"14750:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4779,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4766,4804],"referencedDeclaration":4766,"src":"14743:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"14777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"14804:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4784,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"14787:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"14823:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"14838:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:27","trueExpression":{"hexValue":"31","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4776,"id":4801,"nodeType":"Return","src":"14770:82:27"}]}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"14461:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4804,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:27","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"14634:5:27","nodeType":"VariableDeclaration","scope":4804,"src":"14626:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4772,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:27","nodeType":"VariableDeclaration","scope":4804,"src":"14641:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4771,"nodeType":"UserDefinedTypeName","pathNode":{"id":4770,"name":"Rounding","nameLocations":["14641:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"14641:8:27"},"referencedDeclaration":3781,"src":"14641:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:27"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4804,"src":"14683:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:27"},"scope":4824,"src":"14610:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4822,"nodeType":"Block","src":"15067:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4815,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"15090:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4813,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:27","typeDescriptions":{}}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4812,"id":4821,"nodeType":"Return","src":"15077:31:27"}]},"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"14875:113:27","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4823,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:27","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:27","nodeType":"VariableDeclaration","scope":4823,"src":"15019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4807,"nodeType":"UserDefinedTypeName","pathNode":{"id":4806,"name":"Rounding","nameLocations":["15019:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"15019:8:27"},"referencedDeclaration":3781,"src":"15019:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:27"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4823,"src":"15061:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4810,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:27"},"scope":4824,"src":"14993:122:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4825,"src":"203:14914:27","usedErrors":[3776],"usedEvents":[]}],"src":"103:15015:27"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":28,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6579]},"id":6580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"218:545:28","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6579,"linearizedBaseContracts":[6579],"name":"SafeCast","nameLocation":"772:8:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"787:68:28","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4834,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:28","nodeType":"ErrorDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"bits","nameLocation":"903:4:28","nodeType":"VariableDeclaration","scope":4834,"src":"897:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4829,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"value","nameLocation":"917:5:28","nodeType":"VariableDeclaration","scope":4834,"src":"909:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:28"},"src":"860:64:28"},{"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"930:75:28","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4839,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:28","nodeType":"ErrorDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"value","nameLocation":"1051:5:28","nodeType":"VariableDeclaration","scope":4839,"src":"1044:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4836,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:28"},"src":"1010:48:28"},{"documentation":{"id":4840,"nodeType":"StructuredDocumentation","src":"1064:67:28","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4846,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:28","nodeType":"ErrorDefinition","parameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"bits","nameLocation":"1178:4:28","nodeType":"VariableDeclaration","scope":4846,"src":"1172:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4841,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"value","nameLocation":"1191:5:28","nodeType":"VariableDeclaration","scope":4846,"src":"1184:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4843,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:28"},"src":"1136:62:28"},{"documentation":{"id":4847,"nodeType":"StructuredDocumentation","src":"1204:75:28","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4851,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:28","nodeType":"ErrorDefinition","parameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"value","nameLocation":"1326:5:28","nodeType":"VariableDeclaration","scope":4851,"src":"1318:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:28"},"src":"1284:49:28"},{"body":{"id":4878,"nodeType":"Block","src":"1690:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"1704:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4861,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:28","memberName":"max","nodeType":"MemberAccess","src":"1712:17:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"nodeType":"IfStatement","src":"1700:105:28","trueBody":{"id":4871,"nodeType":"Block","src":"1731:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:28","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"1788:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"1752:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4870,"nodeType":"RevertStatement","src":"1745:49:28"}]}},{"expression":{"arguments":[{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"1829:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4873,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:28","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4858,"id":4877,"nodeType":"Return","src":"1814:21:28"}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"1339:280:28","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:28","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"value","nameLocation":"1651:5:28","nodeType":"VariableDeclaration","scope":4879,"src":"1643:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:28"},"returnParameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4879,"src":"1681:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4856,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:28"},"scope":6579,"src":"1624:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4906,"nodeType":"Block","src":"2199:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2213:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4889,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:28","memberName":"max","nodeType":"MemberAccess","src":"2221:17:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4900,"nodeType":"IfStatement","src":"2209:105:28","trueBody":{"id":4899,"nodeType":"Block","src":"2240:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:28","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2297:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2261:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4898,"nodeType":"RevertStatement","src":"2254:49:28"}]}},{"expression":{"arguments":[{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2338:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4901,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:28","typeDescriptions":{}}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4886,"id":4905,"nodeType":"Return","src":"2323:21:28"}]},"documentation":{"id":4880,"nodeType":"StructuredDocumentation","src":"1848:280:28","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:28","nodeType":"FunctionDefinition","parameters":{"id":4883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4882,"mutability":"mutable","name":"value","nameLocation":"2160:5:28","nodeType":"VariableDeclaration","scope":4907,"src":"2152:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:28"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"2190:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4884,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:28"},"scope":6579,"src":"2133:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4934,"nodeType":"Block","src":"2708:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"2722:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4917,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:28","memberName":"max","nodeType":"MemberAccess","src":"2730:17:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4928,"nodeType":"IfStatement","src":"2718:105:28","trueBody":{"id":4927,"nodeType":"Block","src":"2749:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:28","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"2806:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2770:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4926,"nodeType":"RevertStatement","src":"2763:49:28"}]}},{"expression":{"arguments":[{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"2847:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4929,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:28","typeDescriptions":{}}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4914,"id":4933,"nodeType":"Return","src":"2832:21:28"}]},"documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"2357:280:28","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:28","nodeType":"FunctionDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"value","nameLocation":"2669:5:28","nodeType":"VariableDeclaration","scope":4935,"src":"2661:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:28"},"returnParameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4935,"src":"2699:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4912,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:28"},"scope":6579,"src":"2642:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4962,"nodeType":"Block","src":"3217:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"3231:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4945,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:28","memberName":"max","nodeType":"MemberAccess","src":"3239:17:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4956,"nodeType":"IfStatement","src":"3227:105:28","trueBody":{"id":4955,"nodeType":"Block","src":"3258:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:28","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"3315:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"3279:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4954,"nodeType":"RevertStatement","src":"3272:49:28"}]}},{"expression":{"arguments":[{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"3356:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4957,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:28","typeDescriptions":{}}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4942,"id":4961,"nodeType":"Return","src":"3341:21:28"}]},"documentation":{"id":4936,"nodeType":"StructuredDocumentation","src":"2866:280:28","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:28","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"value","nameLocation":"3178:5:28","nodeType":"VariableDeclaration","scope":4963,"src":"3170:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:28"},"returnParameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4963,"src":"3208:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4940,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:28"},"scope":6579,"src":"3151:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4990,"nodeType":"Block","src":"3726:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"3740:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4973,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:28","memberName":"max","nodeType":"MemberAccess","src":"3748:17:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4984,"nodeType":"IfStatement","src":"3736:105:28","trueBody":{"id":4983,"nodeType":"Block","src":"3767:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:28","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"3824:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"3788:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4982,"nodeType":"RevertStatement","src":"3781:49:28"}]}},{"expression":{"arguments":[{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"3865:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4985,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:28","typeDescriptions":{}}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4970,"id":4989,"nodeType":"Return","src":"3850:21:28"}]},"documentation":{"id":4964,"nodeType":"StructuredDocumentation","src":"3375:280:28","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:28","nodeType":"FunctionDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"value","nameLocation":"3687:5:28","nodeType":"VariableDeclaration","scope":4991,"src":"3679:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:28"},"returnParameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4991,"src":"3717:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4968,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:28"},"scope":6579,"src":"3660:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"4235:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4249:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5001,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:28","memberName":"max","nodeType":"MemberAccess","src":"4257:17:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5012,"nodeType":"IfStatement","src":"4245:105:28","trueBody":{"id":5011,"nodeType":"Block","src":"4276:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:28","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4333:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4297:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5010,"nodeType":"RevertStatement","src":"4290:49:28"}]}},{"expression":{"arguments":[{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5013,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:28","typeDescriptions":{}}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4998,"id":5017,"nodeType":"Return","src":"4359:21:28"}]},"documentation":{"id":4992,"nodeType":"StructuredDocumentation","src":"3884:280:28","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:28","nodeType":"FunctionDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"value","nameLocation":"4196:5:28","nodeType":"VariableDeclaration","scope":5019,"src":"4188:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:28"},"returnParameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5019,"src":"4226:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4996,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:28"},"scope":6579,"src":"4169:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5046,"nodeType":"Block","src":"4744:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"4758:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5029,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:28","memberName":"max","nodeType":"MemberAccess","src":"4766:17:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5040,"nodeType":"IfStatement","src":"4754:105:28","trueBody":{"id":5039,"nodeType":"Block","src":"4785:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:28","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"4842:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4806:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5038,"nodeType":"RevertStatement","src":"4799:49:28"}]}},{"expression":{"arguments":[{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"4883:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5041,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:28","typeDescriptions":{}}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5026,"id":5045,"nodeType":"Return","src":"4868:21:28"}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"4393:280:28","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:28","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"4705:5:28","nodeType":"VariableDeclaration","scope":5047,"src":"4697:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:28"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"4735:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5024,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:28"},"scope":6579,"src":"4678:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"5253:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"5267:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5057,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:28","memberName":"max","nodeType":"MemberAccess","src":"5275:17:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5068,"nodeType":"IfStatement","src":"5263:105:28","trueBody":{"id":5067,"nodeType":"Block","src":"5294:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"5351:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"5315:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5066,"nodeType":"RevertStatement","src":"5308:49:28"}]}},{"expression":{"arguments":[{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"5392:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5069,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:28","typeDescriptions":{}}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5054,"id":5073,"nodeType":"Return","src":"5377:21:28"}]},"documentation":{"id":5048,"nodeType":"StructuredDocumentation","src":"4902:280:28","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:28","nodeType":"FunctionDefinition","parameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"value","nameLocation":"5214:5:28","nodeType":"VariableDeclaration","scope":5075,"src":"5206:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:28"},"returnParameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"5244:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5052,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:28"},"scope":6579,"src":"5187:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5102,"nodeType":"Block","src":"5762:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"5776:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5085,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:28","memberName":"max","nodeType":"MemberAccess","src":"5784:17:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"nodeType":"IfStatement","src":"5772:105:28","trueBody":{"id":5095,"nodeType":"Block","src":"5803:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:28","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"5860:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"5824:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5094,"nodeType":"RevertStatement","src":"5817:49:28"}]}},{"expression":{"arguments":[{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"5901:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5097,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:28","typeDescriptions":{}}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5082,"id":5101,"nodeType":"Return","src":"5886:21:28"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"5411:280:28","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:28","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"5723:5:28","nodeType":"VariableDeclaration","scope":5103,"src":"5715:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:28"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5103,"src":"5753:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5080,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:28"},"scope":6579,"src":"5696:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5130,"nodeType":"Block","src":"6271:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5113,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:28","memberName":"max","nodeType":"MemberAccess","src":"6293:17:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5124,"nodeType":"IfStatement","src":"6281:105:28","trueBody":{"id":5123,"nodeType":"Block","src":"6312:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:28","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6333:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5122,"nodeType":"RevertStatement","src":"6326:49:28"}]}},{"expression":{"arguments":[{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6410:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5125,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:28","typeDescriptions":{}}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5110,"id":5129,"nodeType":"Return","src":"6395:21:28"}]},"documentation":{"id":5104,"nodeType":"StructuredDocumentation","src":"5920:280:28","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:28","nodeType":"FunctionDefinition","parameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5106,"mutability":"mutable","name":"value","nameLocation":"6232:5:28","nodeType":"VariableDeclaration","scope":5131,"src":"6224:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:28"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5131,"src":"6262:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5108,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:28"},"scope":6579,"src":"6205:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5158,"nodeType":"Block","src":"6780:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"6794:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5141,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:28","memberName":"max","nodeType":"MemberAccess","src":"6802:17:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5152,"nodeType":"IfStatement","src":"6790:105:28","trueBody":{"id":5151,"nodeType":"Block","src":"6821:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:28","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"6878:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6842:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5150,"nodeType":"RevertStatement","src":"6835:49:28"}]}},{"expression":{"arguments":[{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"6919:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5153,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:28","typeDescriptions":{}}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5138,"id":5157,"nodeType":"Return","src":"6904:21:28"}]},"documentation":{"id":5132,"nodeType":"StructuredDocumentation","src":"6429:280:28","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:28","nodeType":"FunctionDefinition","parameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"value","nameLocation":"6741:5:28","nodeType":"VariableDeclaration","scope":5159,"src":"6733:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:28"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5159,"src":"6771:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5136,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:28"},"scope":6579,"src":"6714:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5186,"nodeType":"Block","src":"7289:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"7303:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5169,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:28","memberName":"max","nodeType":"MemberAccess","src":"7311:17:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5180,"nodeType":"IfStatement","src":"7299:105:28","trueBody":{"id":5179,"nodeType":"Block","src":"7330:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:28","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"7387:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"7351:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5178,"nodeType":"RevertStatement","src":"7344:49:28"}]}},{"expression":{"arguments":[{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"7428:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5181,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:28","typeDescriptions":{}}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5166,"id":5185,"nodeType":"Return","src":"7413:21:28"}]},"documentation":{"id":5160,"nodeType":"StructuredDocumentation","src":"6938:280:28","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:28","nodeType":"FunctionDefinition","parameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"value","nameLocation":"7250:5:28","nodeType":"VariableDeclaration","scope":5187,"src":"7242:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5161,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:28"},"returnParameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5187,"src":"7280:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5164,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:28"},"scope":6579,"src":"7223:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5214,"nodeType":"Block","src":"7798:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"7812:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5197,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:28","memberName":"max","nodeType":"MemberAccess","src":"7820:17:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5208,"nodeType":"IfStatement","src":"7808:105:28","trueBody":{"id":5207,"nodeType":"Block","src":"7839:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:28","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"7896:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"7860:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5206,"nodeType":"RevertStatement","src":"7853:49:28"}]}},{"expression":{"arguments":[{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"7937:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5209,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:28","typeDescriptions":{}}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5194,"id":5213,"nodeType":"Return","src":"7922:21:28"}]},"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"7447:280:28","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:28","nodeType":"FunctionDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"value","nameLocation":"7759:5:28","nodeType":"VariableDeclaration","scope":5215,"src":"7751:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:28"},"returnParameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5215,"src":"7789:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5192,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:28"},"scope":6579,"src":"7732:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5242,"nodeType":"Block","src":"8307:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"8321:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5225,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:28","memberName":"max","nodeType":"MemberAccess","src":"8329:17:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5236,"nodeType":"IfStatement","src":"8317:105:28","trueBody":{"id":5235,"nodeType":"Block","src":"8348:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:28","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"8405:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"8369:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5234,"nodeType":"RevertStatement","src":"8362:49:28"}]}},{"expression":{"arguments":[{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"8446:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5237,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:28","typeDescriptions":{}}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5222,"id":5241,"nodeType":"Return","src":"8431:21:28"}]},"documentation":{"id":5216,"nodeType":"StructuredDocumentation","src":"7956:280:28","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:28","nodeType":"FunctionDefinition","parameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"value","nameLocation":"8268:5:28","nodeType":"VariableDeclaration","scope":5243,"src":"8260:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:28"},"returnParameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5243,"src":"8298:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5220,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:28"},"scope":6579,"src":"8241:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5270,"nodeType":"Block","src":"8816:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"8830:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5253,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:28","memberName":"max","nodeType":"MemberAccess","src":"8838:17:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5264,"nodeType":"IfStatement","src":"8826:105:28","trueBody":{"id":5263,"nodeType":"Block","src":"8857:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:28","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"8914:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"8878:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5262,"nodeType":"RevertStatement","src":"8871:49:28"}]}},{"expression":{"arguments":[{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"8955:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5265,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:28","typeDescriptions":{}}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5250,"id":5269,"nodeType":"Return","src":"8940:21:28"}]},"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"8465:280:28","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:28","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"value","nameLocation":"8777:5:28","nodeType":"VariableDeclaration","scope":5271,"src":"8769:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:28"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5271,"src":"8807:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5248,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:28"},"scope":6579,"src":"8750:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5298,"nodeType":"Block","src":"9325:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"9339:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5281,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:28","memberName":"max","nodeType":"MemberAccess","src":"9347:17:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5292,"nodeType":"IfStatement","src":"9335:105:28","trueBody":{"id":5291,"nodeType":"Block","src":"9366:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"9423:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"9387:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5290,"nodeType":"RevertStatement","src":"9380:49:28"}]}},{"expression":{"arguments":[{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"9464:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5293,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:28","typeDescriptions":{}}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5278,"id":5297,"nodeType":"Return","src":"9449:21:28"}]},"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"8974:280:28","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:28","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"value","nameLocation":"9286:5:28","nodeType":"VariableDeclaration","scope":5299,"src":"9278:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:28"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5299,"src":"9316:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5276,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:28"},"scope":6579,"src":"9259:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"9834:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"9848:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5309,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:28","memberName":"max","nodeType":"MemberAccess","src":"9856:17:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5320,"nodeType":"IfStatement","src":"9844:105:28","trueBody":{"id":5319,"nodeType":"Block","src":"9875:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:28","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"9932:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"9896:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5318,"nodeType":"RevertStatement","src":"9889:49:28"}]}},{"expression":{"arguments":[{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"9973:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5321,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:28","typeDescriptions":{}}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5306,"id":5325,"nodeType":"Return","src":"9958:21:28"}]},"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"9483:280:28","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:28","nodeType":"FunctionDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"value","nameLocation":"9795:5:28","nodeType":"VariableDeclaration","scope":5327,"src":"9787:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:28"},"returnParameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5327,"src":"9825:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5304,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:28"},"scope":6579,"src":"9768:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5354,"nodeType":"Block","src":"10343:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10357:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5337,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:28","memberName":"max","nodeType":"MemberAccess","src":"10365:17:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5348,"nodeType":"IfStatement","src":"10353:105:28","trueBody":{"id":5347,"nodeType":"Block","src":"10384:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:28","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10441:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"10405:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5346,"nodeType":"RevertStatement","src":"10398:49:28"}]}},{"expression":{"arguments":[{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10482:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5349,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:28","typeDescriptions":{}}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5334,"id":5353,"nodeType":"Return","src":"10467:21:28"}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"9992:280:28","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:28","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"10304:5:28","nodeType":"VariableDeclaration","scope":5355,"src":"10296:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:28"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5355,"src":"10334:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5332,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:28"},"scope":6579,"src":"10277:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"10852:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"10866:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5365,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:28","memberName":"max","nodeType":"MemberAccess","src":"10874:17:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5376,"nodeType":"IfStatement","src":"10862:105:28","trueBody":{"id":5375,"nodeType":"Block","src":"10893:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:28","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"10950:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"10914:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5374,"nodeType":"RevertStatement","src":"10907:49:28"}]}},{"expression":{"arguments":[{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"10991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5377,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:28","typeDescriptions":{}}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5362,"id":5381,"nodeType":"Return","src":"10976:21:28"}]},"documentation":{"id":5356,"nodeType":"StructuredDocumentation","src":"10501:280:28","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:28","nodeType":"FunctionDefinition","parameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"value","nameLocation":"10813:5:28","nodeType":"VariableDeclaration","scope":5383,"src":"10805:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:28"},"returnParameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5383,"src":"10843:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5360,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:28"},"scope":6579,"src":"10786:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5410,"nodeType":"Block","src":"11355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"11369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5393,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:28","memberName":"max","nodeType":"MemberAccess","src":"11377:16:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5404,"nodeType":"IfStatement","src":"11365:103:28","trueBody":{"id":5403,"nodeType":"Block","src":"11395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"11451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"11416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5402,"nodeType":"RevertStatement","src":"11409:48:28"}]}},{"expression":{"arguments":[{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"11491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5405,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:28","typeDescriptions":{}}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5390,"id":5409,"nodeType":"Return","src":"11477:20:28"}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"11010:276:28","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"11317:5:28","nodeType":"VariableDeclaration","scope":5411,"src":"11309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:28"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5411,"src":"11347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5388,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:28"},"scope":6579,"src":"11291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5438,"nodeType":"Block","src":"11855:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5421,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5420,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:28","memberName":"max","nodeType":"MemberAccess","src":"11877:16:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5432,"nodeType":"IfStatement","src":"11865:103:28","trueBody":{"id":5431,"nodeType":"Block","src":"11895:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11951:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5426,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"11916:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5430,"nodeType":"RevertStatement","src":"11909:48:28"}]}},{"expression":{"arguments":[{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5433,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:28","typeDescriptions":{}}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5418,"id":5437,"nodeType":"Return","src":"11977:20:28"}]},"documentation":{"id":5412,"nodeType":"StructuredDocumentation","src":"11510:276:28","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:28","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"value","nameLocation":"11817:5:28","nodeType":"VariableDeclaration","scope":5439,"src":"11809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:28"},"returnParameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"11847:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5416,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:28"},"scope":6579,"src":"11791:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"12355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"12369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5449,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:28","memberName":"max","nodeType":"MemberAccess","src":"12377:16:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5460,"nodeType":"IfStatement","src":"12365:103:28","trueBody":{"id":5459,"nodeType":"Block","src":"12395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"12451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5454,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5458,"nodeType":"RevertStatement","src":"12409:48:28"}]}},{"expression":{"arguments":[{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"12491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5461,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:28","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5446,"id":5465,"nodeType":"Return","src":"12477:20:28"}]},"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"12010:276:28","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"value","nameLocation":"12317:5:28","nodeType":"VariableDeclaration","scope":5467,"src":"12309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:28"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5467,"src":"12347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5444,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:28"},"scope":6579,"src":"12291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5494,"nodeType":"Block","src":"12855:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"12869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5477,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:28","memberName":"max","nodeType":"MemberAccess","src":"12877:16:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5488,"nodeType":"IfStatement","src":"12865:103:28","trueBody":{"id":5487,"nodeType":"Block","src":"12895:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"12951:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5482,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12916:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5486,"nodeType":"RevertStatement","src":"12909:48:28"}]}},{"expression":{"arguments":[{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"12991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5489,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:28","typeDescriptions":{}}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5474,"id":5493,"nodeType":"Return","src":"12977:20:28"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"12510:276:28","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5495,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:28","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"value","nameLocation":"12817:5:28","nodeType":"VariableDeclaration","scope":5495,"src":"12809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:28"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5495,"src":"12847:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5472,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:28"},"scope":6579,"src":"12791:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5522,"nodeType":"Block","src":"13355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"13369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5505,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:28","memberName":"max","nodeType":"MemberAccess","src":"13377:16:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5516,"nodeType":"IfStatement","src":"13365:103:28","trueBody":{"id":5515,"nodeType":"Block","src":"13395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"13451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5510,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"13416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5514,"nodeType":"RevertStatement","src":"13409:48:28"}]}},{"expression":{"arguments":[{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"13491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5517,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:28","typeDescriptions":{}}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5502,"id":5521,"nodeType":"Return","src":"13477:20:28"}]},"documentation":{"id":5496,"nodeType":"StructuredDocumentation","src":"13010:276:28","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"value","nameLocation":"13317:5:28","nodeType":"VariableDeclaration","scope":5523,"src":"13309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:28"},"returnParameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5523,"src":"13347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5500,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:28"},"scope":6579,"src":"13291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5550,"nodeType":"Block","src":"13855:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"13869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5533,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:28","memberName":"max","nodeType":"MemberAccess","src":"13877:16:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5544,"nodeType":"IfStatement","src":"13865:103:28","trueBody":{"id":5543,"nodeType":"Block","src":"13895:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"13951:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5538,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"13916:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5542,"nodeType":"RevertStatement","src":"13909:48:28"}]}},{"expression":{"arguments":[{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"13991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5545,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:28","typeDescriptions":{}}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5530,"id":5549,"nodeType":"Return","src":"13977:20:28"}]},"documentation":{"id":5524,"nodeType":"StructuredDocumentation","src":"13510:276:28","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5551,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:28","nodeType":"FunctionDefinition","parameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"value","nameLocation":"13817:5:28","nodeType":"VariableDeclaration","scope":5551,"src":"13809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5525,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:28"},"returnParameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5551,"src":"13847:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5528,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:28"},"scope":6579,"src":"13791:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5578,"nodeType":"Block","src":"14355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"14369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5561,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:28","memberName":"max","nodeType":"MemberAccess","src":"14377:16:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5572,"nodeType":"IfStatement","src":"14365:103:28","trueBody":{"id":5571,"nodeType":"Block","src":"14395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"14451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5566,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"14416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5570,"nodeType":"RevertStatement","src":"14409:48:28"}]}},{"expression":{"arguments":[{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"14491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5573,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:28","typeDescriptions":{}}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5558,"id":5577,"nodeType":"Return","src":"14477:20:28"}]},"documentation":{"id":5552,"nodeType":"StructuredDocumentation","src":"14010:276:28","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5579,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"value","nameLocation":"14317:5:28","nodeType":"VariableDeclaration","scope":5579,"src":"14309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:28"},"returnParameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5579,"src":"14347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5556,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:28"},"scope":6579,"src":"14291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5606,"nodeType":"Block","src":"14855:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"14869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5589,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:28","memberName":"max","nodeType":"MemberAccess","src":"14877:16:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5600,"nodeType":"IfStatement","src":"14865:103:28","trueBody":{"id":5599,"nodeType":"Block","src":"14895:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"14951:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"14916:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5598,"nodeType":"RevertStatement","src":"14909:48:28"}]}},{"expression":{"arguments":[{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"14991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5601,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:28","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5586,"id":5605,"nodeType":"Return","src":"14977:20:28"}]},"documentation":{"id":5580,"nodeType":"StructuredDocumentation","src":"14510:276:28","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:28","nodeType":"FunctionDefinition","parameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"value","nameLocation":"14817:5:28","nodeType":"VariableDeclaration","scope":5607,"src":"14809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:28"},"returnParameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5607,"src":"14847:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5584,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:28"},"scope":6579,"src":"14791:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5634,"nodeType":"Block","src":"15355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"15369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5617,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:28","memberName":"max","nodeType":"MemberAccess","src":"15377:16:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5628,"nodeType":"IfStatement","src":"15365:103:28","trueBody":{"id":5627,"nodeType":"Block","src":"15395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"15451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5622,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"15416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"RevertStatement","src":"15409:48:28"}]}},{"expression":{"arguments":[{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"15491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5629,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:28","typeDescriptions":{}}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5614,"id":5633,"nodeType":"Return","src":"15477:20:28"}]},"documentation":{"id":5608,"nodeType":"StructuredDocumentation","src":"15010:276:28","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5635,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"value","nameLocation":"15317:5:28","nodeType":"VariableDeclaration","scope":5635,"src":"15309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:28"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5635,"src":"15347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5612,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:28"},"scope":6579,"src":"15291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5662,"nodeType":"Block","src":"15855:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"15869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5645,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5644,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:28","memberName":"max","nodeType":"MemberAccess","src":"15877:16:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5656,"nodeType":"IfStatement","src":"15865:103:28","trueBody":{"id":5655,"nodeType":"Block","src":"15895:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"15951:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5650,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"15916:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5654,"nodeType":"RevertStatement","src":"15909:48:28"}]}},{"expression":{"arguments":[{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"15991:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5657,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:28","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5642,"id":5661,"nodeType":"Return","src":"15977:20:28"}]},"documentation":{"id":5636,"nodeType":"StructuredDocumentation","src":"15510:276:28","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5663,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:28","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"value","nameLocation":"15817:5:28","nodeType":"VariableDeclaration","scope":5663,"src":"15809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5637,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:28"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5663,"src":"15847:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5640,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:28"},"scope":6579,"src":"15791:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5690,"nodeType":"Block","src":"16355:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"16369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5673,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:28","memberName":"max","nodeType":"MemberAccess","src":"16377:16:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"IfStatement","src":"16365:103:28","trueBody":{"id":5683,"nodeType":"Block","src":"16395:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"16451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"16416:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5682,"nodeType":"RevertStatement","src":"16409:48:28"}]}},{"expression":{"arguments":[{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"16491:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5685,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:28","typeDescriptions":{}}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5670,"id":5689,"nodeType":"Return","src":"16477:20:28"}]},"documentation":{"id":5664,"nodeType":"StructuredDocumentation","src":"16010:276:28","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:28","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"value","nameLocation":"16317:5:28","nodeType":"VariableDeclaration","scope":5691,"src":"16309:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:28"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5691,"src":"16347:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5668,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:28"},"scope":6579,"src":"16291:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5718,"nodeType":"Block","src":"16849:146:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"16863:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5701,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5700,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:28","memberName":"max","nodeType":"MemberAccess","src":"16871:15:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5712,"nodeType":"IfStatement","src":"16859:101:28","trueBody":{"id":5711,"nodeType":"Block","src":"16888:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"16943:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5706,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"16909:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"RevertStatement","src":"16902:47:28"}]}},{"expression":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"16982:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5713,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:28","typeDescriptions":{}}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5698,"id":5717,"nodeType":"Return","src":"16969:19:28"}]},"documentation":{"id":5692,"nodeType":"StructuredDocumentation","src":"16510:272:28","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5719,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:28","nodeType":"FunctionDefinition","parameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"value","nameLocation":"16812:5:28","nodeType":"VariableDeclaration","scope":5719,"src":"16804:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5693,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:28"},"returnParameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5719,"src":"16842:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5696,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:28"},"scope":6579,"src":"16787:208:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5741,"nodeType":"Block","src":"17231:128:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"17245:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5735,"nodeType":"IfStatement","src":"17241:81:28","trueBody":{"id":5734,"nodeType":"Block","src":"17256:66:28","statements":[{"errorCall":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"17305:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5730,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"17277:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5733,"nodeType":"RevertStatement","src":"17270:41:28"}]}},{"expression":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"17346:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:28","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5726,"id":5740,"nodeType":"Return","src":"17331:21:28"}]},"documentation":{"id":5720,"nodeType":"StructuredDocumentation","src":"17001:160:28","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:28","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"value","nameLocation":"17192:5:28","nodeType":"VariableDeclaration","scope":5742,"src":"17185:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5721,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:28"},"returnParameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5742,"src":"17222:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5724,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:28"},"scope":6579,"src":"17166:193:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5767,"nodeType":"Block","src":"17756:150:28","statements":[{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"17766:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"17786:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5751,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:28","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5756,"nodeType":"ExpressionStatement","src":"17766:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"17806:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"17820:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5766,"nodeType":"IfStatement","src":"17802:98:28","trueBody":{"id":5765,"nodeType":"Block","src":"17827:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:28","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"17883:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5760,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"17848:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5764,"nodeType":"RevertStatement","src":"17841:48:28"}]}}]},"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"17365:312:28","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:28","nodeType":"FunctionDefinition","parameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"value","nameLocation":"17707:5:28","nodeType":"VariableDeclaration","scope":5768,"src":"17700:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5744,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:28"},"returnParameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:28","nodeType":"VariableDeclaration","scope":5768,"src":"17737:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5747,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:28"},"scope":6579,"src":"17682:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5793,"nodeType":"Block","src":"18303:150:28","statements":[{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"18313:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"18333:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5777,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:28","typeDescriptions":{}}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5782,"nodeType":"ExpressionStatement","src":"18313:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"18353:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"18367:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5792,"nodeType":"IfStatement","src":"18349:98:28","trueBody":{"id":5791,"nodeType":"Block","src":"18374:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:28","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"18430:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5786,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"18395:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5790,"nodeType":"RevertStatement","src":"18388:48:28"}]}}]},"documentation":{"id":5769,"nodeType":"StructuredDocumentation","src":"17912:312:28","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:28","nodeType":"FunctionDefinition","parameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"value","nameLocation":"18254:5:28","nodeType":"VariableDeclaration","scope":5794,"src":"18247:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5770,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:28"},"returnParameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:28","nodeType":"VariableDeclaration","scope":5794,"src":"18284:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5773,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:28"},"scope":6579,"src":"18229:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"18850:150:28","statements":[{"expression":{"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18860:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"18880:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5803,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:28","typeDescriptions":{}}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5808,"nodeType":"ExpressionStatement","src":"18860:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18900:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"18914:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"18896:98:28","trueBody":{"id":5817,"nodeType":"Block","src":"18921:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:28","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"18977:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5812,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"18942:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"RevertStatement","src":"18935:48:28"}]}}]},"documentation":{"id":5795,"nodeType":"StructuredDocumentation","src":"18459:312:28","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:28","nodeType":"FunctionDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"value","nameLocation":"18801:5:28","nodeType":"VariableDeclaration","scope":5820,"src":"18794:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5796,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:28"},"returnParameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:28","nodeType":"VariableDeclaration","scope":5820,"src":"18831:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5799,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:28"},"scope":6579,"src":"18776:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5845,"nodeType":"Block","src":"19397:150:28","statements":[{"expression":{"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"19407:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"19427:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5829,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:28","typeDescriptions":{}}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5834,"nodeType":"ExpressionStatement","src":"19407:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"19447:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"19461:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5844,"nodeType":"IfStatement","src":"19443:98:28","trueBody":{"id":5843,"nodeType":"Block","src":"19468:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:28","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"19524:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5838,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"19489:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5842,"nodeType":"RevertStatement","src":"19482:48:28"}]}}]},"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"19006:312:28","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5846,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:28","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"value","nameLocation":"19348:5:28","nodeType":"VariableDeclaration","scope":5846,"src":"19341:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5822,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:28"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:28","nodeType":"VariableDeclaration","scope":5846,"src":"19378:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5825,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:28"},"scope":6579,"src":"19323:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"19944:150:28","statements":[{"expression":{"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"19954:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"19974:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5855,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:28","typeDescriptions":{}}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5860,"nodeType":"ExpressionStatement","src":"19954:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"19994:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"20008:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5870,"nodeType":"IfStatement","src":"19990:98:28","trueBody":{"id":5869,"nodeType":"Block","src":"20015:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:28","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"20071:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"20036:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5868,"nodeType":"RevertStatement","src":"20029:48:28"}]}}]},"documentation":{"id":5847,"nodeType":"StructuredDocumentation","src":"19553:312:28","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:28","nodeType":"FunctionDefinition","parameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"value","nameLocation":"19895:5:28","nodeType":"VariableDeclaration","scope":5872,"src":"19888:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5848,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:28"},"returnParameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:28","nodeType":"VariableDeclaration","scope":5872,"src":"19925:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5851,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:28"},"scope":6579,"src":"19870:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5897,"nodeType":"Block","src":"20491:150:28","statements":[{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"20501:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"20521:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5881,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:28","typeDescriptions":{}}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5886,"nodeType":"ExpressionStatement","src":"20501:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"20541:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"20555:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"20537:98:28","trueBody":{"id":5895,"nodeType":"Block","src":"20562:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:28","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"20618:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5890,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"20583:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5894,"nodeType":"RevertStatement","src":"20576:48:28"}]}}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"20100:312:28","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:28","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"value","nameLocation":"20442:5:28","nodeType":"VariableDeclaration","scope":5898,"src":"20435:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5874,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:28"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:28","nodeType":"VariableDeclaration","scope":5898,"src":"20472:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5877,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:28"},"scope":6579,"src":"20417:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5923,"nodeType":"Block","src":"21038:150:28","statements":[{"expression":{"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"21048:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"21068:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5907,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:28","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5912,"nodeType":"ExpressionStatement","src":"21048:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"21088:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"21102:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5922,"nodeType":"IfStatement","src":"21084:98:28","trueBody":{"id":5921,"nodeType":"Block","src":"21109:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:28","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"21165:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5916,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"21130:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5920,"nodeType":"RevertStatement","src":"21123:48:28"}]}}]},"documentation":{"id":5899,"nodeType":"StructuredDocumentation","src":"20647:312:28","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:28","nodeType":"FunctionDefinition","parameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"value","nameLocation":"20989:5:28","nodeType":"VariableDeclaration","scope":5924,"src":"20982:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5900,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:28"},"returnParameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:28","nodeType":"VariableDeclaration","scope":5924,"src":"21019:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5903,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:28"},"scope":6579,"src":"20964:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5949,"nodeType":"Block","src":"21585:150:28","statements":[{"expression":{"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"21595:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"21615:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5933,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:28","typeDescriptions":{}}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5938,"nodeType":"ExpressionStatement","src":"21595:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"21635:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"21649:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5948,"nodeType":"IfStatement","src":"21631:98:28","trueBody":{"id":5947,"nodeType":"Block","src":"21656:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"21712:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5942,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"21677:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"RevertStatement","src":"21670:48:28"}]}}]},"documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"21194:312:28","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:28","nodeType":"FunctionDefinition","parameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"value","nameLocation":"21536:5:28","nodeType":"VariableDeclaration","scope":5950,"src":"21529:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5926,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:28"},"returnParameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:28","nodeType":"VariableDeclaration","scope":5950,"src":"21566:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5929,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:28"},"scope":6579,"src":"21511:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5975,"nodeType":"Block","src":"22132:150:28","statements":[{"expression":{"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"22142:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"22162:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5959,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:28","typeDescriptions":{}}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5964,"nodeType":"ExpressionStatement","src":"22142:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"22182:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"22196:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"nodeType":"IfStatement","src":"22178:98:28","trueBody":{"id":5973,"nodeType":"Block","src":"22203:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:28","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"22259:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5968,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"22224:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5972,"nodeType":"RevertStatement","src":"22217:48:28"}]}}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"21741:312:28","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:28","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"value","nameLocation":"22083:5:28","nodeType":"VariableDeclaration","scope":5976,"src":"22076:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5952,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:28"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:28","nodeType":"VariableDeclaration","scope":5976,"src":"22113:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5955,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:28"},"scope":6579,"src":"22058:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6001,"nodeType":"Block","src":"22679:150:28","statements":[{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"22689:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"22709:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5985,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:28","typeDescriptions":{}}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5990,"nodeType":"ExpressionStatement","src":"22689:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"22729:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"22743:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6000,"nodeType":"IfStatement","src":"22725:98:28","trueBody":{"id":5999,"nodeType":"Block","src":"22750:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:28","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"22806:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5994,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"22771:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5998,"nodeType":"RevertStatement","src":"22764:48:28"}]}}]},"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"22288:312:28","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6002,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:28","nodeType":"FunctionDefinition","parameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"value","nameLocation":"22630:5:28","nodeType":"VariableDeclaration","scope":6002,"src":"22623:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5978,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:28"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:28","nodeType":"VariableDeclaration","scope":6002,"src":"22660:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5981,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:28"},"scope":6579,"src":"22605:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6027,"nodeType":"Block","src":"23226:150:28","statements":[{"expression":{"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6010,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"23236:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"23256:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6011,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:28","typeDescriptions":{}}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6016,"nodeType":"ExpressionStatement","src":"23236:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"23276:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"23290:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6026,"nodeType":"IfStatement","src":"23272:98:28","trueBody":{"id":6025,"nodeType":"Block","src":"23297:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:28","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"23353:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6020,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"23318:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6024,"nodeType":"RevertStatement","src":"23311:48:28"}]}}]},"documentation":{"id":6003,"nodeType":"StructuredDocumentation","src":"22835:312:28","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:28","nodeType":"FunctionDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"value","nameLocation":"23177:5:28","nodeType":"VariableDeclaration","scope":6028,"src":"23170:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6004,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:28"},"returnParameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6008,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:28","nodeType":"VariableDeclaration","scope":6028,"src":"23207:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6007,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:28"},"scope":6579,"src":"23152:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6053,"nodeType":"Block","src":"23773:150:28","statements":[{"expression":{"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"23783:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"23803:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6037,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:28","typeDescriptions":{}}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6042,"nodeType":"ExpressionStatement","src":"23783:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"23823:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"23837:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"23819:98:28","trueBody":{"id":6051,"nodeType":"Block","src":"23844:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:28","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"23900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6046,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"23865:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"RevertStatement","src":"23858:48:28"}]}}]},"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"23382:312:28","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6054,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:28","nodeType":"FunctionDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"value","nameLocation":"23724:5:28","nodeType":"VariableDeclaration","scope":6054,"src":"23717:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6030,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:28"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:28","nodeType":"VariableDeclaration","scope":6054,"src":"23754:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6033,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:28"},"scope":6579,"src":"23699:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6079,"nodeType":"Block","src":"24320:150:28","statements":[{"expression":{"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"24330:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"24350:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6063,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:28","typeDescriptions":{}}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6068,"nodeType":"ExpressionStatement","src":"24330:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"24370:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"24384:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"IfStatement","src":"24366:98:28","trueBody":{"id":6077,"nodeType":"Block","src":"24391:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:28","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"24447:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6072,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"24412:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6076,"nodeType":"RevertStatement","src":"24405:48:28"}]}}]},"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"23929:312:28","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6080,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:28","nodeType":"FunctionDefinition","parameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"value","nameLocation":"24271:5:28","nodeType":"VariableDeclaration","scope":6080,"src":"24264:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6056,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:28"},"returnParameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:28","nodeType":"VariableDeclaration","scope":6080,"src":"24301:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6059,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:28"},"scope":6579,"src":"24246:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"24867:150:28","statements":[{"expression":{"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"24877:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"24897:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6089,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:28","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6094,"nodeType":"ExpressionStatement","src":"24877:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"24917:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"24931:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6104,"nodeType":"IfStatement","src":"24913:98:28","trueBody":{"id":6103,"nodeType":"Block","src":"24938:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:28","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"24994:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6098,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"24959:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6102,"nodeType":"RevertStatement","src":"24952:48:28"}]}}]},"documentation":{"id":6081,"nodeType":"StructuredDocumentation","src":"24476:312:28","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:28","nodeType":"FunctionDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"value","nameLocation":"24818:5:28","nodeType":"VariableDeclaration","scope":6106,"src":"24811:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6082,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:28"},"returnParameters":{"id":6087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:28","nodeType":"VariableDeclaration","scope":6106,"src":"24848:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6085,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:28"},"scope":6579,"src":"24793:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6131,"nodeType":"Block","src":"25414:150:28","statements":[{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"25424:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"25444:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6115,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:28","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6120,"nodeType":"ExpressionStatement","src":"25424:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"25464:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"25478:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"25460:98:28","trueBody":{"id":6129,"nodeType":"Block","src":"25485:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:28","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"25541:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"25506:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"RevertStatement","src":"25499:48:28"}]}}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"25023:312:28","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:28","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"value","nameLocation":"25365:5:28","nodeType":"VariableDeclaration","scope":6132,"src":"25358:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6108,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:28"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:28","nodeType":"VariableDeclaration","scope":6132,"src":"25395:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6111,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:28"},"scope":6579,"src":"25340:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6157,"nodeType":"Block","src":"25961:150:28","statements":[{"expression":{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"25971:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25991:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6141,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:28","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6146,"nodeType":"ExpressionStatement","src":"25971:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"26011:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"26025:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6156,"nodeType":"IfStatement","src":"26007:98:28","trueBody":{"id":6155,"nodeType":"Block","src":"26032:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"26088:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6150,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"26053:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6154,"nodeType":"RevertStatement","src":"26046:48:28"}]}}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"25570:312:28","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6158,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:28","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"value","nameLocation":"25912:5:28","nodeType":"VariableDeclaration","scope":6158,"src":"25905:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6134,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:28"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:28","nodeType":"VariableDeclaration","scope":6158,"src":"25942:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6137,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:28"},"scope":6579,"src":"25887:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6183,"nodeType":"Block","src":"26508:150:28","statements":[{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"26518:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"26538:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6167,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:28","typeDescriptions":{}}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6172,"nodeType":"ExpressionStatement","src":"26518:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"26558:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"26572:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6182,"nodeType":"IfStatement","src":"26554:98:28","trueBody":{"id":6181,"nodeType":"Block","src":"26579:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:28","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"26635:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6176,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"26600:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6180,"nodeType":"RevertStatement","src":"26593:48:28"}]}}]},"documentation":{"id":6159,"nodeType":"StructuredDocumentation","src":"26117:312:28","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6184,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:28","nodeType":"FunctionDefinition","parameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"value","nameLocation":"26459:5:28","nodeType":"VariableDeclaration","scope":6184,"src":"26452:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6160,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:28"},"returnParameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:28","nodeType":"VariableDeclaration","scope":6184,"src":"26489:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6163,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:28"},"scope":6579,"src":"26434:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6209,"nodeType":"Block","src":"27055:150:28","statements":[{"expression":{"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"27065:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"27085:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6193,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:28","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6198,"nodeType":"ExpressionStatement","src":"27065:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"27105:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"27119:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6208,"nodeType":"IfStatement","src":"27101:98:28","trueBody":{"id":6207,"nodeType":"Block","src":"27126:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:28","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"27182:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6202,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"27147:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"RevertStatement","src":"27140:48:28"}]}}]},"documentation":{"id":6185,"nodeType":"StructuredDocumentation","src":"26664:312:28","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:28","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"value","nameLocation":"27006:5:28","nodeType":"VariableDeclaration","scope":6210,"src":"26999:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6186,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:28"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:28","nodeType":"VariableDeclaration","scope":6210,"src":"27036:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6189,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:28"},"scope":6579,"src":"26981:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6235,"nodeType":"Block","src":"27602:150:28","statements":[{"expression":{"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"27612:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"27632:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6219,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:28","typeDescriptions":{}}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6224,"nodeType":"ExpressionStatement","src":"27612:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"27652:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"27666:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6234,"nodeType":"IfStatement","src":"27648:98:28","trueBody":{"id":6233,"nodeType":"Block","src":"27673:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:28","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"27729:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6228,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"27694:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6232,"nodeType":"RevertStatement","src":"27687:48:28"}]}}]},"documentation":{"id":6211,"nodeType":"StructuredDocumentation","src":"27211:312:28","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:28","nodeType":"FunctionDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"value","nameLocation":"27553:5:28","nodeType":"VariableDeclaration","scope":6236,"src":"27546:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6212,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:28"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:28","nodeType":"VariableDeclaration","scope":6236,"src":"27583:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6215,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:28"},"scope":6579,"src":"27528:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6261,"nodeType":"Block","src":"28142:148:28","statements":[{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"28152:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"28171:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6245,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:28","typeDescriptions":{}}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6250,"nodeType":"ExpressionStatement","src":"28152:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"28191:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"28205:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6260,"nodeType":"IfStatement","src":"28187:97:28","trueBody":{"id":6259,"nodeType":"Block","src":"28212:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"28267:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6254,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"28233:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"28226:47:28"}]}}]},"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"27758:307:28","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6262,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:28","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"value","nameLocation":"28094:5:28","nodeType":"VariableDeclaration","scope":6262,"src":"28087:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6238,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:28"},"returnParameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:28","nodeType":"VariableDeclaration","scope":6262,"src":"28124:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6241,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:28"},"scope":6579,"src":"28070:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6287,"nodeType":"Block","src":"28680:148:28","statements":[{"expression":{"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"28690:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"28709:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6271,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:28","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6276,"nodeType":"ExpressionStatement","src":"28690:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"28729:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"28743:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6286,"nodeType":"IfStatement","src":"28725:97:28","trueBody":{"id":6285,"nodeType":"Block","src":"28750:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:28","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"28805:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6280,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"28771:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6284,"nodeType":"RevertStatement","src":"28764:47:28"}]}}]},"documentation":{"id":6263,"nodeType":"StructuredDocumentation","src":"28296:307:28","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:28","nodeType":"FunctionDefinition","parameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"value","nameLocation":"28632:5:28","nodeType":"VariableDeclaration","scope":6288,"src":"28625:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6264,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:28"},"returnParameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:28","nodeType":"VariableDeclaration","scope":6288,"src":"28662:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6267,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:28"},"scope":6579,"src":"28608:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6313,"nodeType":"Block","src":"29218:148:28","statements":[{"expression":{"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"29228:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"29247:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6297,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:28","typeDescriptions":{}}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6302,"nodeType":"ExpressionStatement","src":"29228:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"29267:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"29281:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6312,"nodeType":"IfStatement","src":"29263:97:28","trueBody":{"id":6311,"nodeType":"Block","src":"29288:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:28","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"29343:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6306,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"29309:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"RevertStatement","src":"29302:47:28"}]}}]},"documentation":{"id":6289,"nodeType":"StructuredDocumentation","src":"28834:307:28","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:28","nodeType":"FunctionDefinition","parameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"value","nameLocation":"29170:5:28","nodeType":"VariableDeclaration","scope":6314,"src":"29163:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6290,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:28"},"returnParameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:28","nodeType":"VariableDeclaration","scope":6314,"src":"29200:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6293,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:28"},"scope":6579,"src":"29146:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6339,"nodeType":"Block","src":"29756:148:28","statements":[{"expression":{"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"29766:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"29785:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6323,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:28","typeDescriptions":{}}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6328,"nodeType":"ExpressionStatement","src":"29766:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"29805:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"29819:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6338,"nodeType":"IfStatement","src":"29801:97:28","trueBody":{"id":6337,"nodeType":"Block","src":"29826:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:28","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"29881:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6332,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"29847:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6336,"nodeType":"RevertStatement","src":"29840:47:28"}]}}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"29372:307:28","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6340,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:28","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"value","nameLocation":"29708:5:28","nodeType":"VariableDeclaration","scope":6340,"src":"29701:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:28"},"returnParameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:28","nodeType":"VariableDeclaration","scope":6340,"src":"29738:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6319,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:28"},"scope":6579,"src":"29684:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6365,"nodeType":"Block","src":"30294:148:28","statements":[{"expression":{"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"30304:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"30323:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6349,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:28","typeDescriptions":{}}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6354,"nodeType":"ExpressionStatement","src":"30304:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"30343:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"30357:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6364,"nodeType":"IfStatement","src":"30339:97:28","trueBody":{"id":6363,"nodeType":"Block","src":"30364:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"30419:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6358,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"30385:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6362,"nodeType":"RevertStatement","src":"30378:47:28"}]}}]},"documentation":{"id":6341,"nodeType":"StructuredDocumentation","src":"29910:307:28","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:28","nodeType":"FunctionDefinition","parameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"value","nameLocation":"30246:5:28","nodeType":"VariableDeclaration","scope":6366,"src":"30239:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6342,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:28"},"returnParameters":{"id":6347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:28","nodeType":"VariableDeclaration","scope":6366,"src":"30276:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6345,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:28"},"scope":6579,"src":"30222:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6391,"nodeType":"Block","src":"30832:148:28","statements":[{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"30842:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"30861:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6375,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:28","typeDescriptions":{}}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6380,"nodeType":"ExpressionStatement","src":"30842:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"30881:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"30895:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6390,"nodeType":"IfStatement","src":"30877:97:28","trueBody":{"id":6389,"nodeType":"Block","src":"30902:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:28","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"30957:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6384,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"30923:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"RevertStatement","src":"30916:47:28"}]}}]},"documentation":{"id":6367,"nodeType":"StructuredDocumentation","src":"30448:307:28","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6392,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:28","nodeType":"FunctionDefinition","parameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"value","nameLocation":"30784:5:28","nodeType":"VariableDeclaration","scope":6392,"src":"30777:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6368,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:28"},"returnParameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:28","nodeType":"VariableDeclaration","scope":6392,"src":"30814:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6371,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:28"},"scope":6579,"src":"30760:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6417,"nodeType":"Block","src":"31370:148:28","statements":[{"expression":{"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"31380:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"31399:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6401,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:28","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6406,"nodeType":"ExpressionStatement","src":"31380:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"31419:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"31433:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"31415:97:28","trueBody":{"id":6415,"nodeType":"Block","src":"31440:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"31495:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"31461:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"RevertStatement","src":"31454:47:28"}]}}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"30986:307:28","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:28","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"value","nameLocation":"31322:5:28","nodeType":"VariableDeclaration","scope":6418,"src":"31315:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6394,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:28"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:28","nodeType":"VariableDeclaration","scope":6418,"src":"31352:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6397,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:28"},"scope":6579,"src":"31298:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6443,"nodeType":"Block","src":"31908:148:28","statements":[{"expression":{"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"31918:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"31937:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6427,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:28","typeDescriptions":{}}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6432,"nodeType":"ExpressionStatement","src":"31918:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"31957:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"31971:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6442,"nodeType":"IfStatement","src":"31953:97:28","trueBody":{"id":6441,"nodeType":"Block","src":"31978:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:28","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"32033:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"31999:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6440,"nodeType":"RevertStatement","src":"31992:47:28"}]}}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"31524:307:28","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:28","nodeType":"FunctionDefinition","parameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"value","nameLocation":"31860:5:28","nodeType":"VariableDeclaration","scope":6444,"src":"31853:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6420,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:28"},"returnParameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:28","nodeType":"VariableDeclaration","scope":6444,"src":"31890:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6423,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:28"},"scope":6579,"src":"31836:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"32446:148:28","statements":[{"expression":{"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"32456:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"32475:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6453,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:28","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6458,"nodeType":"ExpressionStatement","src":"32456:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"32495:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"32509:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6468,"nodeType":"IfStatement","src":"32491:97:28","trueBody":{"id":6467,"nodeType":"Block","src":"32516:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"32571:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"32537:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6466,"nodeType":"RevertStatement","src":"32530:47:28"}]}}]},"documentation":{"id":6445,"nodeType":"StructuredDocumentation","src":"32062:307:28","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:28","nodeType":"FunctionDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"value","nameLocation":"32398:5:28","nodeType":"VariableDeclaration","scope":6470,"src":"32391:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6446,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:28"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:28","nodeType":"VariableDeclaration","scope":6470,"src":"32428:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6449,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:28"},"scope":6579,"src":"32374:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"32984:148:28","statements":[{"expression":{"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"32994:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"33013:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6479,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:28","typeDescriptions":{}}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6484,"nodeType":"ExpressionStatement","src":"32994:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"33033:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"33047:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6494,"nodeType":"IfStatement","src":"33029:97:28","trueBody":{"id":6493,"nodeType":"Block","src":"33054:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:28","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"33109:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"33075:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"RevertStatement","src":"33068:47:28"}]}}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"32600:307:28","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:28","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"value","nameLocation":"32936:5:28","nodeType":"VariableDeclaration","scope":6496,"src":"32929:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6472,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:28"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:28","nodeType":"VariableDeclaration","scope":6496,"src":"32966:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6475,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:28"},"scope":6579,"src":"32912:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6521,"nodeType":"Block","src":"33522:148:28","statements":[{"expression":{"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"33532:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"33551:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6505,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:28","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6510,"nodeType":"ExpressionStatement","src":"33532:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"33571:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"33585:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6520,"nodeType":"IfStatement","src":"33567:97:28","trueBody":{"id":6519,"nodeType":"Block","src":"33592:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"33647:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"33613:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6518,"nodeType":"RevertStatement","src":"33606:47:28"}]}}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"33138:307:28","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:28","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"value","nameLocation":"33474:5:28","nodeType":"VariableDeclaration","scope":6522,"src":"33467:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6498,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:28"},"returnParameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6502,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:28","nodeType":"VariableDeclaration","scope":6522,"src":"33504:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6501,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:28"},"scope":6579,"src":"33450:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6547,"nodeType":"Block","src":"34053:146:28","statements":[{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"34063:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"34081:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6531,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:28","typeDescriptions":{}}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6536,"nodeType":"ExpressionStatement","src":"34063:24:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"34101:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"34115:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6546,"nodeType":"IfStatement","src":"34097:96:28","trueBody":{"id":6545,"nodeType":"Block","src":"34122:71:28","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"34176:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6540,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"34143:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6544,"nodeType":"RevertStatement","src":"34136:46:28"}]}}]},"documentation":{"id":6523,"nodeType":"StructuredDocumentation","src":"33676:302:28","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6548,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:28","nodeType":"FunctionDefinition","parameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"value","nameLocation":"34006:5:28","nodeType":"VariableDeclaration","scope":6548,"src":"33999:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6524,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:28"},"returnParameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:28","nodeType":"VariableDeclaration","scope":6548,"src":"34036:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6527,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:28"},"scope":6579,"src":"33983:216:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6577,"nodeType":"Block","src":"34439:250:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"34552:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6560,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:28","memberName":"max","nodeType":"MemberAccess","src":"34568:16:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:28","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6571,"nodeType":"IfStatement","src":"34548:105:28","trueBody":{"id":6570,"nodeType":"Block","src":"34587:66:28","statements":[{"errorCall":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"34636:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"34608:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6569,"nodeType":"RevertStatement","src":"34601:41:28"}]}},{"expression":{"arguments":[{"id":6574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"34676:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6572,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:28","typeDescriptions":{}}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6555,"id":6576,"nodeType":"Return","src":"34662:20:28"}]},"documentation":{"id":6549,"nodeType":"StructuredDocumentation","src":"34205:165:28","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:28","nodeType":"FunctionDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"value","nameLocation":"34401:5:28","nodeType":"VariableDeclaration","scope":6578,"src":"34393:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:28"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6578,"src":"34431:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6553,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:28"},"scope":6579,"src":"34375:314:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6580,"src":"764:33927:28","usedErrors":[4834,4839,4846,4851],"usedEvents":[]}],"src":"192:34500:28"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":29,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6684]},"id":6685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6581,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6582,"nodeType":"StructuredDocumentation","src":"135:80:29","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6684,"linearizedBaseContracts":[6684],"name":"SignedMath","nameLocation":"224:10:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":6599,"nodeType":"Block","src":"376:37:29","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"393:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"397:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"405:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:29","trueExpression":{"id":6595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"401:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6591,"id":6598,"nodeType":"Return","src":"386:20:29"}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"241:66:29","text":" @dev Returns the largest of two signed numbers."},"id":6600,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:29","nodeType":"FunctionDefinition","parameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"a","nameLocation":"332:1:29","nodeType":"VariableDeclaration","scope":6600,"src":"325:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6587,"mutability":"mutable","name":"b","nameLocation":"342:1:29","nodeType":"VariableDeclaration","scope":6600,"src":"335:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6586,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:29"},"returnParameters":{"id":6591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6600,"src":"368:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6589,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:29"},"scope":6684,"src":"312:101:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"555:37:29","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"572:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"576:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"584:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:29","trueExpression":{"id":6613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"580:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6609,"id":6616,"nodeType":"Return","src":"565:20:29"}]},"documentation":{"id":6601,"nodeType":"StructuredDocumentation","src":"419:67:29","text":" @dev Returns the smallest of two signed numbers."},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:29","nodeType":"FunctionDefinition","parameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"a","nameLocation":"511:1:29","nodeType":"VariableDeclaration","scope":6618,"src":"504:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6602,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6605,"mutability":"mutable","name":"b","nameLocation":"521:1:29","nodeType":"VariableDeclaration","scope":6618,"src":"514:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6604,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:29"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6618,"src":"547:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6607,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:29"},"scope":6684,"src":"491:101:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6661,"nodeType":"Block","src":"797:162:29","statements":[{"assignments":[6629],"declarations":[{"constant":false,"id":6629,"mutability":"mutable","name":"x","nameLocation":"866:1:29","nodeType":"VariableDeclaration","scope":6661,"src":"859:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6628,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6642,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"871:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"875:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"882:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"886:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:29"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6643,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"911:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6648,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"931:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:29","typeDescriptions":{}}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6644,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:29","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"945:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6654,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"949:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6627,"id":6660,"nodeType":"Return","src":"904:48:29"}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"598:126:29","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:29","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"a","nameLocation":"753:1:29","nodeType":"VariableDeclaration","scope":6662,"src":"746:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6620,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"b","nameLocation":"763:1:29","nodeType":"VariableDeclaration","scope":6662,"src":"756:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:29"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6662,"src":"789:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6625,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:29"},"scope":6684,"src":"729:230:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"1103:158:29","statements":[{"id":6681,"nodeType":"UncheckedBlock","src":"1113:142:29","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6672,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1228:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:29","subExpression":{"id":6676,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1242:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:29","trueExpression":{"id":6675,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1237:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:29","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6669,"id":6680,"nodeType":"Return","src":"1213:31:29"}]}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"965:78:29","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:29","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"n","nameLocation":"1068:1:29","nodeType":"VariableDeclaration","scope":6683,"src":"1061:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6664,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:29"},"returnParameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"1094:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:29"},"scope":6684,"src":"1048:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6685,"src":"216:1047:29","usedErrors":[],"usedEvents":[]}],"src":"109:1155:29"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"id":30,"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[8256],"Math":[4824]},"id":8257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":6688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8257,"sourceUnit":4825,"src":"227:38:30","symbolAliases":[{"foreign":{"id":6687,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"235:4:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":6689,"nodeType":"StructuredDocumentation","src":"267:400:30","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":8256,"linearizedBaseContracts":[8256],"name":"Checkpoints","nameLocation":"676:11:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6690,"nodeType":"StructuredDocumentation","src":"694:82:30","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":6692,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:30","nodeType":"ErrorDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[],"src":"815:2:30"},"src":"781:37:30"},{"canonicalName":"Checkpoints.Trace224","id":6697,"members":[{"constant":false,"id":6696,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:30","nodeType":"VariableDeclaration","scope":6697,"src":"850:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6694,"nodeType":"UserDefinedTypeName","pathNode":{"id":6693,"name":"Checkpoint224","nameLocations":["850:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"850:13:30"},"referencedDeclaration":6702,"src":"850:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6695,"nodeType":"ArrayTypeName","src":"850:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:30","nodeType":"StructDefinition","scope":8256,"src":"824:61:30","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":6702,"members":[{"constant":false,"id":6699,"mutability":"mutable","name":"_key","nameLocation":"929:4:30","nodeType":"VariableDeclaration","scope":6702,"src":"922:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6698,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6701,"mutability":"mutable","name":"_value","nameLocation":"951:6:30","nodeType":"VariableDeclaration","scope":6702,"src":"943:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6700,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:30","nodeType":"StructDefinition","scope":8256,"src":"891:73:30","visibility":"public"},{"body":{"id":6724,"nodeType":"Block","src":"1377:62:30","statements":[{"expression":{"arguments":[{"expression":{"id":6718,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"1402:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1407:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"1402:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6720,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"1421:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"1426:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6717,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7094,7615,8136],"referencedDeclaration":7094,"src":"1394:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":6716,"id":6723,"nodeType":"Return","src":"1387:45:30"}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"970:302:30","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":6725,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:30","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"self","nameLocation":"1308:4:30","nodeType":"VariableDeclaration","scope":6725,"src":"1291:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6705,"nodeType":"UserDefinedTypeName","pathNode":{"id":6704,"name":"Trace224","nameLocations":["1291:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"1291:8:30"},"referencedDeclaration":6697,"src":"1291:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6708,"mutability":"mutable","name":"key","nameLocation":"1321:3:30","nodeType":"VariableDeclaration","scope":6725,"src":"1314:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6707,"name":"uint32","nodeType":"ElementaryTypeName","src":"1314:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"1334:5:30","nodeType":"VariableDeclaration","scope":6725,"src":"1326:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6709,"name":"uint224","nodeType":"ElementaryTypeName","src":"1326:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:50:30"},"returnParameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6725,"src":"1359:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6712,"name":"uint224","nodeType":"ElementaryTypeName","src":"1359:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":6715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6725,"src":"1368:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6714,"name":"uint224","nodeType":"ElementaryTypeName","src":"1368:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1358:18:30"},"scope":8256,"src":"1277:162:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6764,"nodeType":"Block","src":"1692:207:30","statements":[{"assignments":[6737],"declarations":[{"constant":false,"id":6737,"mutability":"mutable","name":"len","nameLocation":"1710:3:30","nodeType":"VariableDeclaration","scope":6764,"src":"1702:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6741,"initialValue":{"expression":{"expression":{"id":6738,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"1716:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"1716:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:6:30","memberName":"length","nodeType":"MemberAccess","src":"1716:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:38:30"},{"assignments":[6743],"declarations":[{"constant":false,"id":6743,"mutability":"mutable","name":"pos","nameLocation":"1758:3:30","nodeType":"VariableDeclaration","scope":6764,"src":"1750:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6751,"initialValue":{"arguments":[{"expression":{"id":6745,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"1783:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1788:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"1783:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6747,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"1802:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6749,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"1810:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6744,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7198,7719,8240],"referencedDeclaration":7198,"src":"1764:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6752,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"1831:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6753,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"1838:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1831:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6757,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"1862:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1867:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"1862:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6759,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"1881:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"1848:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"1848:44:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1831:61:30","trueExpression":{"hexValue":"30","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6735,"id":6763,"nodeType":"Return","src":"1824:68:30"}]},"documentation":{"id":6726,"nodeType":"StructuredDocumentation","src":"1445:154:30","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":6765,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1613:11:30","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"self","nameLocation":"1642:4:30","nodeType":"VariableDeclaration","scope":6765,"src":"1625:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6728,"nodeType":"UserDefinedTypeName","pathNode":{"id":6727,"name":"Trace224","nameLocations":["1625:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"1625:8:30"},"referencedDeclaration":6697,"src":"1625:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6731,"mutability":"mutable","name":"key","nameLocation":"1655:3:30","nodeType":"VariableDeclaration","scope":6765,"src":"1648:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6730,"name":"uint32","nodeType":"ElementaryTypeName","src":"1648:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:35:30"},"returnParameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6765,"src":"1683:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6733,"name":"uint224","nodeType":"ElementaryTypeName","src":"1683:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1682:9:30"},"scope":8256,"src":"1604:295:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6806,"nodeType":"Block","src":"2154:209:30","statements":[{"assignments":[6777],"declarations":[{"constant":false,"id":6777,"mutability":"mutable","name":"len","nameLocation":"2172:3:30","nodeType":"VariableDeclaration","scope":6806,"src":"2164:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6781,"initialValue":{"expression":{"expression":{"id":6778,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"2178:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2183:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2178:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2196:6:30","memberName":"length","nodeType":"MemberAccess","src":"2178:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:38:30"},{"assignments":[6783],"declarations":[{"constant":false,"id":6783,"mutability":"mutable","name":"pos","nameLocation":"2220:3:30","nodeType":"VariableDeclaration","scope":6806,"src":"2212:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6791,"initialValue":{"arguments":[{"expression":{"id":6785,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"2245:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2250:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2245:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6787,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"2264:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6789,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"2272:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6784,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":7146,"src":"2226:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"2293:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2293:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6797,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"2322:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2327:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2322:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"2341:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2347:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2341:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6796,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"2308:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"2308:48:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2293:63:30","trueExpression":{"hexValue":"30","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6775,"id":6805,"nodeType":"Return","src":"2286:70:30"}]},"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"1905:156:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":6807,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2075:11:30","nodeType":"FunctionDefinition","parameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"self","nameLocation":"2104:4:30","nodeType":"VariableDeclaration","scope":6807,"src":"2087:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6768,"nodeType":"UserDefinedTypeName","pathNode":{"id":6767,"name":"Trace224","nameLocations":["2087:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"2087:8:30"},"referencedDeclaration":6697,"src":"2087:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6771,"mutability":"mutable","name":"key","nameLocation":"2117:3:30","nodeType":"VariableDeclaration","scope":6807,"src":"2110:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6770,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2086:35:30"},"returnParameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6807,"src":"2145:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6773,"name":"uint224","nodeType":"ElementaryTypeName","src":"2145:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2144:9:30"},"scope":8256,"src":"2066:297:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6891,"nodeType":"Block","src":"2762:512:30","statements":[{"assignments":[6819],"declarations":[{"constant":false,"id":6819,"mutability":"mutable","name":"len","nameLocation":"2780:3:30","nodeType":"VariableDeclaration","scope":6891,"src":"2772:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6823,"initialValue":{"expression":{"expression":{"id":6820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"2786:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2791:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2786:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:30","memberName":"length","nodeType":"MemberAccess","src":"2786:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2772:38:30"},{"assignments":[6825],"declarations":[{"constant":false,"id":6825,"mutability":"mutable","name":"low","nameLocation":"2829:3:30","nodeType":"VariableDeclaration","scope":6891,"src":"2821:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6827,"initialValue":{"hexValue":"30","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2821:15:30"},{"assignments":[6829],"declarations":[{"constant":false,"id":6829,"mutability":"mutable","name":"high","nameLocation":"2854:4:30","nodeType":"VariableDeclaration","scope":6891,"src":"2846:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6831,"initialValue":{"id":6830,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"2861:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2846:18:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"2879:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2879:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"2875:234:30","trueBody":{"id":6865,"nodeType":"Block","src":"2888:221:30","statements":[{"assignments":[6836],"declarations":[{"constant":false,"id":6836,"mutability":"mutable","name":"mid","nameLocation":"2910:3:30","nodeType":"VariableDeclaration","scope":6865,"src":"2902:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2902:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6837,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"2916:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6840,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"2932:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6838,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"2922:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:4:30","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4313,"src":"2922:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2902:34:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"2954:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":6846,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"2974:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2979:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2974:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6848,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"2993:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6845,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"2960:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2998:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"2960:42:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2954:48:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6863,"nodeType":"Block","src":"3053:46:30","statements":[{"expression":{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6857,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"3071:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"3077:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3071:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6862,"nodeType":"ExpressionStatement","src":"3071:13:30"}]},"id":6864,"nodeType":"IfStatement","src":"2950:149:30","trueBody":{"id":6856,"nodeType":"Block","src":"3004:43:30","statements":[{"expression":{"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6852,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3022:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6853,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"3029:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6855,"nodeType":"ExpressionStatement","src":"3022:10:30"}]}}]}},{"assignments":[6868],"declarations":[{"constant":false,"id":6868,"mutability":"mutable","name":"pos","nameLocation":"3127:3:30","nodeType":"VariableDeclaration","scope":6891,"src":"3119:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6876,"initialValue":{"arguments":[{"expression":{"id":6870,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"3152:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3152:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6872,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"3171:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6873,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"3176:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6874,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3181:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6869,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":7146,"src":"3133:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:67:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6877,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"3204:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3204:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6882,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"3233:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3238:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3233:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6884,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"3252:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"3219:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"3219:48:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3204:63:30","trueExpression":{"hexValue":"30","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6817,"id":6890,"nodeType":"Return","src":"3197:70:30"}]},"documentation":{"id":6808,"nodeType":"StructuredDocumentation","src":"2369:294:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2677:17:30","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"self","nameLocation":"2712:4:30","nodeType":"VariableDeclaration","scope":6892,"src":"2695:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6810,"nodeType":"UserDefinedTypeName","pathNode":{"id":6809,"name":"Trace224","nameLocations":["2695:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"2695:8:30"},"referencedDeclaration":6697,"src":"2695:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6813,"mutability":"mutable","name":"key","nameLocation":"2725:3:30","nodeType":"VariableDeclaration","scope":6892,"src":"2718:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6812,"name":"uint32","nodeType":"ElementaryTypeName","src":"2718:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2694:35:30"},"returnParameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6892,"src":"2753:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6815,"name":"uint224","nodeType":"ElementaryTypeName","src":"2753:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2752:9:30"},"scope":8256,"src":"2668:606:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"3465:135:30","statements":[{"assignments":[6902],"declarations":[{"constant":false,"id":6902,"mutability":"mutable","name":"pos","nameLocation":"3483:3:30","nodeType":"VariableDeclaration","scope":6921,"src":"3475:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6906,"initialValue":{"expression":{"expression":{"id":6903,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"3489:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3489:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3507:6:30","memberName":"length","nodeType":"MemberAccess","src":"3489:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3475:38:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"3530:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3530:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6912,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"3559:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3559:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6914,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"3578:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3578:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6911,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"3545:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"3545:48:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3530:63:30","trueExpression":{"hexValue":"30","id":6910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3541:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6900,"id":6920,"nodeType":"Return","src":"3523:70:30"}]},"documentation":{"id":6893,"nodeType":"StructuredDocumentation","src":"3280:109:30","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3403:6:30","nodeType":"FunctionDefinition","parameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"self","nameLocation":"3427:4:30","nodeType":"VariableDeclaration","scope":6922,"src":"3410:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6895,"nodeType":"UserDefinedTypeName","pathNode":{"id":6894,"name":"Trace224","nameLocations":["3410:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"3410:8:30"},"referencedDeclaration":6697,"src":"3410:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3409:23:30"},"returnParameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6922,"src":"3456:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6898,"name":"uint224","nodeType":"ElementaryTypeName","src":"3456:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3455:9:30"},"scope":8256,"src":"3394:206:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6970,"nodeType":"Block","src":"3893:274:30","statements":[{"assignments":[6936],"declarations":[{"constant":false,"id":6936,"mutability":"mutable","name":"pos","nameLocation":"3911:3:30","nodeType":"VariableDeclaration","scope":6970,"src":"3903:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3903:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"expression":{"expression":{"id":6937,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"3917:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3922:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3917:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:30","memberName":"length","nodeType":"MemberAccess","src":"3917:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3903:38:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6941,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"3955:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6968,"nodeType":"Block","src":"4016:145:30","statements":[{"assignments":[6952],"declarations":[{"constant":false,"id":6952,"mutability":"mutable","name":"ckpt","nameLocation":"4051:4:30","nodeType":"VariableDeclaration","scope":6968,"src":"4030:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6951,"nodeType":"UserDefinedTypeName","pathNode":{"id":6950,"name":"Checkpoint224","nameLocations":["4030:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"4030:13:30"},"referencedDeclaration":6702,"src":"4030:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":6960,"initialValue":{"arguments":[{"expression":{"id":6954,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"4072:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"4072:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"4091:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4091:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6953,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"4058:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4030:69:30"},{"expression":{"components":[{"hexValue":"74727565","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6962,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"4127:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4132:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"4127:9:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6964,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"4138:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"4138:11:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4120:30:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":6934,"id":6967,"nodeType":"Return","src":"4113:37:30"}]},"id":6969,"nodeType":"IfStatement","src":"3951:210:30","trueBody":{"id":6949,"nodeType":"Block","src":"3965:45:30","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":6934,"id":6948,"nodeType":"Return","src":"3979:20:30"}]}}]},"documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"3606:168:30","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":6971,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3788:16:30","nodeType":"FunctionDefinition","parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"self","nameLocation":"3822:4:30","nodeType":"VariableDeclaration","scope":6971,"src":"3805:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6925,"nodeType":"UserDefinedTypeName","pathNode":{"id":6924,"name":"Trace224","nameLocations":["3805:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"3805:8:30"},"referencedDeclaration":6697,"src":"3805:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3804:23:30"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"exists","nameLocation":"3856:6:30","nodeType":"VariableDeclaration","scope":6971,"src":"3851:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6928,"name":"bool","nodeType":"ElementaryTypeName","src":"3851:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6931,"mutability":"mutable","name":"_key","nameLocation":"3871:4:30","nodeType":"VariableDeclaration","scope":6971,"src":"3864:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6930,"name":"uint32","nodeType":"ElementaryTypeName","src":"3864:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6933,"mutability":"mutable","name":"_value","nameLocation":"3885:6:30","nodeType":"VariableDeclaration","scope":6971,"src":"3877:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6932,"name":"uint224","nodeType":"ElementaryTypeName","src":"3877:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3850:42:30"},"scope":8256,"src":"3779:388:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"4306:48:30","statements":[{"expression":{"expression":{"expression":{"id":6980,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"4323:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"4323:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:30","memberName":"length","nodeType":"MemberAccess","src":"4323:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6979,"id":6983,"nodeType":"Return","src":"4316:31:30"}]},"documentation":{"id":6972,"nodeType":"StructuredDocumentation","src":"4173:57:30","text":" @dev Returns the number of checkpoint."},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4244:6:30","nodeType":"FunctionDefinition","parameters":{"id":6976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"self","nameLocation":"4268:4:30","nodeType":"VariableDeclaration","scope":6985,"src":"4251:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6974,"nodeType":"UserDefinedTypeName","pathNode":{"id":6973,"name":"Trace224","nameLocations":["4251:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"4251:8:30"},"referencedDeclaration":6697,"src":"4251:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4250:23:30"},"returnParameters":{"id":6979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6985,"src":"4297:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6977,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4296:9:30"},"scope":8256,"src":"4235:119:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7002,"nodeType":"Block","src":"4518:46:30","statements":[{"expression":{"baseExpression":{"expression":{"id":6997,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4535:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4540:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"4535:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7000,"indexExpression":{"id":6999,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"4553:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4535:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":6996,"id":7001,"nodeType":"Return","src":"4528:29:30"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"4360:61:30","text":" @dev Returns checkpoint at given position."},"id":7003,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4435:2:30","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"self","nameLocation":"4455:4:30","nodeType":"VariableDeclaration","scope":7003,"src":"4438:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6988,"nodeType":"UserDefinedTypeName","pathNode":{"id":6987,"name":"Trace224","nameLocations":["4438:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":6697,"src":"4438:8:30"},"referencedDeclaration":6697,"src":"4438:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6697_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"pos","nameLocation":"4468:3:30","nodeType":"VariableDeclaration","scope":7003,"src":"4461:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6990,"name":"uint32","nodeType":"ElementaryTypeName","src":"4461:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4437:35:30"},"returnParameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7003,"src":"4496:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6994,"nodeType":"UserDefinedTypeName","pathNode":{"id":6993,"name":"Checkpoint224","nameLocations":["4496:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"4496:13:30"},"referencedDeclaration":6702,"src":"4496:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4495:22:30"},"scope":8256,"src":"4426:138:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7093,"nodeType":"Block","src":"4849:761:30","statements":[{"assignments":[7020],"declarations":[{"constant":false,"id":7020,"mutability":"mutable","name":"pos","nameLocation":"4867:3:30","nodeType":"VariableDeclaration","scope":7093,"src":"4859:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7023,"initialValue":{"expression":{"id":7021,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"4873:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:30","memberName":"length","nodeType":"MemberAccess","src":"4873:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4859:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7024,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"4899:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4899:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7091,"nodeType":"Block","src":"5496:108:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":7082,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5541:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5554:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7081,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"5520:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5535:4:30","5546:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5520:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7078,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"5510:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:4:30","memberName":"push","nodeType":"MemberAccess","src":"5510:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6702_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7086,"nodeType":"ExpressionStatement","src":"5510:52:30"},{"expression":{"components":[{"hexValue":"30","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5584:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5587:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":7018,"id":7090,"nodeType":"Return","src":"5576:17:30"}]},"id":7092,"nodeType":"IfStatement","src":"4895:709:30","trueBody":{"id":7077,"nodeType":"Block","src":"4908:582:30","statements":[{"assignments":[7029],"declarations":[{"constant":false,"id":7029,"mutability":"mutable","name":"last","nameLocation":"4995:4:30","nodeType":"VariableDeclaration","scope":7077,"src":"4974:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7028,"nodeType":"UserDefinedTypeName","pathNode":{"id":7027,"name":"Checkpoint224","nameLocations":["4974:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"4974:13:30"},"referencedDeclaration":6702,"src":"4974:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7036,"initialValue":{"arguments":[{"id":7031,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"5016:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"5022:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5022:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7030,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"5002:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4974:56:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7037,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"5104:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"5104:9:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7039,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5116:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5104:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7045,"nodeType":"IfStatement","src":"5100:91:30","trueBody":{"id":7044,"nodeType":"Block","src":"5121:70:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7041,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"5146:28:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7043,"nodeType":"RevertStatement","src":"5139:37:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7046,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"5254:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5259:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"5254:9:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7048,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5267:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5254:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7070,"nodeType":"Block","src":"5354:85:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":7065,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5403:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5416:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7064,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"5382:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5397:4:30","5408:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5382:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7061,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"5372:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:4:30","memberName":"push","nodeType":"MemberAccess","src":"5372:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6702_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7069,"nodeType":"ExpressionStatement","src":"5372:52:30"}]},"id":7071,"nodeType":"IfStatement","src":"5250:189:30","trueBody":{"id":7060,"nodeType":"Block","src":"5272:76:30","statements":[{"expression":{"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7051,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"5304:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"5310:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5316:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5310:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7050,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"5290:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"5290:35:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5328:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5290:43:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7059,"nodeType":"ExpressionStatement","src":"5290:43:30"}]}},{"expression":{"components":[{"expression":{"id":7072,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"5460:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"5460:11:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5473:5:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:20:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7018,"id":7076,"nodeType":"Return","src":"5452:27:30"}]}}]},"documentation":{"id":7004,"nodeType":"StructuredDocumentation","src":"4570:165:30","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7094,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4749:7:30","nodeType":"FunctionDefinition","parameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"self","nameLocation":"4781:4:30","nodeType":"VariableDeclaration","scope":7094,"src":"4757:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7006,"nodeType":"UserDefinedTypeName","pathNode":{"id":7005,"name":"Checkpoint224","nameLocations":["4757:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"4757:13:30"},"referencedDeclaration":6702,"src":"4757:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7007,"nodeType":"ArrayTypeName","src":"4757:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"key","nameLocation":"4794:3:30","nodeType":"VariableDeclaration","scope":7094,"src":"4787:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7009,"name":"uint32","nodeType":"ElementaryTypeName","src":"4787:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7012,"mutability":"mutable","name":"value","nameLocation":"4807:5:30","nodeType":"VariableDeclaration","scope":7094,"src":"4799:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7011,"name":"uint224","nodeType":"ElementaryTypeName","src":"4799:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4756:57:30"},"returnParameters":{"id":7018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7094,"src":"4831:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7014,"name":"uint224","nodeType":"ElementaryTypeName","src":"4831:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7094,"src":"4840:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7016,"name":"uint224","nodeType":"ElementaryTypeName","src":"4840:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4830:18:30"},"scope":8256,"src":"4740:870:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7145,"nodeType":"Block","src":"6129:267:30","statements":[{"body":{"id":7141,"nodeType":"Block","src":"6158:211:30","statements":[{"assignments":[7114],"declarations":[{"constant":false,"id":7114,"mutability":"mutable","name":"mid","nameLocation":"6180:3:30","nodeType":"VariableDeclaration","scope":7141,"src":"6172:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7120,"initialValue":{"arguments":[{"id":7117,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"6199:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7118,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"6204:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7115,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"6186:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"6186:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7122,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"6241:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7123,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"6247:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7121,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"6227:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"6227:29:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7126,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"6259:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6227:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7139,"nodeType":"Block","src":"6313:46:30","statements":[{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7133,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"6331:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"6337:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6343:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6331:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7138,"nodeType":"ExpressionStatement","src":"6331:13:30"}]},"id":7140,"nodeType":"IfStatement","src":"6223:136:30","trueBody":{"id":7132,"nodeType":"Block","src":"6264:43:30","statements":[{"expression":{"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7128,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"6282:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7129,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"6289:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7131,"nodeType":"ExpressionStatement","src":"6282:10:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7110,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"6146:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7111,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"6152:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6146:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7142,"nodeType":"WhileStatement","src":"6139:230:30"},{"expression":{"id":7143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"6385:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7109,"id":7144,"nodeType":"Return","src":"6378:11:30"}]},"documentation":{"id":7095,"nodeType":"StructuredDocumentation","src":"5616:342:30","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"5972:18:30","nodeType":"FunctionDefinition","parameters":{"id":7106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"self","nameLocation":"6024:4:30","nodeType":"VariableDeclaration","scope":7146,"src":"6000:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7097,"nodeType":"UserDefinedTypeName","pathNode":{"id":7096,"name":"Checkpoint224","nameLocations":["6000:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"6000:13:30"},"referencedDeclaration":6702,"src":"6000:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7098,"nodeType":"ArrayTypeName","src":"6000:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7101,"mutability":"mutable","name":"key","nameLocation":"6045:3:30","nodeType":"VariableDeclaration","scope":7146,"src":"6038:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7100,"name":"uint32","nodeType":"ElementaryTypeName","src":"6038:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7103,"mutability":"mutable","name":"low","nameLocation":"6066:3:30","nodeType":"VariableDeclaration","scope":7146,"src":"6058:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7105,"mutability":"mutable","name":"high","nameLocation":"6087:4:30","nodeType":"VariableDeclaration","scope":7146,"src":"6079:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7104,"name":"uint256","nodeType":"ElementaryTypeName","src":"6079:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:107:30"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7146,"src":"6120:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:9:30"},"scope":8256,"src":"5963:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7197,"nodeType":"Block","src":"6916:267:30","statements":[{"body":{"id":7193,"nodeType":"Block","src":"6945:211:30","statements":[{"assignments":[7166],"declarations":[{"constant":false,"id":7166,"mutability":"mutable","name":"mid","nameLocation":"6967:3:30","nodeType":"VariableDeclaration","scope":7193,"src":"6959:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7172,"initialValue":{"arguments":[{"id":7169,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"6986:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7170,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"6991:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7167,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"6973:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6978:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"6973:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6973:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7174,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"7028:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7175,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"7034:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7173,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7213,"src":"7014:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6702_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"7014:29:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7178,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"7046:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7014:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7191,"nodeType":"Block","src":"7103:43:30","statements":[{"expression":{"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7187,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"7121:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7188,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"7128:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7121:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7190,"nodeType":"ExpressionStatement","src":"7121:10:30"}]},"id":7192,"nodeType":"IfStatement","src":"7010:136:30","trueBody":{"id":7186,"nodeType":"Block","src":"7051:46:30","statements":[{"expression":{"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7180,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"7069:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7181,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"7075:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7075:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7185,"nodeType":"ExpressionStatement","src":"7069:13:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7162,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"6933:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7163,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"6939:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7194,"nodeType":"WhileStatement","src":"6926:230:30"},{"expression":{"id":7195,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"7172:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7161,"id":7196,"nodeType":"Return","src":"7165:11:30"}]},"documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"6402:343:30","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7198,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6759:18:30","nodeType":"FunctionDefinition","parameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"self","nameLocation":"6811:4:30","nodeType":"VariableDeclaration","scope":7198,"src":"6787:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7149,"nodeType":"UserDefinedTypeName","pathNode":{"id":7148,"name":"Checkpoint224","nameLocations":["6787:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"6787:13:30"},"referencedDeclaration":6702,"src":"6787:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7150,"nodeType":"ArrayTypeName","src":"6787:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7153,"mutability":"mutable","name":"key","nameLocation":"6832:3:30","nodeType":"VariableDeclaration","scope":7198,"src":"6825:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7152,"name":"uint32","nodeType":"ElementaryTypeName","src":"6825:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7155,"mutability":"mutable","name":"low","nameLocation":"6853:3:30","nodeType":"VariableDeclaration","scope":7198,"src":"6845:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7154,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7157,"mutability":"mutable","name":"high","nameLocation":"6874:4:30","nodeType":"VariableDeclaration","scope":7198,"src":"6866:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6777:107:30"},"returnParameters":{"id":7161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7198,"src":"6907:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7159,"name":"uint256","nodeType":"ElementaryTypeName","src":"6907:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6906:9:30"},"scope":8256,"src":"6750:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7212,"nodeType":"Block","src":"7466:125:30","statements":[{"AST":{"nativeSrc":"7485:100:30","nodeType":"YulBlock","src":"7485:100:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7506:1:30","nodeType":"YulLiteral","src":"7506:1:30","type":"","value":"0"},{"name":"self.slot","nativeSrc":"7509:9:30","nodeType":"YulIdentifier","src":"7509:9:30"}],"functionName":{"name":"mstore","nativeSrc":"7499:6:30","nodeType":"YulIdentifier","src":"7499:6:30"},"nativeSrc":"7499:20:30","nodeType":"YulFunctionCall","src":"7499:20:30"},"nativeSrc":"7499:20:30","nodeType":"YulExpressionStatement","src":"7499:20:30"},{"nativeSrc":"7532:43:30","nodeType":"YulAssignment","src":"7532:43:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7561:1:30","nodeType":"YulLiteral","src":"7561:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7564:4:30","nodeType":"YulLiteral","src":"7564:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7551:9:30","nodeType":"YulIdentifier","src":"7551:9:30"},"nativeSrc":"7551:18:30","nodeType":"YulFunctionCall","src":"7551:18:30"},{"name":"pos","nativeSrc":"7571:3:30","nodeType":"YulIdentifier","src":"7571:3:30"}],"functionName":{"name":"add","nativeSrc":"7547:3:30","nodeType":"YulIdentifier","src":"7547:3:30"},"nativeSrc":"7547:28:30","nodeType":"YulFunctionCall","src":"7547:28:30"},"variableNames":[{"name":"result.slot","nativeSrc":"7532:11:30","nodeType":"YulIdentifier","src":"7532:11:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7205,"isOffset":false,"isSlot":false,"src":"7571:3:30","valueSize":1},{"declaration":7209,"isOffset":false,"isSlot":true,"src":"7532:11:30","suffix":"slot","valueSize":1},{"declaration":7203,"isOffset":false,"isSlot":true,"src":"7509:9:30","suffix":"slot","valueSize":1}],"id":7211,"nodeType":"InlineAssembly","src":"7476:109:30"}]},"documentation":{"id":7199,"nodeType":"StructuredDocumentation","src":"7189:132:30","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7335:13:30","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"self","nameLocation":"7382:4:30","nodeType":"VariableDeclaration","scope":7213,"src":"7358:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7201,"nodeType":"UserDefinedTypeName","pathNode":{"id":7200,"name":"Checkpoint224","nameLocations":["7358:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"7358:13:30"},"referencedDeclaration":6702,"src":"7358:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7202,"nodeType":"ArrayTypeName","src":"7358:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6702_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7205,"mutability":"mutable","name":"pos","nameLocation":"7404:3:30","nodeType":"VariableDeclaration","scope":7213,"src":"7396:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:65:30"},"returnParameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"result","nameLocation":"7458:6:30","nodeType":"VariableDeclaration","scope":7213,"src":"7436:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7208,"nodeType":"UserDefinedTypeName","pathNode":{"id":7207,"name":"Checkpoint224","nameLocations":["7436:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6702,"src":"7436:13:30"},"referencedDeclaration":6702,"src":"7436:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6702_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7435:30:30"},"scope":8256,"src":"7326:265:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":7218,"members":[{"constant":false,"id":7217,"mutability":"mutable","name":"_checkpoints","nameLocation":"7639:12:30","nodeType":"VariableDeclaration","scope":7218,"src":"7623:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7215,"nodeType":"UserDefinedTypeName","pathNode":{"id":7214,"name":"Checkpoint208","nameLocations":["7623:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"7623:13:30"},"referencedDeclaration":7223,"src":"7623:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7216,"nodeType":"ArrayTypeName","src":"7623:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7604:8:30","nodeType":"StructDefinition","scope":8256,"src":"7597:61:30","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":7223,"members":[{"constant":false,"id":7220,"mutability":"mutable","name":"_key","nameLocation":"7702:4:30","nodeType":"VariableDeclaration","scope":7223,"src":"7695:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7219,"name":"uint48","nodeType":"ElementaryTypeName","src":"7695:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"_value","nameLocation":"7724:6:30","nodeType":"VariableDeclaration","scope":7223,"src":"7716:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7221,"name":"uint208","nodeType":"ElementaryTypeName","src":"7716:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7671:13:30","nodeType":"StructDefinition","scope":8256,"src":"7664:73:30","visibility":"public"},{"body":{"id":7245,"nodeType":"Block","src":"8150:62:30","statements":[{"expression":{"arguments":[{"expression":{"id":7239,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"8175:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8180:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"8175:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7241,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"8194:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"8199:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7238,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7094,7615,8136],"referencedDeclaration":7615,"src":"8167:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7237,"id":7244,"nodeType":"Return","src":"8160:45:30"}]},"documentation":{"id":7224,"nodeType":"StructuredDocumentation","src":"7743:302:30","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":7246,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8059:4:30","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7227,"mutability":"mutable","name":"self","nameLocation":"8081:4:30","nodeType":"VariableDeclaration","scope":7246,"src":"8064:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7226,"nodeType":"UserDefinedTypeName","pathNode":{"id":7225,"name":"Trace208","nameLocations":["8064:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"8064:8:30"},"referencedDeclaration":7218,"src":"8064:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7229,"mutability":"mutable","name":"key","nameLocation":"8094:3:30","nodeType":"VariableDeclaration","scope":7246,"src":"8087:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7228,"name":"uint48","nodeType":"ElementaryTypeName","src":"8087:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7231,"mutability":"mutable","name":"value","nameLocation":"8107:5:30","nodeType":"VariableDeclaration","scope":7246,"src":"8099:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7230,"name":"uint208","nodeType":"ElementaryTypeName","src":"8099:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8063:50:30"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7246,"src":"8132:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7233,"name":"uint208","nodeType":"ElementaryTypeName","src":"8132:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7246,"src":"8141:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7235,"name":"uint208","nodeType":"ElementaryTypeName","src":"8141:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8131:18:30"},"scope":8256,"src":"8050:162:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7285,"nodeType":"Block","src":"8465:207:30","statements":[{"assignments":[7258],"declarations":[{"constant":false,"id":7258,"mutability":"mutable","name":"len","nameLocation":"8483:3:30","nodeType":"VariableDeclaration","scope":7285,"src":"8475:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8475:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7262,"initialValue":{"expression":{"expression":{"id":7259,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"8489:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8494:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"8489:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:30","memberName":"length","nodeType":"MemberAccess","src":"8489:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8475:38:30"},{"assignments":[7264],"declarations":[{"constant":false,"id":7264,"mutability":"mutable","name":"pos","nameLocation":"8531:3:30","nodeType":"VariableDeclaration","scope":7285,"src":"8523:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7263,"name":"uint256","nodeType":"ElementaryTypeName","src":"8523:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7272,"initialValue":{"arguments":[{"expression":{"id":7266,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"8556:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"8556:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7268,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"8575:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7270,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"8583:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7198,7719,8240],"referencedDeclaration":7719,"src":"8537:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8523:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"8604:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7274,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"8611:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8604:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7278,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"8635:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"8635:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7280,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"8654:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7277,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"8621:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"8621:44:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8604:61:30","trueExpression":{"hexValue":"30","id":7276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7256,"id":7284,"nodeType":"Return","src":"8597:68:30"}]},"documentation":{"id":7247,"nodeType":"StructuredDocumentation","src":"8218:154:30","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7286,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8386:11:30","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"self","nameLocation":"8415:4:30","nodeType":"VariableDeclaration","scope":7286,"src":"8398:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7249,"nodeType":"UserDefinedTypeName","pathNode":{"id":7248,"name":"Trace208","nameLocations":["8398:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"8398:8:30"},"referencedDeclaration":7218,"src":"8398:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7252,"mutability":"mutable","name":"key","nameLocation":"8428:3:30","nodeType":"VariableDeclaration","scope":7286,"src":"8421:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7251,"name":"uint48","nodeType":"ElementaryTypeName","src":"8421:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8397:35:30"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7286,"src":"8456:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7254,"name":"uint208","nodeType":"ElementaryTypeName","src":"8456:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8455:9:30"},"scope":8256,"src":"8377:295:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7327,"nodeType":"Block","src":"8927:209:30","statements":[{"assignments":[7298],"declarations":[{"constant":false,"id":7298,"mutability":"mutable","name":"len","nameLocation":"8945:3:30","nodeType":"VariableDeclaration","scope":7327,"src":"8937:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8937:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7302,"initialValue":{"expression":{"expression":{"id":7299,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"8951:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8956:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"8951:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:30","memberName":"length","nodeType":"MemberAccess","src":"8951:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8937:38:30"},{"assignments":[7304],"declarations":[{"constant":false,"id":7304,"mutability":"mutable","name":"pos","nameLocation":"8993:3:30","nodeType":"VariableDeclaration","scope":7327,"src":"8985:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7303,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7312,"initialValue":{"arguments":[{"expression":{"id":7306,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"9018:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"9018:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7308,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"9037:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7310,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"9045:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7305,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":7667,"src":"8999:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8985:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7313,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"9066:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9073:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7318,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"9095:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"9095:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7320,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"9114:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9114:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7317,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"9081:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"9081:48:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9066:63:30","trueExpression":{"hexValue":"30","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7296,"id":7326,"nodeType":"Return","src":"9059:70:30"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"8678:156:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7328,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8848:11:30","nodeType":"FunctionDefinition","parameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"mutability":"mutable","name":"self","nameLocation":"8877:4:30","nodeType":"VariableDeclaration","scope":7328,"src":"8860:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7289,"nodeType":"UserDefinedTypeName","pathNode":{"id":7288,"name":"Trace208","nameLocations":["8860:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"8860:8:30"},"referencedDeclaration":7218,"src":"8860:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7292,"mutability":"mutable","name":"key","nameLocation":"8890:3:30","nodeType":"VariableDeclaration","scope":7328,"src":"8883:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7291,"name":"uint48","nodeType":"ElementaryTypeName","src":"8883:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8859:35:30"},"returnParameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7328,"src":"8918:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7294,"name":"uint208","nodeType":"ElementaryTypeName","src":"8918:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8917:9:30"},"scope":8256,"src":"8839:297:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7412,"nodeType":"Block","src":"9535:512:30","statements":[{"assignments":[7340],"declarations":[{"constant":false,"id":7340,"mutability":"mutable","name":"len","nameLocation":"9553:3:30","nodeType":"VariableDeclaration","scope":7412,"src":"9545:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7344,"initialValue":{"expression":{"expression":{"id":7341,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"9559:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9564:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"9559:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:6:30","memberName":"length","nodeType":"MemberAccess","src":"9559:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9545:38:30"},{"assignments":[7346],"declarations":[{"constant":false,"id":7346,"mutability":"mutable","name":"low","nameLocation":"9602:3:30","nodeType":"VariableDeclaration","scope":7412,"src":"9594:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7345,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7348,"initialValue":{"hexValue":"30","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9594:15:30"},{"assignments":[7350],"declarations":[{"constant":false,"id":7350,"mutability":"mutable","name":"high","nameLocation":"9627:4:30","nodeType":"VariableDeclaration","scope":7412,"src":"9619:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7352,"initialValue":{"id":7351,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"9634:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9619:18:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7353,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"9652:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9658:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9652:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7387,"nodeType":"IfStatement","src":"9648:234:30","trueBody":{"id":7386,"nodeType":"Block","src":"9661:221:30","statements":[{"assignments":[7357],"declarations":[{"constant":false,"id":7357,"mutability":"mutable","name":"mid","nameLocation":"9683:3:30","nodeType":"VariableDeclaration","scope":7386,"src":"9675:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"9675:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"9689:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7361,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"9705:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7359,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"9695:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:30","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4313,"src":"9695:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9675:34:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7365,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"9727:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7367,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"9747:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9752:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"9747:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7369,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"9766:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7366,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"9733:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9771:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"9733:42:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9727:48:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7384,"nodeType":"Block","src":"9826:46:30","statements":[{"expression":{"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7378,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"9844:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7379,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"9850:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9850:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9844:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7383,"nodeType":"ExpressionStatement","src":"9844:13:30"}]},"id":7385,"nodeType":"IfStatement","src":"9723:149:30","trueBody":{"id":7377,"nodeType":"Block","src":"9777:43:30","statements":[{"expression":{"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7373,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"9795:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7374,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"9802:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9795:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7376,"nodeType":"ExpressionStatement","src":"9795:10:30"}]}}]}},{"assignments":[7389],"declarations":[{"constant":false,"id":7389,"mutability":"mutable","name":"pos","nameLocation":"9900:3:30","nodeType":"VariableDeclaration","scope":7412,"src":"9892:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7397,"initialValue":{"arguments":[{"expression":{"id":7391,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"9925:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"9925:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7393,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"9944:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7394,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"9949:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7395,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"9954:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7390,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":7667,"src":"9906:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9892:67:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"9977:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9984:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7403,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"10006:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10011:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"10006:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"10025:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10031:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10025:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7402,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"9992:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10034:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"9992:48:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9977:63:30","trueExpression":{"hexValue":"30","id":7401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9988:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7338,"id":7411,"nodeType":"Return","src":"9970:70:30"}]},"documentation":{"id":7329,"nodeType":"StructuredDocumentation","src":"9142:294:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9450:17:30","nodeType":"FunctionDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"self","nameLocation":"9485:4:30","nodeType":"VariableDeclaration","scope":7413,"src":"9468:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7331,"nodeType":"UserDefinedTypeName","pathNode":{"id":7330,"name":"Trace208","nameLocations":["9468:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"9468:8:30"},"referencedDeclaration":7218,"src":"9468:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7334,"mutability":"mutable","name":"key","nameLocation":"9498:3:30","nodeType":"VariableDeclaration","scope":7413,"src":"9491:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7333,"name":"uint48","nodeType":"ElementaryTypeName","src":"9491:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9467:35:30"},"returnParameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7413,"src":"9526:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7336,"name":"uint208","nodeType":"ElementaryTypeName","src":"9526:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9525:9:30"},"scope":8256,"src":"9441:606:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7442,"nodeType":"Block","src":"10238:135:30","statements":[{"assignments":[7423],"declarations":[{"constant":false,"id":7423,"mutability":"mutable","name":"pos","nameLocation":"10256:3:30","nodeType":"VariableDeclaration","scope":7442,"src":"10248:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10248:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7427,"initialValue":{"expression":{"expression":{"id":7424,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"10262:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10267:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"10262:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:30","memberName":"length","nodeType":"MemberAccess","src":"10262:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10248:38:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7428,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"10303:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10303:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7433,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"10332:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"10332:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"10351:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10351:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7432,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"10318:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10360:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"10318:48:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10303:63:30","trueExpression":{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7421,"id":7441,"nodeType":"Return","src":"10296:70:30"}]},"documentation":{"id":7414,"nodeType":"StructuredDocumentation","src":"10053:109:30","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7443,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10176:6:30","nodeType":"FunctionDefinition","parameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"self","nameLocation":"10200:4:30","nodeType":"VariableDeclaration","scope":7443,"src":"10183:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7416,"nodeType":"UserDefinedTypeName","pathNode":{"id":7415,"name":"Trace208","nameLocations":["10183:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"10183:8:30"},"referencedDeclaration":7218,"src":"10183:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10182:23:30"},"returnParameters":{"id":7421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7443,"src":"10229:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7419,"name":"uint208","nodeType":"ElementaryTypeName","src":"10229:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10228:9:30"},"scope":8256,"src":"10167:206:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7491,"nodeType":"Block","src":"10666:274:30","statements":[{"assignments":[7457],"declarations":[{"constant":false,"id":7457,"mutability":"mutable","name":"pos","nameLocation":"10684:3:30","nodeType":"VariableDeclaration","scope":7491,"src":"10676:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7461,"initialValue":{"expression":{"expression":{"id":7458,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"10690:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"10690:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:30","memberName":"length","nodeType":"MemberAccess","src":"10690:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10676:38:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"10728:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7489,"nodeType":"Block","src":"10789:145:30","statements":[{"assignments":[7473],"declarations":[{"constant":false,"id":7473,"mutability":"mutable","name":"ckpt","nameLocation":"10824:4:30","nodeType":"VariableDeclaration","scope":7489,"src":"10803:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7472,"nodeType":"UserDefinedTypeName","pathNode":{"id":7471,"name":"Checkpoint208","nameLocations":["10803:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"10803:13:30"},"referencedDeclaration":7223,"src":"10803:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7481,"initialValue":{"arguments":[{"expression":{"id":7475,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"10845:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10850:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"10845:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7477,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"10864:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10864:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7474,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"10831:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10803:69:30"},{"expression":{"components":[{"hexValue":"74727565","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10894:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7483,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"10900:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10905:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"10900:9:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":7485,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"10911:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"10911:11:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10893:30:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":7455,"id":7488,"nodeType":"Return","src":"10886:37:30"}]},"id":7490,"nodeType":"IfStatement","src":"10724:210:30","trueBody":{"id":7470,"nodeType":"Block","src":"10738:45:30","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10760:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10767:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10759:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7455,"id":7469,"nodeType":"Return","src":"10752:20:30"}]}}]},"documentation":{"id":7444,"nodeType":"StructuredDocumentation","src":"10379:168:30","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7492,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10561:16:30","nodeType":"FunctionDefinition","parameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"self","nameLocation":"10595:4:30","nodeType":"VariableDeclaration","scope":7492,"src":"10578:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7446,"nodeType":"UserDefinedTypeName","pathNode":{"id":7445,"name":"Trace208","nameLocations":["10578:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"10578:8:30"},"referencedDeclaration":7218,"src":"10578:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10577:23:30"},"returnParameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"exists","nameLocation":"10629:6:30","nodeType":"VariableDeclaration","scope":7492,"src":"10624:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7449,"name":"bool","nodeType":"ElementaryTypeName","src":"10624:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7452,"mutability":"mutable","name":"_key","nameLocation":"10644:4:30","nodeType":"VariableDeclaration","scope":7492,"src":"10637:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7451,"name":"uint48","nodeType":"ElementaryTypeName","src":"10637:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7454,"mutability":"mutable","name":"_value","nameLocation":"10658:6:30","nodeType":"VariableDeclaration","scope":7492,"src":"10650:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7453,"name":"uint208","nodeType":"ElementaryTypeName","src":"10650:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10623:42:30"},"scope":8256,"src":"10552:388:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"11079:48:30","statements":[{"expression":{"expression":{"expression":{"id":7501,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"11096:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11101:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"11096:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11114:6:30","memberName":"length","nodeType":"MemberAccess","src":"11096:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7500,"id":7504,"nodeType":"Return","src":"11089:31:30"}]},"documentation":{"id":7493,"nodeType":"StructuredDocumentation","src":"10946:57:30","text":" @dev Returns the number of checkpoint."},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11017:6:30","nodeType":"FunctionDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7496,"mutability":"mutable","name":"self","nameLocation":"11041:4:30","nodeType":"VariableDeclaration","scope":7506,"src":"11024:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7495,"nodeType":"UserDefinedTypeName","pathNode":{"id":7494,"name":"Trace208","nameLocations":["11024:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"11024:8:30"},"referencedDeclaration":7218,"src":"11024:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11023:23:30"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7506,"src":"11070:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7498,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:30"},"scope":8256,"src":"11008:119:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7523,"nodeType":"Block","src":"11291:46:30","statements":[{"expression":{"baseExpression":{"expression":{"id":7518,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"11308:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11313:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7217,"src":"11308:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7521,"indexExpression":{"id":7520,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"11326:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11308:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":7517,"id":7522,"nodeType":"Return","src":"11301:29:30"}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"11133:61:30","text":" @dev Returns checkpoint at given position."},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11208:2:30","nodeType":"FunctionDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"mutability":"mutable","name":"self","nameLocation":"11228:4:30","nodeType":"VariableDeclaration","scope":7524,"src":"11211:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7509,"nodeType":"UserDefinedTypeName","pathNode":{"id":7508,"name":"Trace208","nameLocations":["11211:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7218,"src":"11211:8:30"},"referencedDeclaration":7218,"src":"11211:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7218_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7512,"mutability":"mutable","name":"pos","nameLocation":"11241:3:30","nodeType":"VariableDeclaration","scope":7524,"src":"11234:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7511,"name":"uint32","nodeType":"ElementaryTypeName","src":"11234:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11210:35:30"},"returnParameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7524,"src":"11269:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7515,"nodeType":"UserDefinedTypeName","pathNode":{"id":7514,"name":"Checkpoint208","nameLocations":["11269:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"11269:13:30"},"referencedDeclaration":7223,"src":"11269:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11268:22:30"},"scope":8256,"src":"11199:138:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7614,"nodeType":"Block","src":"11622:761:30","statements":[{"assignments":[7541],"declarations":[{"constant":false,"id":7541,"mutability":"mutable","name":"pos","nameLocation":"11640:3:30","nodeType":"VariableDeclaration","scope":7614,"src":"11632:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7544,"initialValue":{"expression":{"id":7542,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"11646:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:30","memberName":"length","nodeType":"MemberAccess","src":"11646:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11632:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7545,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"11672:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11672:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7612,"nodeType":"Block","src":"12269:108:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":7603,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"12314:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"12327:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7602,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"12293:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12308:4:30","12319:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12293:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7599,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"12283:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:4:30","memberName":"push","nodeType":"MemberAccess","src":"12283:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7223_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7607,"nodeType":"ExpressionStatement","src":"12283:52:30"},{"expression":{"components":[{"hexValue":"30","id":7608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"12360:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12356:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":7539,"id":7611,"nodeType":"Return","src":"12349:17:30"}]},"id":7613,"nodeType":"IfStatement","src":"11668:709:30","trueBody":{"id":7598,"nodeType":"Block","src":"11681:582:30","statements":[{"assignments":[7550],"declarations":[{"constant":false,"id":7550,"mutability":"mutable","name":"last","nameLocation":"11768:4:30","nodeType":"VariableDeclaration","scope":7598,"src":"11747:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7549,"nodeType":"UserDefinedTypeName","pathNode":{"id":7548,"name":"Checkpoint208","nameLocations":["11747:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"11747:13:30"},"referencedDeclaration":7223,"src":"11747:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7557,"initialValue":{"arguments":[{"id":7552,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"11789:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"11795:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11801:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11795:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7551,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"11775:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11747:56:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7558,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"11877:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11882:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"11877:9:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7560,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"11889:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11877:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7566,"nodeType":"IfStatement","src":"11873:91:30","trueBody":{"id":7565,"nodeType":"Block","src":"11894:70:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7562,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"11919:28:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11919:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7564,"nodeType":"RevertStatement","src":"11912:37:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7567,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"12027:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12032:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"12027:9:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7569,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"12040:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12027:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7591,"nodeType":"Block","src":"12127:85:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":7586,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"12176:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"12189:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7585,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"12155:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12170:4:30","12181:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12155:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7582,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"12145:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12150:4:30","memberName":"push","nodeType":"MemberAccess","src":"12145:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7223_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7590,"nodeType":"ExpressionStatement","src":"12145:52:30"}]},"id":7592,"nodeType":"IfStatement","src":"12023:189:30","trueBody":{"id":7581,"nodeType":"Block","src":"12045:76:30","statements":[{"expression":{"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7572,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"12077:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"12083:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12089:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12083:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7571,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"12063:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12092:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"12063:35:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"12101:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12063:43:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7580,"nodeType":"ExpressionStatement","src":"12063:43:30"}]}},{"expression":{"components":[{"expression":{"id":7593,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"12233:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12238:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"12233:11:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"12246:5:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12232:20:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7539,"id":7597,"nodeType":"Return","src":"12225:27:30"}]}}]},"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"11343:165:30","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7615,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11522:7:30","nodeType":"FunctionDefinition","parameters":{"id":7534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"self","nameLocation":"11554:4:30","nodeType":"VariableDeclaration","scope":7615,"src":"11530:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7527,"nodeType":"UserDefinedTypeName","pathNode":{"id":7526,"name":"Checkpoint208","nameLocations":["11530:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"11530:13:30"},"referencedDeclaration":7223,"src":"11530:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7528,"nodeType":"ArrayTypeName","src":"11530:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7531,"mutability":"mutable","name":"key","nameLocation":"11567:3:30","nodeType":"VariableDeclaration","scope":7615,"src":"11560:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7530,"name":"uint48","nodeType":"ElementaryTypeName","src":"11560:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7533,"mutability":"mutable","name":"value","nameLocation":"11580:5:30","nodeType":"VariableDeclaration","scope":7615,"src":"11572:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7532,"name":"uint208","nodeType":"ElementaryTypeName","src":"11572:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11529:57:30"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7615,"src":"11604:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7535,"name":"uint208","nodeType":"ElementaryTypeName","src":"11604:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7615,"src":"11613:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7537,"name":"uint208","nodeType":"ElementaryTypeName","src":"11613:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11603:18:30"},"scope":8256,"src":"11513:870:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7666,"nodeType":"Block","src":"12902:267:30","statements":[{"body":{"id":7662,"nodeType":"Block","src":"12931:211:30","statements":[{"assignments":[7635],"declarations":[{"constant":false,"id":7635,"mutability":"mutable","name":"mid","nameLocation":"12953:3:30","nodeType":"VariableDeclaration","scope":7662,"src":"12945:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"12945:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7641,"initialValue":{"arguments":[{"id":7638,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"12972:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7639,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"12977:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7636,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"12959:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12964:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"12959:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12959:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12945:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7643,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"13014:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7644,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"13020:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7642,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"13000:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13025:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"13000:29:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7647,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"13032:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13000:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7660,"nodeType":"Block","src":"13086:46:30","statements":[{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7654,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"13104:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"13110:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13110:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7659,"nodeType":"ExpressionStatement","src":"13104:13:30"}]},"id":7661,"nodeType":"IfStatement","src":"12996:136:30","trueBody":{"id":7653,"nodeType":"Block","src":"13037:43:30","statements":[{"expression":{"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7649,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"13055:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7650,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"13062:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13055:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7652,"nodeType":"ExpressionStatement","src":"13055:10:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"12919:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7632,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"12925:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12919:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7663,"nodeType":"WhileStatement","src":"12912:230:30"},{"expression":{"id":7664,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"13158:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7630,"id":7665,"nodeType":"Return","src":"13151:11:30"}]},"documentation":{"id":7616,"nodeType":"StructuredDocumentation","src":"12389:342:30","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7667,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12745:18:30","nodeType":"FunctionDefinition","parameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7620,"mutability":"mutable","name":"self","nameLocation":"12797:4:30","nodeType":"VariableDeclaration","scope":7667,"src":"12773:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7618,"nodeType":"UserDefinedTypeName","pathNode":{"id":7617,"name":"Checkpoint208","nameLocations":["12773:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"12773:13:30"},"referencedDeclaration":7223,"src":"12773:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7619,"nodeType":"ArrayTypeName","src":"12773:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7622,"mutability":"mutable","name":"key","nameLocation":"12818:3:30","nodeType":"VariableDeclaration","scope":7667,"src":"12811:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7621,"name":"uint48","nodeType":"ElementaryTypeName","src":"12811:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7624,"mutability":"mutable","name":"low","nameLocation":"12839:3:30","nodeType":"VariableDeclaration","scope":7667,"src":"12831:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12831:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7626,"mutability":"mutable","name":"high","nameLocation":"12860:4:30","nodeType":"VariableDeclaration","scope":7667,"src":"12852:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12763:107:30"},"returnParameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7667,"src":"12893:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12892:9:30"},"scope":8256,"src":"12736:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7718,"nodeType":"Block","src":"13689:267:30","statements":[{"body":{"id":7714,"nodeType":"Block","src":"13718:211:30","statements":[{"assignments":[7687],"declarations":[{"constant":false,"id":7687,"mutability":"mutable","name":"mid","nameLocation":"13740:3:30","nodeType":"VariableDeclaration","scope":7714,"src":"13732:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7686,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7693,"initialValue":{"arguments":[{"id":7690,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"13759:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7691,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"13764:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7688,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"13746:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13751:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"13746:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13732:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7695,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"13801:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7696,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"13807:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7694,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":7734,"src":"13787:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7223_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13812:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"13787:29:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7699,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"13819:3:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13787:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7712,"nodeType":"Block","src":"13876:43:30","statements":[{"expression":{"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7708,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"13894:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7709,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"13901:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7711,"nodeType":"ExpressionStatement","src":"13894:10:30"}]},"id":7713,"nodeType":"IfStatement","src":"13783:136:30","trueBody":{"id":7707,"nodeType":"Block","src":"13824:46:30","statements":[{"expression":{"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7701,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"13842:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7702,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"13848:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13854:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13848:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13842:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7706,"nodeType":"ExpressionStatement","src":"13842:13:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"13706:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7684,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"13712:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13706:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7715,"nodeType":"WhileStatement","src":"13699:230:30"},{"expression":{"id":7716,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"13945:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7682,"id":7717,"nodeType":"Return","src":"13938:11:30"}]},"documentation":{"id":7668,"nodeType":"StructuredDocumentation","src":"13175:343:30","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7719,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13532:18:30","nodeType":"FunctionDefinition","parameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"self","nameLocation":"13584:4:30","nodeType":"VariableDeclaration","scope":7719,"src":"13560:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7670,"nodeType":"UserDefinedTypeName","pathNode":{"id":7669,"name":"Checkpoint208","nameLocations":["13560:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"13560:13:30"},"referencedDeclaration":7223,"src":"13560:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7671,"nodeType":"ArrayTypeName","src":"13560:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7674,"mutability":"mutable","name":"key","nameLocation":"13605:3:30","nodeType":"VariableDeclaration","scope":7719,"src":"13598:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7673,"name":"uint48","nodeType":"ElementaryTypeName","src":"13598:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7676,"mutability":"mutable","name":"low","nameLocation":"13626:3:30","nodeType":"VariableDeclaration","scope":7719,"src":"13618:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7675,"name":"uint256","nodeType":"ElementaryTypeName","src":"13618:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7678,"mutability":"mutable","name":"high","nameLocation":"13647:4:30","nodeType":"VariableDeclaration","scope":7719,"src":"13639:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"13639:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13550:107:30"},"returnParameters":{"id":7682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7719,"src":"13680:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7680,"name":"uint256","nodeType":"ElementaryTypeName","src":"13680:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13679:9:30"},"scope":8256,"src":"13523:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7733,"nodeType":"Block","src":"14239:125:30","statements":[{"AST":{"nativeSrc":"14258:100:30","nodeType":"YulBlock","src":"14258:100:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14279:1:30","nodeType":"YulLiteral","src":"14279:1:30","type":"","value":"0"},{"name":"self.slot","nativeSrc":"14282:9:30","nodeType":"YulIdentifier","src":"14282:9:30"}],"functionName":{"name":"mstore","nativeSrc":"14272:6:30","nodeType":"YulIdentifier","src":"14272:6:30"},"nativeSrc":"14272:20:30","nodeType":"YulFunctionCall","src":"14272:20:30"},"nativeSrc":"14272:20:30","nodeType":"YulExpressionStatement","src":"14272:20:30"},{"nativeSrc":"14305:43:30","nodeType":"YulAssignment","src":"14305:43:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14334:1:30","nodeType":"YulLiteral","src":"14334:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"14337:4:30","nodeType":"YulLiteral","src":"14337:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14324:9:30","nodeType":"YulIdentifier","src":"14324:9:30"},"nativeSrc":"14324:18:30","nodeType":"YulFunctionCall","src":"14324:18:30"},{"name":"pos","nativeSrc":"14344:3:30","nodeType":"YulIdentifier","src":"14344:3:30"}],"functionName":{"name":"add","nativeSrc":"14320:3:30","nodeType":"YulIdentifier","src":"14320:3:30"},"nativeSrc":"14320:28:30","nodeType":"YulFunctionCall","src":"14320:28:30"},"variableNames":[{"name":"result.slot","nativeSrc":"14305:11:30","nodeType":"YulIdentifier","src":"14305:11:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7726,"isOffset":false,"isSlot":false,"src":"14344:3:30","valueSize":1},{"declaration":7730,"isOffset":false,"isSlot":true,"src":"14305:11:30","suffix":"slot","valueSize":1},{"declaration":7724,"isOffset":false,"isSlot":true,"src":"14282:9:30","suffix":"slot","valueSize":1}],"id":7732,"nodeType":"InlineAssembly","src":"14249:109:30"}]},"documentation":{"id":7720,"nodeType":"StructuredDocumentation","src":"13962:132:30","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7734,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14108:13:30","nodeType":"FunctionDefinition","parameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7724,"mutability":"mutable","name":"self","nameLocation":"14155:4:30","nodeType":"VariableDeclaration","scope":7734,"src":"14131:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7722,"nodeType":"UserDefinedTypeName","pathNode":{"id":7721,"name":"Checkpoint208","nameLocations":["14131:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"14131:13:30"},"referencedDeclaration":7223,"src":"14131:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7723,"nodeType":"ArrayTypeName","src":"14131:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7223_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7726,"mutability":"mutable","name":"pos","nameLocation":"14177:3:30","nodeType":"VariableDeclaration","scope":7734,"src":"14169:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"14169:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14121:65:30"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"result","nameLocation":"14231:6:30","nodeType":"VariableDeclaration","scope":7734,"src":"14209:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7729,"nodeType":"UserDefinedTypeName","pathNode":{"id":7728,"name":"Checkpoint208","nameLocations":["14209:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7223,"src":"14209:13:30"},"referencedDeclaration":7223,"src":"14209:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7223_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14208:30:30"},"scope":8256,"src":"14099:265:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":7739,"members":[{"constant":false,"id":7738,"mutability":"mutable","name":"_checkpoints","nameLocation":"14412:12:30","nodeType":"VariableDeclaration","scope":7739,"src":"14396:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7736,"nodeType":"UserDefinedTypeName","pathNode":{"id":7735,"name":"Checkpoint160","nameLocations":["14396:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"14396:13:30"},"referencedDeclaration":7744,"src":"14396:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7737,"nodeType":"ArrayTypeName","src":"14396:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14377:8:30","nodeType":"StructDefinition","scope":8256,"src":"14370:61:30","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":7744,"members":[{"constant":false,"id":7741,"mutability":"mutable","name":"_key","nameLocation":"14475:4:30","nodeType":"VariableDeclaration","scope":7744,"src":"14468:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7740,"name":"uint96","nodeType":"ElementaryTypeName","src":"14468:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7743,"mutability":"mutable","name":"_value","nameLocation":"14497:6:30","nodeType":"VariableDeclaration","scope":7744,"src":"14489:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7742,"name":"uint160","nodeType":"ElementaryTypeName","src":"14489:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14444:13:30","nodeType":"StructDefinition","scope":8256,"src":"14437:73:30","visibility":"public"},{"body":{"id":7766,"nodeType":"Block","src":"14923:62:30","statements":[{"expression":{"arguments":[{"expression":{"id":7760,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"14948:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"14948:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7762,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"14967:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"14972:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7759,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7094,7615,8136],"referencedDeclaration":8136,"src":"14940:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14940:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":7758,"id":7765,"nodeType":"Return","src":"14933:45:30"}]},"documentation":{"id":7745,"nodeType":"StructuredDocumentation","src":"14516:302:30","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":7767,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14832:4:30","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"self","nameLocation":"14854:4:30","nodeType":"VariableDeclaration","scope":7767,"src":"14837:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7747,"nodeType":"UserDefinedTypeName","pathNode":{"id":7746,"name":"Trace160","nameLocations":["14837:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"14837:8:30"},"referencedDeclaration":7739,"src":"14837:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7750,"mutability":"mutable","name":"key","nameLocation":"14867:3:30","nodeType":"VariableDeclaration","scope":7767,"src":"14860:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7749,"name":"uint96","nodeType":"ElementaryTypeName","src":"14860:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7752,"mutability":"mutable","name":"value","nameLocation":"14880:5:30","nodeType":"VariableDeclaration","scope":7767,"src":"14872:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7751,"name":"uint160","nodeType":"ElementaryTypeName","src":"14872:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14836:50:30"},"returnParameters":{"id":7758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7767,"src":"14905:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7754,"name":"uint160","nodeType":"ElementaryTypeName","src":"14905:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":7757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7767,"src":"14914:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7756,"name":"uint160","nodeType":"ElementaryTypeName","src":"14914:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14904:18:30"},"scope":8256,"src":"14823:162:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7806,"nodeType":"Block","src":"15238:207:30","statements":[{"assignments":[7779],"declarations":[{"constant":false,"id":7779,"mutability":"mutable","name":"len","nameLocation":"15256:3:30","nodeType":"VariableDeclaration","scope":7806,"src":"15248:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7778,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7783,"initialValue":{"expression":{"expression":{"id":7780,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"15262:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15262:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15280:6:30","memberName":"length","nodeType":"MemberAccess","src":"15262:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:38:30"},{"assignments":[7785],"declarations":[{"constant":false,"id":7785,"mutability":"mutable","name":"pos","nameLocation":"15304:3:30","nodeType":"VariableDeclaration","scope":7806,"src":"15296:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7784,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7793,"initialValue":{"arguments":[{"expression":{"id":7787,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"15329:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15334:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15329:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7789,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"15348:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15353:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7791,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"15356:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7786,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7198,7719,8240],"referencedDeclaration":8240,"src":"15310:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15296:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7794,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"15377:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7795,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"15384:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7799,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"15408:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15413:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15408:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7801,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"15427:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7798,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"15394:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15432:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"15394:44:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15377:61:30","trueExpression":{"hexValue":"30","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15390:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7777,"id":7805,"nodeType":"Return","src":"15370:68:30"}]},"documentation":{"id":7768,"nodeType":"StructuredDocumentation","src":"14991:154:30","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7807,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15159:11:30","nodeType":"FunctionDefinition","parameters":{"id":7774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7771,"mutability":"mutable","name":"self","nameLocation":"15188:4:30","nodeType":"VariableDeclaration","scope":7807,"src":"15171:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7770,"nodeType":"UserDefinedTypeName","pathNode":{"id":7769,"name":"Trace160","nameLocations":["15171:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"15171:8:30"},"referencedDeclaration":7739,"src":"15171:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7773,"mutability":"mutable","name":"key","nameLocation":"15201:3:30","nodeType":"VariableDeclaration","scope":7807,"src":"15194:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7772,"name":"uint96","nodeType":"ElementaryTypeName","src":"15194:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15170:35:30"},"returnParameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7807,"src":"15229:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7775,"name":"uint160","nodeType":"ElementaryTypeName","src":"15229:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15228:9:30"},"scope":8256,"src":"15150:295:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7848,"nodeType":"Block","src":"15700:209:30","statements":[{"assignments":[7819],"declarations":[{"constant":false,"id":7819,"mutability":"mutable","name":"len","nameLocation":"15718:3:30","nodeType":"VariableDeclaration","scope":7848,"src":"15710:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7818,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7823,"initialValue":{"expression":{"expression":{"id":7820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"15724:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15724:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15742:6:30","memberName":"length","nodeType":"MemberAccess","src":"15724:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15710:38:30"},{"assignments":[7825],"declarations":[{"constant":false,"id":7825,"mutability":"mutable","name":"pos","nameLocation":"15766:3:30","nodeType":"VariableDeclaration","scope":7848,"src":"15758:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7824,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7833,"initialValue":{"arguments":[{"expression":{"id":7827,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"15791:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15796:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15791:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7829,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"15810:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15815:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7831,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"15818:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7826,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":8188,"src":"15772:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15772:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15758:64:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7834,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"15839:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15846:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15839:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7839,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"15868:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"15868:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7841,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"15887:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15893:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15887:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7838,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"15854:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15854:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15896:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"15854:48:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15839:63:30","trueExpression":{"hexValue":"30","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7817,"id":7847,"nodeType":"Return","src":"15832:70:30"}]},"documentation":{"id":7808,"nodeType":"StructuredDocumentation","src":"15451:156:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7849,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15621:11:30","nodeType":"FunctionDefinition","parameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7811,"mutability":"mutable","name":"self","nameLocation":"15650:4:30","nodeType":"VariableDeclaration","scope":7849,"src":"15633:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7810,"nodeType":"UserDefinedTypeName","pathNode":{"id":7809,"name":"Trace160","nameLocations":["15633:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"15633:8:30"},"referencedDeclaration":7739,"src":"15633:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7813,"mutability":"mutable","name":"key","nameLocation":"15663:3:30","nodeType":"VariableDeclaration","scope":7849,"src":"15656:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7812,"name":"uint96","nodeType":"ElementaryTypeName","src":"15656:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15632:35:30"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7849,"src":"15691:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7815,"name":"uint160","nodeType":"ElementaryTypeName","src":"15691:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15690:9:30"},"scope":8256,"src":"15612:297:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7933,"nodeType":"Block","src":"16308:512:30","statements":[{"assignments":[7861],"declarations":[{"constant":false,"id":7861,"mutability":"mutable","name":"len","nameLocation":"16326:3:30","nodeType":"VariableDeclaration","scope":7933,"src":"16318:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7860,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7865,"initialValue":{"expression":{"expression":{"id":7862,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"16332:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"16332:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16350:6:30","memberName":"length","nodeType":"MemberAccess","src":"16332:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:38:30"},{"assignments":[7867],"declarations":[{"constant":false,"id":7867,"mutability":"mutable","name":"low","nameLocation":"16375:3:30","nodeType":"VariableDeclaration","scope":7933,"src":"16367:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7866,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7869,"initialValue":{"hexValue":"30","id":7868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16381:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16367:15:30"},{"assignments":[7871],"declarations":[{"constant":false,"id":7871,"mutability":"mutable","name":"high","nameLocation":"16400:4:30","nodeType":"VariableDeclaration","scope":7933,"src":"16392:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7870,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7873,"initialValue":{"id":7872,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"16407:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16392:18:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7874,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"16425:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16431:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16425:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7908,"nodeType":"IfStatement","src":"16421:234:30","trueBody":{"id":7907,"nodeType":"Block","src":"16434:221:30","statements":[{"assignments":[7878],"declarations":[{"constant":false,"id":7878,"mutability":"mutable","name":"mid","nameLocation":"16456:3:30","nodeType":"VariableDeclaration","scope":7907,"src":"16448:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint256","nodeType":"ElementaryTypeName","src":"16448:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7885,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7879,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"16462:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7882,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"16478:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7880,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"16468:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16473:4:30","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4313,"src":"16468:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16468:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16448:34:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7886,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"16500:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7888,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"16520:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"16520:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7890,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"16539:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7887,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"16506:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16506:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16544:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"16506:42:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16500:48:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7905,"nodeType":"Block","src":"16599:46:30","statements":[{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7899,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"16617:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7900,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"16623:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16623:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7904,"nodeType":"ExpressionStatement","src":"16617:13:30"}]},"id":7906,"nodeType":"IfStatement","src":"16496:149:30","trueBody":{"id":7898,"nodeType":"Block","src":"16550:43:30","statements":[{"expression":{"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7894,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"16568:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7895,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"16575:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16568:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7897,"nodeType":"ExpressionStatement","src":"16568:10:30"}]}}]}},{"assignments":[7910],"declarations":[{"constant":false,"id":7910,"mutability":"mutable","name":"pos","nameLocation":"16673:3:30","nodeType":"VariableDeclaration","scope":7933,"src":"16665:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7909,"name":"uint256","nodeType":"ElementaryTypeName","src":"16665:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7918,"initialValue":{"arguments":[{"expression":{"id":7912,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"16698:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"16698:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7914,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"16717:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7915,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"16722:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7916,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"16727:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7911,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7146,7667,8188],"referencedDeclaration":8188,"src":"16679:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16679:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16665:67:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7919,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"16750:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16757:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16750:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7924,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"16779:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"16779:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7926,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"16798:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16804:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16798:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7923,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"16765:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"16765:48:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16750:63:30","trueExpression":{"hexValue":"30","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7859,"id":7932,"nodeType":"Return","src":"16743:70:30"}]},"documentation":{"id":7850,"nodeType":"StructuredDocumentation","src":"15915:294:30","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7934,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16223:17:30","nodeType":"FunctionDefinition","parameters":{"id":7856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"self","nameLocation":"16258:4:30","nodeType":"VariableDeclaration","scope":7934,"src":"16241:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7852,"nodeType":"UserDefinedTypeName","pathNode":{"id":7851,"name":"Trace160","nameLocations":["16241:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"16241:8:30"},"referencedDeclaration":7739,"src":"16241:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7855,"mutability":"mutable","name":"key","nameLocation":"16271:3:30","nodeType":"VariableDeclaration","scope":7934,"src":"16264:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7854,"name":"uint96","nodeType":"ElementaryTypeName","src":"16264:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16240:35:30"},"returnParameters":{"id":7859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7934,"src":"16299:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7857,"name":"uint160","nodeType":"ElementaryTypeName","src":"16299:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16298:9:30"},"scope":8256,"src":"16214:606:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7963,"nodeType":"Block","src":"17011:135:30","statements":[{"assignments":[7944],"declarations":[{"constant":false,"id":7944,"mutability":"mutable","name":"pos","nameLocation":"17029:3:30","nodeType":"VariableDeclaration","scope":7963,"src":"17021:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7943,"name":"uint256","nodeType":"ElementaryTypeName","src":"17021:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7948,"initialValue":{"expression":{"expression":{"id":7945,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"17035:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17040:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"17035:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17053:6:30","memberName":"length","nodeType":"MemberAccess","src":"17035:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17021:38:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7949,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"17076:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17083:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17076:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7954,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"17105:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17110:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"17105:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7956,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"17124:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17130:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17124:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7953,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"17091:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17091:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"17091:48:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17076:63:30","trueExpression":{"hexValue":"30","id":7952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7942,"id":7962,"nodeType":"Return","src":"17069:70:30"}]},"documentation":{"id":7935,"nodeType":"StructuredDocumentation","src":"16826:109:30","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7964,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16949:6:30","nodeType":"FunctionDefinition","parameters":{"id":7939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7938,"mutability":"mutable","name":"self","nameLocation":"16973:4:30","nodeType":"VariableDeclaration","scope":7964,"src":"16956:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7937,"nodeType":"UserDefinedTypeName","pathNode":{"id":7936,"name":"Trace160","nameLocations":["16956:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"16956:8:30"},"referencedDeclaration":7739,"src":"16956:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16955:23:30"},"returnParameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7964,"src":"17002:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7940,"name":"uint160","nodeType":"ElementaryTypeName","src":"17002:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17001:9:30"},"scope":8256,"src":"16940:206:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8012,"nodeType":"Block","src":"17439:274:30","statements":[{"assignments":[7978],"declarations":[{"constant":false,"id":7978,"mutability":"mutable","name":"pos","nameLocation":"17457:3:30","nodeType":"VariableDeclaration","scope":8012,"src":"17449:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7977,"name":"uint256","nodeType":"ElementaryTypeName","src":"17449:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7982,"initialValue":{"expression":{"expression":{"id":7979,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"17463:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17468:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"17463:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17481:6:30","memberName":"length","nodeType":"MemberAccess","src":"17463:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17449:38:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7983,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"17501:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17508:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17501:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8010,"nodeType":"Block","src":"17562:145:30","statements":[{"assignments":[7994],"declarations":[{"constant":false,"id":7994,"mutability":"mutable","name":"ckpt","nameLocation":"17597:4:30","nodeType":"VariableDeclaration","scope":8010,"src":"17576:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7993,"nodeType":"UserDefinedTypeName","pathNode":{"id":7992,"name":"Checkpoint160","nameLocations":["17576:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"17576:13:30"},"referencedDeclaration":7744,"src":"17576:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8002,"initialValue":{"arguments":[{"expression":{"id":7996,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"17618:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17623:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"17618:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"17637:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17637:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7995,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"17604:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17576:69:30"},{"expression":{"components":[{"hexValue":"74727565","id":8003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17667:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8004,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"17673:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17678:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"17673:9:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":8006,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"17684:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17689:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"17684:11:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17666:30:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":7976,"id":8009,"nodeType":"Return","src":"17659:37:30"}]},"id":8011,"nodeType":"IfStatement","src":"17497:210:30","trueBody":{"id":7991,"nodeType":"Block","src":"17511:45:30","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17533:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17543:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17532:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7976,"id":7990,"nodeType":"Return","src":"17525:20:30"}]}}]},"documentation":{"id":7965,"nodeType":"StructuredDocumentation","src":"17152:168:30","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8013,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17334:16:30","nodeType":"FunctionDefinition","parameters":{"id":7969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"mutability":"mutable","name":"self","nameLocation":"17368:4:30","nodeType":"VariableDeclaration","scope":8013,"src":"17351:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7967,"nodeType":"UserDefinedTypeName","pathNode":{"id":7966,"name":"Trace160","nameLocations":["17351:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"17351:8:30"},"referencedDeclaration":7739,"src":"17351:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17350:23:30"},"returnParameters":{"id":7976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7971,"mutability":"mutable","name":"exists","nameLocation":"17402:6:30","nodeType":"VariableDeclaration","scope":8013,"src":"17397:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7970,"name":"bool","nodeType":"ElementaryTypeName","src":"17397:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7973,"mutability":"mutable","name":"_key","nameLocation":"17417:4:30","nodeType":"VariableDeclaration","scope":8013,"src":"17410:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7972,"name":"uint96","nodeType":"ElementaryTypeName","src":"17410:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7975,"mutability":"mutable","name":"_value","nameLocation":"17431:6:30","nodeType":"VariableDeclaration","scope":8013,"src":"17423:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7974,"name":"uint160","nodeType":"ElementaryTypeName","src":"17423:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17396:42:30"},"scope":8256,"src":"17325:388:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8026,"nodeType":"Block","src":"17852:48:30","statements":[{"expression":{"expression":{"expression":{"id":8022,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"17869:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17874:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"17869:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:6:30","memberName":"length","nodeType":"MemberAccess","src":"17869:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8021,"id":8025,"nodeType":"Return","src":"17862:31:30"}]},"documentation":{"id":8014,"nodeType":"StructuredDocumentation","src":"17719:57:30","text":" @dev Returns the number of checkpoint."},"id":8027,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17790:6:30","nodeType":"FunctionDefinition","parameters":{"id":8018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8017,"mutability":"mutable","name":"self","nameLocation":"17814:4:30","nodeType":"VariableDeclaration","scope":8027,"src":"17797:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8016,"nodeType":"UserDefinedTypeName","pathNode":{"id":8015,"name":"Trace160","nameLocations":["17797:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"17797:8:30"},"referencedDeclaration":7739,"src":"17797:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17796:23:30"},"returnParameters":{"id":8021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8027,"src":"17843:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8019,"name":"uint256","nodeType":"ElementaryTypeName","src":"17843:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17842:9:30"},"scope":8256,"src":"17781:119:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8044,"nodeType":"Block","src":"18064:46:30","statements":[{"expression":{"baseExpression":{"expression":{"id":8039,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"18081:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18086:12:30","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"18081:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8042,"indexExpression":{"id":8041,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"18099:3:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":8038,"id":8043,"nodeType":"Return","src":"18074:29:30"}]},"documentation":{"id":8028,"nodeType":"StructuredDocumentation","src":"17906:61:30","text":" @dev Returns checkpoint at given position."},"id":8045,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17981:2:30","nodeType":"FunctionDefinition","parameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8031,"mutability":"mutable","name":"self","nameLocation":"18001:4:30","nodeType":"VariableDeclaration","scope":8045,"src":"17984:21:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8030,"nodeType":"UserDefinedTypeName","pathNode":{"id":8029,"name":"Trace160","nameLocations":["17984:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":7739,"src":"17984:8:30"},"referencedDeclaration":7739,"src":"17984:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7739_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8033,"mutability":"mutable","name":"pos","nameLocation":"18014:3:30","nodeType":"VariableDeclaration","scope":8045,"src":"18007:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8032,"name":"uint32","nodeType":"ElementaryTypeName","src":"18007:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"17983:35:30"},"returnParameters":{"id":8038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8045,"src":"18042:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8036,"nodeType":"UserDefinedTypeName","pathNode":{"id":8035,"name":"Checkpoint160","nameLocations":["18042:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"18042:13:30"},"referencedDeclaration":7744,"src":"18042:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18041:22:30"},"scope":8256,"src":"17972:138:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"18395:761:30","statements":[{"assignments":[8062],"declarations":[{"constant":false,"id":8062,"mutability":"mutable","name":"pos","nameLocation":"18413:3:30","nodeType":"VariableDeclaration","scope":8135,"src":"18405:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"18405:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8065,"initialValue":{"expression":{"id":8063,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"18419:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18424:6:30","memberName":"length","nodeType":"MemberAccess","src":"18419:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18405:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"18445:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18451:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18445:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8133,"nodeType":"Block","src":"19042:108:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":8124,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"19087:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"19100:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8123,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"19066:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19081:4:30","19092:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19066:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8120,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"19056:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19061:4:30","memberName":"push","nodeType":"MemberAccess","src":"19056:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7744_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19056:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8128,"nodeType":"ExpressionStatement","src":"19056:52:30"},{"expression":{"components":[{"hexValue":"30","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19130:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"19133:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19129:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":8060,"id":8132,"nodeType":"Return","src":"19122:17:30"}]},"id":8134,"nodeType":"IfStatement","src":"18441:709:30","trueBody":{"id":8119,"nodeType":"Block","src":"18454:582:30","statements":[{"assignments":[8071],"declarations":[{"constant":false,"id":8071,"mutability":"mutable","name":"last","nameLocation":"18541:4:30","nodeType":"VariableDeclaration","scope":8119,"src":"18520:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8070,"nodeType":"UserDefinedTypeName","pathNode":{"id":8069,"name":"Checkpoint160","nameLocations":["18520:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"18520:13:30"},"referencedDeclaration":7744,"src":"18520:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8078,"initialValue":{"arguments":[{"id":8073,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"18562:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8074,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"18568:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18574:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18568:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8072,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"18548:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18548:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18520:56:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8079,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"18650:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18655:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"18650:9:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8081,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"18662:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18650:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8087,"nodeType":"IfStatement","src":"18646:91:30","trueBody":{"id":8086,"nodeType":"Block","src":"18667:70:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8083,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"18692:28:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18692:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8085,"nodeType":"RevertStatement","src":"18685:37:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8088,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"18800:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18805:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"18800:9:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8090,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"18813:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18800:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8112,"nodeType":"Block","src":"18900:85:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":8107,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"18949:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"18962:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8106,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"18928:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["18943:4:30","18954:6:30"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"18928:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"18918:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18923:4:30","memberName":"push","nodeType":"MemberAccess","src":"18918:9:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7744_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18918:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8111,"nodeType":"ExpressionStatement","src":"18918:52:30"}]},"id":8113,"nodeType":"IfStatement","src":"18796:189:30","trueBody":{"id":8102,"nodeType":"Block","src":"18818:76:30","statements":[{"expression":{"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":8093,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"18850:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8094,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"18856:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18856:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8092,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"18836:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18836:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18865:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"18836:35:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"18874:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18836:43:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8101,"nodeType":"ExpressionStatement","src":"18836:43:30"}]}},{"expression":{"components":[{"expression":{"id":8114,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"19006:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19011:6:30","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7743,"src":"19006:11:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":8116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"19019:5:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19005:20:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8060,"id":8118,"nodeType":"Return","src":"18998:27:30"}]}}]},"documentation":{"id":8046,"nodeType":"StructuredDocumentation","src":"18116:165:30","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18295:7:30","nodeType":"FunctionDefinition","parameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8050,"mutability":"mutable","name":"self","nameLocation":"18327:4:30","nodeType":"VariableDeclaration","scope":8136,"src":"18303:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8048,"nodeType":"UserDefinedTypeName","pathNode":{"id":8047,"name":"Checkpoint160","nameLocations":["18303:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"18303:13:30"},"referencedDeclaration":7744,"src":"18303:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8049,"nodeType":"ArrayTypeName","src":"18303:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8052,"mutability":"mutable","name":"key","nameLocation":"18340:3:30","nodeType":"VariableDeclaration","scope":8136,"src":"18333:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8051,"name":"uint96","nodeType":"ElementaryTypeName","src":"18333:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8054,"mutability":"mutable","name":"value","nameLocation":"18353:5:30","nodeType":"VariableDeclaration","scope":8136,"src":"18345:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8053,"name":"uint160","nodeType":"ElementaryTypeName","src":"18345:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18302:57:30"},"returnParameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8136,"src":"18377:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8056,"name":"uint160","nodeType":"ElementaryTypeName","src":"18377:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8136,"src":"18386:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8058,"name":"uint160","nodeType":"ElementaryTypeName","src":"18386:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18376:18:30"},"scope":8256,"src":"18286:870:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8187,"nodeType":"Block","src":"19675:267:30","statements":[{"body":{"id":8183,"nodeType":"Block","src":"19704:211:30","statements":[{"assignments":[8156],"declarations":[{"constant":false,"id":8156,"mutability":"mutable","name":"mid","nameLocation":"19726:3:30","nodeType":"VariableDeclaration","scope":8183,"src":"19718:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8155,"name":"uint256","nodeType":"ElementaryTypeName","src":"19718:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8162,"initialValue":{"arguments":[{"id":8159,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"19745:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8160,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"19750:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8157,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"19732:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19737:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"19732:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19732:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19718:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"19787:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8165,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"19793:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8163,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"19773:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19773:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19798:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"19773:29:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8168,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"19805:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19773:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8181,"nodeType":"Block","src":"19859:46:30","statements":[{"expression":{"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8175,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"19877:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8176,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"19883:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19883:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19877:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8180,"nodeType":"ExpressionStatement","src":"19877:13:30"}]},"id":8182,"nodeType":"IfStatement","src":"19769:136:30","trueBody":{"id":8174,"nodeType":"Block","src":"19810:43:30","statements":[{"expression":{"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8170,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"19828:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8171,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"19835:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19828:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8173,"nodeType":"ExpressionStatement","src":"19828:10:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8152,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"19692:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8153,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"19698:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19692:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8184,"nodeType":"WhileStatement","src":"19685:230:30"},{"expression":{"id":8185,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"19931:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8151,"id":8186,"nodeType":"Return","src":"19924:11:30"}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"19162:342:30","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19518:18:30","nodeType":"FunctionDefinition","parameters":{"id":8148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"self","nameLocation":"19570:4:30","nodeType":"VariableDeclaration","scope":8188,"src":"19546:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8139,"nodeType":"UserDefinedTypeName","pathNode":{"id":8138,"name":"Checkpoint160","nameLocations":["19546:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"19546:13:30"},"referencedDeclaration":7744,"src":"19546:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8140,"nodeType":"ArrayTypeName","src":"19546:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8143,"mutability":"mutable","name":"key","nameLocation":"19591:3:30","nodeType":"VariableDeclaration","scope":8188,"src":"19584:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8142,"name":"uint96","nodeType":"ElementaryTypeName","src":"19584:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8145,"mutability":"mutable","name":"low","nameLocation":"19612:3:30","nodeType":"VariableDeclaration","scope":8188,"src":"19604:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8144,"name":"uint256","nodeType":"ElementaryTypeName","src":"19604:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8147,"mutability":"mutable","name":"high","nameLocation":"19633:4:30","nodeType":"VariableDeclaration","scope":8188,"src":"19625:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8146,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19536:107:30"},"returnParameters":{"id":8151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8188,"src":"19666:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:30"},"scope":8256,"src":"19509:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8239,"nodeType":"Block","src":"20462:267:30","statements":[{"body":{"id":8235,"nodeType":"Block","src":"20491:211:30","statements":[{"assignments":[8208],"declarations":[{"constant":false,"id":8208,"mutability":"mutable","name":"mid","nameLocation":"20513:3:30","nodeType":"VariableDeclaration","scope":8235,"src":"20505:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8207,"name":"uint256","nodeType":"ElementaryTypeName","src":"20505:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8214,"initialValue":{"arguments":[{"id":8211,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"20532:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8212,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"20537:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8209,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"20519:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20524:7:30","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"20519:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20505:37:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8216,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"20574:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8217,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"20580:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8215,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7213,7734,8255],"referencedDeclaration":8255,"src":"20560:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7744_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20560:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20585:4:30","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"20560:29:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8220,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"20592:3:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20560:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8233,"nodeType":"Block","src":"20649:43:30","statements":[{"expression":{"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8229,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"20667:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8230,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"20674:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20667:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8232,"nodeType":"ExpressionStatement","src":"20667:10:30"}]},"id":8234,"nodeType":"IfStatement","src":"20556:136:30","trueBody":{"id":8228,"nodeType":"Block","src":"20597:46:30","statements":[{"expression":{"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8222,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"20615:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8223,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"20621:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20627:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20621:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8227,"nodeType":"ExpressionStatement","src":"20615:13:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8204,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"20479:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8205,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"20485:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20479:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8236,"nodeType":"WhileStatement","src":"20472:230:30"},{"expression":{"id":8237,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"20718:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8203,"id":8238,"nodeType":"Return","src":"20711:11:30"}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"19948:343:30","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8240,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20305:18:30","nodeType":"FunctionDefinition","parameters":{"id":8200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8193,"mutability":"mutable","name":"self","nameLocation":"20357:4:30","nodeType":"VariableDeclaration","scope":8240,"src":"20333:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8191,"nodeType":"UserDefinedTypeName","pathNode":{"id":8190,"name":"Checkpoint160","nameLocations":["20333:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"20333:13:30"},"referencedDeclaration":7744,"src":"20333:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8192,"nodeType":"ArrayTypeName","src":"20333:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"key","nameLocation":"20378:3:30","nodeType":"VariableDeclaration","scope":8240,"src":"20371:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8194,"name":"uint96","nodeType":"ElementaryTypeName","src":"20371:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8197,"mutability":"mutable","name":"low","nameLocation":"20399:3:30","nodeType":"VariableDeclaration","scope":8240,"src":"20391:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8196,"name":"uint256","nodeType":"ElementaryTypeName","src":"20391:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8199,"mutability":"mutable","name":"high","nameLocation":"20420:4:30","nodeType":"VariableDeclaration","scope":8240,"src":"20412:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"20412:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20323:107:30"},"returnParameters":{"id":8203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8240,"src":"20453:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8201,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20452:9:30"},"scope":8256,"src":"20296:433:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8254,"nodeType":"Block","src":"21012:125:30","statements":[{"AST":{"nativeSrc":"21031:100:30","nodeType":"YulBlock","src":"21031:100:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21052:1:30","nodeType":"YulLiteral","src":"21052:1:30","type":"","value":"0"},{"name":"self.slot","nativeSrc":"21055:9:30","nodeType":"YulIdentifier","src":"21055:9:30"}],"functionName":{"name":"mstore","nativeSrc":"21045:6:30","nodeType":"YulIdentifier","src":"21045:6:30"},"nativeSrc":"21045:20:30","nodeType":"YulFunctionCall","src":"21045:20:30"},"nativeSrc":"21045:20:30","nodeType":"YulExpressionStatement","src":"21045:20:30"},{"nativeSrc":"21078:43:30","nodeType":"YulAssignment","src":"21078:43:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21107:1:30","nodeType":"YulLiteral","src":"21107:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"21110:4:30","nodeType":"YulLiteral","src":"21110:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"21097:9:30","nodeType":"YulIdentifier","src":"21097:9:30"},"nativeSrc":"21097:18:30","nodeType":"YulFunctionCall","src":"21097:18:30"},{"name":"pos","nativeSrc":"21117:3:30","nodeType":"YulIdentifier","src":"21117:3:30"}],"functionName":{"name":"add","nativeSrc":"21093:3:30","nodeType":"YulIdentifier","src":"21093:3:30"},"nativeSrc":"21093:28:30","nodeType":"YulFunctionCall","src":"21093:28:30"},"variableNames":[{"name":"result.slot","nativeSrc":"21078:11:30","nodeType":"YulIdentifier","src":"21078:11:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8247,"isOffset":false,"isSlot":false,"src":"21117:3:30","valueSize":1},{"declaration":8251,"isOffset":false,"isSlot":true,"src":"21078:11:30","suffix":"slot","valueSize":1},{"declaration":8245,"isOffset":false,"isSlot":true,"src":"21055:9:30","suffix":"slot","valueSize":1}],"id":8253,"nodeType":"InlineAssembly","src":"21022:109:30"}]},"documentation":{"id":8241,"nodeType":"StructuredDocumentation","src":"20735:132:30","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8255,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20881:13:30","nodeType":"FunctionDefinition","parameters":{"id":8248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8245,"mutability":"mutable","name":"self","nameLocation":"20928:4:30","nodeType":"VariableDeclaration","scope":8255,"src":"20904:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8243,"nodeType":"UserDefinedTypeName","pathNode":{"id":8242,"name":"Checkpoint160","nameLocations":["20904:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"20904:13:30"},"referencedDeclaration":7744,"src":"20904:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8244,"nodeType":"ArrayTypeName","src":"20904:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7744_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8247,"mutability":"mutable","name":"pos","nameLocation":"20950:3:30","nodeType":"VariableDeclaration","scope":8255,"src":"20942:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8246,"name":"uint256","nodeType":"ElementaryTypeName","src":"20942:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:65:30"},"returnParameters":{"id":8252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8251,"mutability":"mutable","name":"result","nameLocation":"21004:6:30","nodeType":"VariableDeclaration","scope":8255,"src":"20982:28:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8250,"nodeType":"UserDefinedTypeName","pathNode":{"id":8249,"name":"Checkpoint160","nameLocations":["20982:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7744,"src":"20982:13:30"},"referencedDeclaration":7744,"src":"20982:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7744_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20981:30:30"},"scope":8256,"src":"20872:265:30","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":8257,"src":"668:20471:30","usedErrors":[6692],"usedEvents":[]}],"src":"201:20939:30"}},"@openzeppelin/contracts/utils/types/Time.sol":{"id":31,"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[4824],"SafeCast":[6579],"Time":[8531]},"id":8532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8258,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8260,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8532,"sourceUnit":4825,"src":"130:38:31","symbolAliases":[{"foreign":{"id":8259,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"138:4:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":8262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8532,"sourceUnit":6580,"src":"169:46:31","symbolAliases":[{"foreign":{"id":8261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"177:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":8263,"nodeType":"StructuredDocumentation","src":"217:422:31","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":8531,"linearizedBaseContracts":[8531],"name":"Time","nameLocation":"648:4:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8265,"libraryName":{"id":8264,"name":"Time","nameLocations":["665:4:31"],"nodeType":"IdentifierPath","referencedDeclaration":8531,"src":"665:4:31"},"nodeType":"UsingForDirective","src":"659:17:31"},{"body":{"id":8277,"nodeType":"Block","src":"802:58:31","statements":[{"expression":{"arguments":[{"expression":{"id":8273,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8271,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"819:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:31","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"819:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8270,"id":8276,"nodeType":"Return","src":"812:41:31"}]},"documentation":{"id":8266,"nodeType":"StructuredDocumentation","src":"682:63:31","text":" @dev Get the block timestamp as a Timepoint."},"id":8278,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:31","nodeType":"FunctionDefinition","parameters":{"id":8267,"nodeType":"ParameterList","parameters":[],"src":"768:2:31"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8278,"src":"794:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8268,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:31"},"scope":8531,"src":"750:110:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8290,"nodeType":"Block","src":"985:55:31","statements":[{"expression":{"arguments":[{"expression":{"id":8286,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:31","memberName":"number","nodeType":"MemberAccess","src":"1020:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"1002:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6579_$","typeString":"type(library SafeCast)"}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:31","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"1002:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8283,"id":8289,"nodeType":"Return","src":"995:38:31"}]},"documentation":{"id":8279,"nodeType":"StructuredDocumentation","src":"866:60:31","text":" @dev Get the block number as a Timepoint."},"id":8291,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:31","nodeType":"FunctionDefinition","parameters":{"id":8280,"nodeType":"ParameterList","parameters":[],"src":"951:2:31"},"returnParameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8291,"src":"977:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8281,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:31"},"scope":8531,"src":"931:109:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":8293,"name":"Delay","nameLocation":"2377:5:31","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:31","underlyingType":{"id":8292,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":8307,"nodeType":"Block","src":"2572:44:31","statements":[{"expression":{"arguments":[{"id":8304,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8296,"src":"2600:8:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8302,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"2589:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8293_$","typeString":"type(Time.Delay)"}},"id":8303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:31","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:31","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"functionReturnParameters":8301,"id":8306,"nodeType":"Return","src":"2582:27:31"}]},"documentation":{"id":8294,"nodeType":"StructuredDocumentation","src":"2400:103:31","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":8308,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:31","nodeType":"FunctionDefinition","parameters":{"id":8297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"duration","nameLocation":"2532:8:31","nodeType":"VariableDeclaration","scope":8308,"src":"2525:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8295,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:31"},"returnParameters":{"id":8301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8308,"src":"2565:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8299,"nodeType":"UserDefinedTypeName","pathNode":{"id":8298,"name":"Delay","nameLocations":["2565:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"2565:5:31"},"referencedDeclaration":8293,"src":"2565:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:31"},"scope":8531,"src":"2508:108:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8346,"nodeType":"Block","src":"2964:180:31","statements":[{"assignments":[8324,8326,8328],"declarations":[{"constant":false,"id":8324,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:31","nodeType":"VariableDeclaration","scope":8346,"src":"2975:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8323,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8326,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:31","nodeType":"VariableDeclaration","scope":8346,"src":"2995:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8325,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8328,"mutability":"mutable","name":"effect","nameLocation":"3021:6:31","nodeType":"VariableDeclaration","scope":8346,"src":"3014:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8327,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8329,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"3031:4:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:31","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":8492,"src":"3031:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8293_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8333,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"3061:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8334,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"3071:9:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":8340,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"3105:11:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8341,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"3118:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8342,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"3130:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:31","trueExpression":{"components":[{"id":8336,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"3084:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8322,"id":8345,"nodeType":"Return","src":"3054:83:31"}]},"documentation":{"id":8309,"nodeType":"StructuredDocumentation","src":"2622:241:31","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":8347,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:31","nodeType":"FunctionDefinition","parameters":{"id":8315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8312,"mutability":"mutable","name":"self","nameLocation":"2894:4:31","nodeType":"VariableDeclaration","scope":8347,"src":"2888:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8311,"nodeType":"UserDefinedTypeName","pathNode":{"id":8310,"name":"Delay","nameLocations":["2888:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"2888:5:31"},"referencedDeclaration":8293,"src":"2888:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8314,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:31","nodeType":"VariableDeclaration","scope":8347,"src":"2900:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8313,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:31"},"returnParameters":{"id":8322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8347,"src":"2940:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8316,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8347,"src":"2948:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8318,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8347,"src":"2956:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8320,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:31"},"scope":8531,"src":"2868:276:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8366,"nodeType":"Block","src":"3438:53:31","statements":[{"expression":{"arguments":[{"id":8361,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"3466:4:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8362,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"3472:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8360,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"3455:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8293_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8359,"id":8365,"nodeType":"Return","src":"3448:36:31"}]},"documentation":{"id":8348,"nodeType":"StructuredDocumentation","src":"3150:207:31","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":8367,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:31","nodeType":"FunctionDefinition","parameters":{"id":8352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8351,"mutability":"mutable","name":"self","nameLocation":"3385:4:31","nodeType":"VariableDeclaration","scope":8367,"src":"3379:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8350,"nodeType":"UserDefinedTypeName","pathNode":{"id":8349,"name":"Delay","nameLocations":["3379:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"3379:5:31"},"referencedDeclaration":8293,"src":"3379:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:31"},"returnParameters":{"id":8359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8367,"src":"3414:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8353,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8367,"src":"3422:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8355,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8367,"src":"3430:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8357,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:31"},"scope":8531,"src":"3362:129:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8384,"nodeType":"Block","src":"3604:74:31","statements":[{"assignments":[8377,null,null],"declarations":[{"constant":false,"id":8377,"mutability":"mutable","name":"delay","nameLocation":"3622:5:31","nodeType":"VariableDeclaration","scope":8384,"src":"3615:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8376,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":8381,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8378,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"3635:4:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:31","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":8367,"src":"3635:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8293_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:31"},{"expression":{"id":8382,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"3666:5:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8375,"id":8383,"nodeType":"Return","src":"3659:12:31"}]},"documentation":{"id":8368,"nodeType":"StructuredDocumentation","src":"3497:46:31","text":" @dev Get the current value."},"id":8385,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:31","nodeType":"FunctionDefinition","parameters":{"id":8372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8371,"mutability":"mutable","name":"self","nameLocation":"3567:4:31","nodeType":"VariableDeclaration","scope":8385,"src":"3561:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8370,"nodeType":"UserDefinedTypeName","pathNode":{"id":8369,"name":"Delay","nameLocations":["3561:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"3561:5:31"},"referencedDeclaration":8293,"src":"3561:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:31"},"returnParameters":{"id":8375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8385,"src":"3596:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8373,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:31"},"scope":8531,"src":"3548:130:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8440,"nodeType":"Block","src":"4128:234:31","statements":[{"assignments":[8402],"declarations":[{"constant":false,"id":8402,"mutability":"mutable","name":"value","nameLocation":"4145:5:31","nodeType":"VariableDeclaration","scope":8440,"src":"4138:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8401,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8406,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8403,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"4153:4:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:31","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"4153:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8293_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:31"},{"assignments":[8408],"declarations":[{"constant":false,"id":8408,"mutability":"mutable","name":"setback","nameLocation":"4180:7:31","nodeType":"VariableDeclaration","scope":8440,"src":"4173:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8407,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8424,"initialValue":{"arguments":[{"arguments":[{"id":8413,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8393,"src":"4206:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4218:5:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8415,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"4226:8:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4237:5:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8418,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"4245:8:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8411,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"4197:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:31","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":3957,"src":"4197:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8409,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:31","typeDescriptions":{}}},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:31"},{"expression":{"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8425,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"4269:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8426,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"4278:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8428,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"4292:7:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8431,"nodeType":"ExpressionStatement","src":"4269:30:31"},{"expression":{"components":[{"arguments":[{"id":8433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4322:5:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8434,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"4329:8:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8435,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"4339:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8432,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"4317:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},{"id":8437,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"4348:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$8293_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":8400,"id":8439,"nodeType":"Return","src":"4309:46:31"}]},"documentation":{"id":8386,"nodeType":"StructuredDocumentation","src":"3684:283:31","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":8441,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:31","nodeType":"FunctionDefinition","parameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"mutability":"mutable","name":"self","nameLocation":"4007:4:31","nodeType":"VariableDeclaration","scope":8441,"src":"4001:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8388,"nodeType":"UserDefinedTypeName","pathNode":{"id":8387,"name":"Delay","nameLocations":["4001:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"4001:5:31"},"referencedDeclaration":8293,"src":"4001:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8391,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:31","nodeType":"VariableDeclaration","scope":8441,"src":"4021:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8390,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8393,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:31","nodeType":"VariableDeclaration","scope":8441,"src":"4046:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8392,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:31"},"returnParameters":{"id":8400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:31","nodeType":"VariableDeclaration","scope":8441,"src":"4093:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8396,"nodeType":"UserDefinedTypeName","pathNode":{"id":8395,"name":"Delay","nameLocations":["4093:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"4093:5:31"},"referencedDeclaration":8293,"src":"4093:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8399,"mutability":"mutable","name":"effect","nameLocation":"4120:6:31","nodeType":"VariableDeclaration","scope":8441,"src":"4113:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8398,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:31"},"scope":8531,"src":"3972:390:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8491,"nodeType":"Block","src":"4595:212:31","statements":[{"assignments":[8455],"declarations":[{"constant":false,"id":8455,"mutability":"mutable","name":"raw","nameLocation":"4613:3:31","nodeType":"VariableDeclaration","scope":8491,"src":"4605:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8454,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":8460,"initialValue":{"arguments":[{"id":8458,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"4632:4:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}],"expression":{"id":8456,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"4619:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8293_$","typeString":"type(Time.Delay)"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:31","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:31","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$8293_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:31"},{"expression":{"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8461,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"4648:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8464,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4668:3:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8462,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:31","typeDescriptions":{}}},"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8467,"nodeType":"ExpressionStatement","src":"4648:24:31"},{"expression":{"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8468,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8448,"src":"4682:11:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8471,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4703:3:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":8472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8469,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:31","typeDescriptions":{}}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8476,"nodeType":"ExpressionStatement","src":"4682:31:31"},{"expression":{"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8477,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"4723:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8480,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4739:3:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8478,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:31","typeDescriptions":{}}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8485,"nodeType":"ExpressionStatement","src":"4723:26:31"},{"expression":{"components":[{"id":8486,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8448,"src":"4768:11:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8487,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"4781:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8488,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"4793:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8453,"id":8490,"nodeType":"Return","src":"4760:40:31"}]},"documentation":{"id":8442,"nodeType":"StructuredDocumentation","src":"4368:117:31","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":8492,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:31","nodeType":"FunctionDefinition","parameters":{"id":8446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8445,"mutability":"mutable","name":"self","nameLocation":"4512:4:31","nodeType":"VariableDeclaration","scope":8492,"src":"4506:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8444,"nodeType":"UserDefinedTypeName","pathNode":{"id":8443,"name":"Delay","nameLocations":["4506:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"4506:5:31"},"referencedDeclaration":8293,"src":"4506:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:31"},"returnParameters":{"id":8453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8448,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:31","nodeType":"VariableDeclaration","scope":8492,"src":"4541:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8447,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8450,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:31","nodeType":"VariableDeclaration","scope":8492,"src":"4561:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8449,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8452,"mutability":"mutable","name":"effect","nameLocation":"4587:6:31","nodeType":"VariableDeclaration","scope":8492,"src":"4580:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8451,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:31"},"scope":8531,"src":"4490:317:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8529,"nodeType":"Block","src":"4980:112:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8509,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"5017:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8507,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:31","typeDescriptions":{}}},"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8516,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"5043:11:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8514,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:31","typeDescriptions":{}}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":8518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8524,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"5073:10:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8522,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:31","typeDescriptions":{}}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8505,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"4997:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8293_$","typeString":"type(Time.Delay)"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:31","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:31","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8293_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"functionReturnParameters":8504,"id":8528,"nodeType":"Return","src":"4990:95:31"}]},"documentation":{"id":8493,"nodeType":"StructuredDocumentation","src":"4813:64:31","text":" @dev pack the components into a Delay object."},"id":8530,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:31","nodeType":"FunctionDefinition","parameters":{"id":8500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8495,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:31","nodeType":"VariableDeclaration","scope":8530,"src":"4896:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8494,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8497,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:31","nodeType":"VariableDeclaration","scope":8530,"src":"4916:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8496,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8499,"mutability":"mutable","name":"effect","nameLocation":"4942:6:31","nodeType":"VariableDeclaration","scope":8530,"src":"4935:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8498,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:31"},"returnParameters":{"id":8504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8530,"src":"4973:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"},"typeName":{"id":8502,"nodeType":"UserDefinedTypeName","pathNode":{"id":8501,"name":"Delay","nameLocations":["4973:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8293,"src":"4973:5:31"},"referencedDeclaration":8293,"src":"4973:5:31","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8293","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:31"},"scope":8531,"src":"4882:210:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8532,"src":"640:4454:31","usedErrors":[],"usedEvents":[]}],"src":"104:4991:31"}},"contracts/Counters.sol":{"id":32,"ast":{"absolutePath":"contracts/Counters.sol","exportedSymbols":{"Counters":[8605]},"id":8606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":8534,"nodeType":"StructuredDocumentation","src":"112:311:32","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":8605,"linearizedBaseContracts":[8605],"name":"Counters","nameLocation":"432:8:32","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":8537,"members":[{"constant":false,"id":8536,"mutability":"mutable","name":"_value","nameLocation":"794:6:32","nodeType":"VariableDeclaration","scope":8537,"src":"786:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8535,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:32","nodeType":"StructDefinition","scope":8605,"src":"447:374:32","visibility":"public"},{"body":{"id":8548,"nodeType":"Block","src":"901:38:32","statements":[{"expression":{"expression":{"id":8545,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8540,"src":"918:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":8546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:32","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8536,"src":"918:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8544,"id":8547,"nodeType":"Return","src":"911:21:32"}]},"id":8549,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:32","nodeType":"FunctionDefinition","parameters":{"id":8541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8540,"mutability":"mutable","name":"counter","nameLocation":"860:7:32","nodeType":"VariableDeclaration","scope":8549,"src":"844:23:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":8539,"nodeType":"UserDefinedTypeName","pathNode":{"id":8538,"name":"Counter","nameLocations":["844:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"844:7:32"},"referencedDeclaration":8537,"src":"844:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:32"},"returnParameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8549,"src":"892:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8542,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:32"},"scope":8605,"src":"827:112:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8562,"nodeType":"Block","src":"998:70:32","statements":[{"id":8561,"nodeType":"UncheckedBlock","src":"1008:54:32","statements":[{"expression":{"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8555,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"1032:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":8557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:32","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8536,"src":"1032:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8560,"nodeType":"ExpressionStatement","src":"1032:19:32"}]}]},"id":8563,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:32","nodeType":"FunctionDefinition","parameters":{"id":8553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8552,"mutability":"mutable","name":"counter","nameLocation":"980:7:32","nodeType":"VariableDeclaration","scope":8563,"src":"964:23:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":8551,"nodeType":"UserDefinedTypeName","pathNode":{"id":8550,"name":"Counter","nameLocations":["964:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"964:7:32"},"referencedDeclaration":8537,"src":"964:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:32"},"returnParameters":{"id":8554,"nodeType":"ParameterList","parameters":[],"src":"998:0:32"},"scope":8605,"src":"945:123:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8590,"nodeType":"Block","src":"1127:176:32","statements":[{"assignments":[8570],"declarations":[{"constant":false,"id":8570,"mutability":"mutable","name":"value","nameLocation":"1145:5:32","nodeType":"VariableDeclaration","scope":8590,"src":"1137:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8573,"initialValue":{"expression":{"id":8571,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"1153:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":8572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:32","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8536,"src":"1153:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"1185:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":8578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":8574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8580,"nodeType":"ExpressionStatement","src":"1177:49:32"},{"id":8589,"nodeType":"UncheckedBlock","src":"1236:61:32","statements":[{"expression":{"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8581,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"1260:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":8583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:32","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8536,"src":"1260:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"1277:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8588,"nodeType":"ExpressionStatement","src":"1260:26:32"}]}]},"id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:32","nodeType":"FunctionDefinition","parameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8566,"mutability":"mutable","name":"counter","nameLocation":"1109:7:32","nodeType":"VariableDeclaration","scope":8591,"src":"1093:23:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":8565,"nodeType":"UserDefinedTypeName","pathNode":{"id":8564,"name":"Counter","nameLocations":["1093:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"1093:7:32"},"referencedDeclaration":8537,"src":"1093:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:32"},"returnParameters":{"id":8568,"nodeType":"ParameterList","parameters":[],"src":"1127:0:32"},"scope":8605,"src":"1074:229:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8603,"nodeType":"Block","src":"1358:35:32","statements":[{"expression":{"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8597,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"1368:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":8599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:32","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8536,"src":"1368:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8602,"nodeType":"ExpressionStatement","src":"1368:18:32"}]},"id":8604,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:32","nodeType":"FunctionDefinition","parameters":{"id":8595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"counter","nameLocation":"1340:7:32","nodeType":"VariableDeclaration","scope":8604,"src":"1324:23:32","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":8593,"nodeType":"UserDefinedTypeName","pathNode":{"id":8592,"name":"Counter","nameLocations":["1324:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"1324:7:32"},"referencedDeclaration":8537,"src":"1324:7:32","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:32"},"returnParameters":{"id":8596,"nodeType":"ParameterList","parameters":[],"src":"1358:0:32"},"scope":8605,"src":"1309:84:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8606,"src":"424:971:32","usedErrors":[],"usedEvents":[]}],"src":"87:1309:32"}},"contracts/IProposalLogic.sol":{"id":33,"ast":{"absolutePath":"contracts/IProposalLogic.sol","exportedSymbols":{"IProposalLogic":[8781]},"id":8782,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8607,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"IProposalLogic","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8781,"linearizedBaseContracts":[8781],"name":"IProposalLogic","nameLocation":"74:14:33","nodeType":"ContractDefinition","nodes":[{"functionSelector":"47734892","id":8614,"implemented":false,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"107:14:33","nodeType":"FunctionDefinition","parameters":{"id":8610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8614,"src":"122:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8608,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"121:9:33"},"returnParameters":{"id":8613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8614,"src":"154:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8611,"name":"uint256","nodeType":"ElementaryTypeName","src":"154:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"153:9:33"},"scope":8781,"src":"98:65:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e16c790","id":8621,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVotingRights","nameLocation":"180:19:33","nodeType":"FunctionDefinition","parameters":{"id":8617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8616,"mutability":"mutable","name":"userAddress","nameLocation":"208:11:33","nodeType":"VariableDeclaration","scope":8621,"src":"200:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8615,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"199:21:33"},"returnParameters":{"id":8620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8621,"src":"244:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8618,"name":"uint256","nodeType":"ElementaryTypeName","src":"244:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"243:9:33"},"scope":8781,"src":"171:82:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b6b55f25","id":8626,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"274:7:33","nodeType":"FunctionDefinition","parameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8623,"mutability":"mutable","name":"amount","nameLocation":"290:6:33","nodeType":"VariableDeclaration","scope":8626,"src":"282:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8622,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"281:16:33"},"returnParameters":{"id":8625,"nodeType":"ParameterList","parameters":[],"src":"306:0:33"},"scope":8781,"src":"265:42:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbebdd25","id":8633,"implemented":false,"kind":"function","modifiers":[],"name":"submitProposalForReview","nameLocation":"361:23:33","nodeType":"FunctionDefinition","parameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8628,"mutability":"mutable","name":"amount","nameLocation":"393:6:33","nodeType":"VariableDeclaration","scope":8633,"src":"385:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8627,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"384:16:33"},"returnParameters":{"id":8632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8633,"src":"419:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8630,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"418:9:33"},"scope":8781,"src":"352:76:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3257917a","id":8647,"implemented":false,"kind":"function","modifiers":[],"name":"createProposalWithOptions","nameLocation":"493:25:33","nodeType":"FunctionDefinition","parameters":{"id":8643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8635,"mutability":"mutable","name":"proposalDescription","nameLocation":"543:19:33","nodeType":"VariableDeclaration","scope":8647,"src":"529:33:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8634,"name":"string","nodeType":"ElementaryTypeName","src":"529:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8638,"mutability":"mutable","name":"optionDescriptions","nameLocation":"589:18:33","nodeType":"VariableDeclaration","scope":8647,"src":"573:34:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8636,"name":"string","nodeType":"ElementaryTypeName","src":"573:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8637,"nodeType":"ArrayTypeName","src":"573:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8640,"mutability":"mutable","name":"amount","nameLocation":"623:6:33","nodeType":"VariableDeclaration","scope":8647,"src":"618:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8639,"name":"uint","nodeType":"ElementaryTypeName","src":"618:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8642,"mutability":"mutable","name":"endtime","nameLocation":"648:7:33","nodeType":"VariableDeclaration","scope":8647,"src":"640:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8641,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"518:144:33"},"returnParameters":{"id":8646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8647,"src":"681:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8644,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"680:9:33"},"scope":8781,"src":"484:206:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a46188ad","id":8665,"implemented":false,"kind":"function","modifiers":[],"name":"processUserStakedProposal","nameLocation":"752:25:33","nodeType":"FunctionDefinition","parameters":{"id":8661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8649,"mutability":"mutable","name":"userAddress","nameLocation":"796:11:33","nodeType":"VariableDeclaration","scope":8665,"src":"788:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8648,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8651,"mutability":"mutable","name":"proposalDescription","nameLocation":"832:19:33","nodeType":"VariableDeclaration","scope":8665,"src":"818:33:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8650,"name":"string","nodeType":"ElementaryTypeName","src":"818:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8653,"mutability":"mutable","name":"stakeAmount","nameLocation":"870:11:33","nodeType":"VariableDeclaration","scope":8665,"src":"862:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8652,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8656,"mutability":"mutable","name":"optionDescriptions","nameLocation":"908:18:33","nodeType":"VariableDeclaration","scope":8665,"src":"892:34:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8654,"name":"string","nodeType":"ElementaryTypeName","src":"892:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8655,"nodeType":"ArrayTypeName","src":"892:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8658,"mutability":"mutable","name":"stakeIndex","nameLocation":"945:10:33","nodeType":"VariableDeclaration","scope":8665,"src":"937:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8660,"mutability":"mutable","name":"endtime","nameLocation":"974:7:33","nodeType":"VariableDeclaration","scope":8665,"src":"966:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8659,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:211:33"},"returnParameters":{"id":8664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8665,"src":"1007:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:9:33"},"scope":8781,"src":"743:273:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":8670,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1068:8:33","nodeType":"FunctionDefinition","parameters":{"id":8668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8667,"mutability":"mutable","name":"_amount","nameLocation":"1085:7:33","nodeType":"VariableDeclaration","scope":8670,"src":"1077:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1076:17:33"},"returnParameters":{"id":8669,"nodeType":"ParameterList","parameters":[],"src":"1102:0:33"},"scope":8781,"src":"1059:44:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bcfc4429","id":8677,"implemented":false,"kind":"function","modifiers":[],"name":"getAvailableWithdrawBalance","nameLocation":"1176:27:33","nodeType":"FunctionDefinition","parameters":{"id":8673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8672,"mutability":"mutable","name":"user","nameLocation":"1222:4:33","nodeType":"VariableDeclaration","scope":8677,"src":"1214:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8671,"name":"address","nodeType":"ElementaryTypeName","src":"1214:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1203:30:33"},"returnParameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8677,"src":"1257:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1256:9:33"},"scope":8781,"src":"1167:99:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"401853b7","id":8684,"implemented":false,"kind":"function","modifiers":[],"name":"getProposalStatus","nameLocation":"1322:17:33","nodeType":"FunctionDefinition","parameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"_proposalId","nameLocation":"1358:11:33","nodeType":"VariableDeclaration","scope":8684,"src":"1350:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1339:37:33"},"returnParameters":{"id":8683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8684,"src":"1400:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8681,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1399:6:33"},"scope":8781,"src":"1313:93:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8a6655d6","id":8693,"implemented":false,"kind":"function","modifiers":[],"name":"vote","nameLocation":"1459:4:33","nodeType":"FunctionDefinition","parameters":{"id":8691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8686,"mutability":"mutable","name":"_proposalId","nameLocation":"1482:11:33","nodeType":"VariableDeclaration","scope":8693,"src":"1474:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8688,"mutability":"mutable","name":"_optionId","nameLocation":"1512:9:33","nodeType":"VariableDeclaration","scope":8693,"src":"1504:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8690,"mutability":"mutable","name":"_amount","nameLocation":"1540:7:33","nodeType":"VariableDeclaration","scope":8693,"src":"1532:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1463:91:33"},"returnParameters":{"id":8692,"nodeType":"ParameterList","parameters":[],"src":"1563:0:33"},"scope":8781,"src":"1450:114:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f9fb98a","id":8698,"implemented":false,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"1616:18:33","nodeType":"FunctionDefinition","parameters":{"id":8694,"nodeType":"ParameterList","parameters":[],"src":"1634:2:33"},"returnParameters":{"id":8697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8698,"src":"1660:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8695,"name":"uint","nodeType":"ElementaryTypeName","src":"1660:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1659:6:33"},"scope":8781,"src":"1607:59:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8456cb59","id":8701,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"1710:5:33","nodeType":"FunctionDefinition","parameters":{"id":8699,"nodeType":"ParameterList","parameters":[],"src":"1715:2:33"},"returnParameters":{"id":8700,"nodeType":"ParameterList","parameters":[],"src":"1726:0:33"},"scope":8781,"src":"1701:26:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3f4ba83a","id":8704,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"1773:7:33","nodeType":"FunctionDefinition","parameters":{"id":8702,"nodeType":"ParameterList","parameters":[],"src":"1780:2:33"},"returnParameters":{"id":8703,"nodeType":"ParameterList","parameters":[],"src":"1791:0:33"},"scope":8781,"src":"1764:28:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0ff7c4a5","id":8718,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVotingHistory","nameLocation":"1845:20:33","nodeType":"FunctionDefinition","parameters":{"id":8707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8706,"mutability":"mutable","name":"_user","nameLocation":"1884:5:33","nodeType":"VariableDeclaration","scope":8718,"src":"1876:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8705,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1865:31:33"},"returnParameters":{"id":8717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8718,"src":"1947:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8709,"nodeType":"ArrayTypeName","src":"1947:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8718,"src":"1965:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1965:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8712,"nodeType":"ArrayTypeName","src":"1965:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8718,"src":"1983:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8715,"nodeType":"ArrayTypeName","src":"1983:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1946:54:33"},"scope":8781,"src":"1836:165:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"44c7c867","id":8723,"implemented":false,"kind":"function","modifiers":[],"name":"proposalsLength","nameLocation":"2064:15:33","nodeType":"FunctionDefinition","parameters":{"id":8719,"nodeType":"ParameterList","parameters":[],"src":"2079:2:33"},"returnParameters":{"id":8722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8723,"src":"2105:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2104:9:33"},"scope":8781,"src":"2055:59:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"517a6257","id":8730,"implemented":false,"kind":"function","modifiers":[],"name":"getOptionsCount","nameLocation":"2180:15:33","nodeType":"FunctionDefinition","parameters":{"id":8726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8725,"mutability":"mutable","name":"proposalId","nameLocation":"2214:10:33","nodeType":"VariableDeclaration","scope":8730,"src":"2206:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2195:36:33"},"returnParameters":{"id":8729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8730,"src":"2255:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2255:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2254:9:33"},"scope":8781,"src":"2171:93:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"63e9a61d","id":8739,"implemented":false,"kind":"function","modifiers":[],"name":"getOptionVoteCount","nameLocation":"2336:18:33","nodeType":"FunctionDefinition","parameters":{"id":8735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8732,"mutability":"mutable","name":"proposalId","nameLocation":"2373:10:33","nodeType":"VariableDeclaration","scope":8739,"src":"2365:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8734,"mutability":"mutable","name":"optionIndex","nameLocation":"2402:11:33","nodeType":"VariableDeclaration","scope":8739,"src":"2394:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2354:66:33"},"returnParameters":{"id":8738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8739,"src":"2444:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2444:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2443:9:33"},"scope":8781,"src":"2327:126:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe10226d","id":8744,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentProposalId","nameLocation":"2513:20:33","nodeType":"FunctionDefinition","parameters":{"id":8740,"nodeType":"ParameterList","parameters":[],"src":"2533:2:33"},"returnParameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8744,"src":"2559:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2558:9:33"},"scope":8781,"src":"2504:64:33","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc4d6345","id":8753,"implemented":false,"kind":"function","modifiers":[],"name":"handleStakeRelease","nameLocation":"2617:18:33","nodeType":"FunctionDefinition","parameters":{"id":8751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8746,"mutability":"mutable","name":"user","nameLocation":"2654:4:33","nodeType":"VariableDeclaration","scope":8753,"src":"2646:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8745,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8748,"mutability":"mutable","name":"stakeIndex","nameLocation":"2677:10:33","nodeType":"VariableDeclaration","scope":8753,"src":"2669:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8750,"mutability":"mutable","name":"penalizeStake","nameLocation":"2703:13:33","nodeType":"VariableDeclaration","scope":8753,"src":"2698:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8749,"name":"bool","nodeType":"ElementaryTypeName","src":"2698:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2635:88:33"},"returnParameters":{"id":8752,"nodeType":"ParameterList","parameters":[],"src":"2732:0:33"},"scope":8781,"src":"2608:125:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e13b7b31","id":8760,"implemented":false,"kind":"function","modifiers":[],"name":"settleRewards","nameLocation":"2773:13:33","nodeType":"FunctionDefinition","parameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8755,"mutability":"mutable","name":"proposalId","nameLocation":"2805:10:33","nodeType":"VariableDeclaration","scope":8760,"src":"2797:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2797:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8757,"mutability":"mutable","name":"winningOptionId","nameLocation":"2834:15:33","nodeType":"VariableDeclaration","scope":8760,"src":"2826:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2826:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2786:70:33"},"returnParameters":{"id":8759,"nodeType":"ParameterList","parameters":[],"src":"2865:0:33"},"scope":8781,"src":"2764:102:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9d678da1","id":8765,"implemented":false,"kind":"function","modifiers":[],"name":"settleFundsForAverageQuality","nameLocation":"2928:28:33","nodeType":"FunctionDefinition","parameters":{"id":8763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8762,"mutability":"mutable","name":"_proposalId","nameLocation":"2965:11:33","nodeType":"VariableDeclaration","scope":8765,"src":"2957:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2957:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2956:21:33"},"returnParameters":{"id":8764,"nodeType":"ParameterList","parameters":[],"src":"2986:0:33"},"scope":8781,"src":"2919:68:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a24f8bd5","id":8770,"implemented":false,"kind":"function","modifiers":[],"name":"verifyComplianceAndExpectations","nameLocation":"3047:31:33","nodeType":"FunctionDefinition","parameters":{"id":8768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8767,"mutability":"mutable","name":"_proposalId","nameLocation":"3097:11:33","nodeType":"VariableDeclaration","scope":8770,"src":"3089:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3089:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:37:33"},"returnParameters":{"id":8769,"nodeType":"ParameterList","parameters":[],"src":"3124:0:33"},"scope":8781,"src":"3038:87:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"df63ba91","id":8775,"implemented":false,"kind":"function","modifiers":[],"name":"checkQualityComplianceBelowExpectations","nameLocation":"3204:39:33","nodeType":"FunctionDefinition","parameters":{"id":8773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8772,"mutability":"mutable","name":"_proposalId","nameLocation":"3262:11:33","nodeType":"VariableDeclaration","scope":8775,"src":"3254:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3254:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3243:37:33"},"returnParameters":{"id":8774,"nodeType":"ParameterList","parameters":[],"src":"3289:0:33"},"scope":8781,"src":"3195:95:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6bff47e6","id":8780,"implemented":false,"kind":"function","modifiers":[],"name":"deactivateProposal","nameLocation":"3337:18:33","nodeType":"FunctionDefinition","parameters":{"id":8778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8777,"mutability":"mutable","name":"_proposalId","nameLocation":"3364:11:33","nodeType":"VariableDeclaration","scope":8780,"src":"3356:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3355:21:33"},"returnParameters":{"id":8779,"nodeType":"ParameterList","parameters":[],"src":"3385:0:33"},"scope":8781,"src":"3328:58:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8782,"src":"63:3326:33","usedErrors":[],"usedEvents":[]}],"src":"33:3358:33"}},"contracts/ProposalLogic.sol":{"id":34,"ast":{"absolutePath":"contracts/ProposalLogic.sol","exportedSymbols":{"Checkpoints":[8256],"Context":[2285],"Counters":[8605],"ECDSA":[3469],"EIP712":[3696],"ERC20":[1539],"ERC20Burnable":[1663],"ERC20FlashMint":[1907],"ERC20Permit":[2061],"ERC20Votes":[2193],"IERC20":[1617],"IERC20Errors":[929],"IERC20Metadata":[2219],"IERC20Permit":[2255],"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836],"IProposalLogic":[8781],"Math":[4824],"Nonces":[2353],"Ownable":[147],"Pausable":[2470],"ProposalLogic":[10658],"ReentrancyGuard":[2539],"Votes":[777]},"id":10659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8783,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:34"},{"absolutePath":"contracts/IProposalLogic.sol","file":"./IProposalLogic.sol","id":8784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":8782,"src":"59:30:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":1618,"src":"91:56:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":8786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":4825,"src":"149:53:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":2540,"src":"204:59:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":2471,"src":"265:52:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":148,"src":"319:52:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":1540,"src":"373:55:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":8791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":1664,"src":"430:74:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":148,"src":"506:52:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":2062,"src":"560:72:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":8794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":2194,"src":"634:71:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","id":8795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":1908,"src":"707:75:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Counters.sol","file":"./Counters.sol","id":8796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10659,"sourceUnit":8606,"src":"784:24:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8797,"name":"IProposalLogic","nameLocations":["838:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":8781,"src":"838:14:34"},"id":8798,"nodeType":"InheritanceSpecifier","src":"838:14:34"},{"baseName":{"id":8799,"name":"ReentrancyGuard","nameLocations":["854:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":2539,"src":"854:15:34"},"id":8800,"nodeType":"InheritanceSpecifier","src":"854:15:34"},{"baseName":{"id":8801,"name":"Pausable","nameLocations":["871:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"871:8:34"},"id":8802,"nodeType":"InheritanceSpecifier","src":"871:8:34"},{"baseName":{"id":8803,"name":"Ownable","nameLocations":["881:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"881:7:34"},"id":8804,"nodeType":"InheritanceSpecifier","src":"881:7:34"}],"canonicalName":"ProposalLogic","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10658,"linearizedBaseContracts":[10658,147,2470,2285,2539,8781],"name":"ProposalLogic","nameLocation":"821:13:34","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ProposalLogic.Proposal","id":8819,"members":[{"constant":false,"id":8806,"mutability":"mutable","name":"proposer","nameLocation":"967:8:34","nodeType":"VariableDeclaration","scope":8819,"src":"959:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8805,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8808,"mutability":"mutable","name":"description","nameLocation":"1012:11:34","nodeType":"VariableDeclaration","scope":8819,"src":"1005:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8807,"name":"string","nodeType":"ElementaryTypeName","src":"1005:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8810,"mutability":"mutable","name":"stakeAmount","nameLocation":"1058:11:34","nodeType":"VariableDeclaration","scope":8819,"src":"1050:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8812,"mutability":"mutable","name":"active","nameLocation":"1107:6:34","nodeType":"VariableDeclaration","scope":8819,"src":"1102:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8811,"name":"bool","nodeType":"ElementaryTypeName","src":"1102:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8814,"mutability":"mutable","name":"isSettled","nameLocation":"1151:9:34","nodeType":"VariableDeclaration","scope":8819,"src":"1146:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8813,"name":"bool","nodeType":"ElementaryTypeName","src":"1146:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8816,"mutability":"mutable","name":"isWagered","nameLocation":"1222:9:34","nodeType":"VariableDeclaration","scope":8819,"src":"1217:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8815,"name":"bool","nodeType":"ElementaryTypeName","src":"1217:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8818,"mutability":"mutable","name":"endTime","nameLocation":"1250:7:34","nodeType":"VariableDeclaration","scope":8819,"src":"1242:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1242:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"939:8:34","nodeType":"StructDefinition","scope":10658,"src":"932:333:34","visibility":"public"},{"canonicalName":"ProposalLogic.Option","id":8824,"members":[{"constant":false,"id":8821,"mutability":"mutable","name":"description","nameLocation":"1324:11:34","nodeType":"VariableDeclaration","scope":8824,"src":"1317:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8820,"name":"string","nodeType":"ElementaryTypeName","src":"1317:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8823,"mutability":"mutable","name":"voteCount","nameLocation":"1370:9:34","nodeType":"VariableDeclaration","scope":8824,"src":"1362:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Option","nameLocation":"1299:6:34","nodeType":"StructDefinition","scope":10658,"src":"1292:111:34","visibility":"public"},{"canonicalName":"ProposalLogic.Stake","id":8833,"members":[{"constant":false,"id":8826,"mutability":"mutable","name":"amount","nameLocation":"1456:6:34","nodeType":"VariableDeclaration","scope":8833,"src":"1448:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8828,"mutability":"mutable","name":"unlockTime","nameLocation":"1500:10:34","nodeType":"VariableDeclaration","scope":8833,"src":"1492:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8830,"mutability":"mutable","name":"staker","nameLocation":"1554:6:34","nodeType":"VariableDeclaration","scope":8833,"src":"1546:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8829,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8832,"mutability":"mutable","name":"isWagered","nameLocation":"1595:9:34","nodeType":"VariableDeclaration","scope":8833,"src":"1590:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8831,"name":"bool","nodeType":"ElementaryTypeName","src":"1590:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Stake","nameLocation":"1431:5:34","nodeType":"StructDefinition","scope":10658,"src":"1424:203:34","visibility":"public"},{"canonicalName":"ProposalLogic.VoteRecord","id":8840,"members":[{"constant":false,"id":8835,"mutability":"mutable","name":"proposalId","nameLocation":"1691:10:34","nodeType":"VariableDeclaration","scope":8840,"src":"1683:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8837,"mutability":"mutable","name":"optionId","nameLocation":"1732:8:34","nodeType":"VariableDeclaration","scope":8840,"src":"1724:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8839,"mutability":"mutable","name":"amount","nameLocation":"1786:6:34","nodeType":"VariableDeclaration","scope":8840,"src":"1778:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VoteRecord","nameLocation":"1661:10:34","nodeType":"StructDefinition","scope":10658,"src":"1654:162:34","visibility":"public"},{"constant":true,"id":8847,"mutability":"constant","name":"MAX_UINT256","nameLocation":"1860:11:34","nodeType":"VariableDeclaration","scope":10658,"src":"1843:48:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1843:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":8844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1879:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8842,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1874:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1888:3:34","memberName":"max","nodeType":"MemberAccess","src":"1874:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"b8fcf937","id":8849,"mutability":"mutable","name":"myToken","nameLocation":"1913:7:34","nodeType":"VariableDeclaration","scope":10658,"src":"1898:22:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8848,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"global":false,"id":8853,"libraryName":{"id":8850,"name":"Counters","nameLocations":["1964:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8605,"src":"1964:8:34"},"nodeType":"UsingForDirective","src":"1958:36:34","typeName":{"id":8852,"nodeType":"UserDefinedTypeName","pathNode":{"id":8851,"name":"Counters.Counter","nameLocations":["1977:8:34","1986:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"1977:16:34"},"referencedDeclaration":8537,"src":"1977:16:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":8856,"mutability":"mutable","name":"_proposalIds","nameLocation":"2025:12:34","nodeType":"VariableDeclaration","scope":10658,"src":"2000:37:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter"},"typeName":{"id":8855,"nodeType":"UserDefinedTypeName","pathNode":{"id":8854,"name":"Counters.Counter","nameLocations":["2000:8:34","2009:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"2000:16:34"},"referencedDeclaration":8537,"src":"2000:16:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":8859,"mutability":"mutable","name":"_UserStakeIdCounter","nameLocation":"2069:19:34","nodeType":"VariableDeclaration","scope":10658,"src":"2044:44:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter"},"typeName":{"id":8858,"nodeType":"UserDefinedTypeName","pathNode":{"id":8857,"name":"Counters.Counter","nameLocations":["2044:8:34","2053:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":8537,"src":"2044:16:34"},"referencedDeclaration":8537,"src":"2044:16:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"48e395a3","id":8862,"mutability":"mutable","name":"UserStakerAddresses","nameLocation":"2152:19:34","nodeType":"VariableDeclaration","scope":10658,"src":"2135:36:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8860,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8861,"nodeType":"ArrayTypeName","src":"2135:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ed4516c9","id":8865,"mutability":"mutable","name":"UserSstakeAmounts","nameLocation":"2220:17:34","nodeType":"VariableDeclaration","scope":10658,"src":"2203:34:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":8863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8864,"nodeType":"ArrayTypeName","src":"2203:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":8869,"mutability":"mutable","name":"proposals","nameLocation":"2262:9:34","nodeType":"VariableDeclaration","scope":10658,"src":"2244:27:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal[]"},"typeName":{"baseType":{"id":8867,"nodeType":"UserDefinedTypeName","pathNode":{"id":8866,"name":"Proposal","nameLocations":["2244:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"2244:8:34"},"referencedDeclaration":8819,"src":"2244:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"id":8868,"nodeType":"ArrayTypeName","src":"2244:10:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.Proposal[]"}},"visibility":"public"},{"constant":false,"functionSelector":"0f174002","id":8873,"mutability":"mutable","name":"votingEndTimes","nameLocation":"2331:14:34","nodeType":"VariableDeclaration","scope":10658,"src":"2296:49:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8872,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2304:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2296:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":8877,"mutability":"mutable","name":"balances","nameLocation":"2409:8:34","nodeType":"VariableDeclaration","scope":10658,"src":"2374:43:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8876,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8874,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2374:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2393:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ab89437c","id":8882,"mutability":"mutable","name":"proposalVoters","nameLocation":"2461:14:34","nodeType":"VariableDeclaration","scope":10658,"src":"2424:51:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":8881,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2432:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2424:29:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8879,"name":"address","nodeType":"ElementaryTypeName","src":"2443:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8880,"nodeType":"ArrayTypeName","src":"2443:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"23ee36bb","id":8888,"mutability":"mutable","name":"userVotingHistory","nameLocation":"2522:17:34","nodeType":"VariableDeclaration","scope":10658,"src":"2482:57:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.VoteRecord[])"},"typeName":{"id":8887,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8883,"name":"address","nodeType":"ElementaryTypeName","src":"2490:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2482:32:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.VoteRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8885,"nodeType":"UserDefinedTypeName","pathNode":{"id":8884,"name":"VoteRecord","nameLocations":["2501:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":8840,"src":"2501:10:34"},"referencedDeclaration":8840,"src":"2501:10:34","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_storage_ptr","typeString":"struct ProposalLogic.VoteRecord"}},"id":8886,"nodeType":"ArrayTypeName","src":"2501:12:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f4c5bdf","id":8894,"mutability":"mutable","name":"stakesForUser","nameLocation":"2618:13:34","nodeType":"VariableDeclaration","scope":10658,"src":"2583:48:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$8833_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.Stake[])"},"typeName":{"id":8893,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8889,"name":"address","nodeType":"ElementaryTypeName","src":"2591:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2583:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$8833_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.Stake[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8891,"nodeType":"UserDefinedTypeName","pathNode":{"id":8890,"name":"Stake","nameLocations":["2602:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":8833,"src":"2602:5:34"},"referencedDeclaration":8833,"src":"2602:5:34","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$8833_storage_ptr","typeString":"struct ProposalLogic.Stake"}},"id":8892,"nodeType":"ArrayTypeName","src":"2602:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$8833_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.Stake[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a93b4ba1","id":8900,"mutability":"mutable","name":"proposalOptions","nameLocation":"2674:15:34","nodeType":"VariableDeclaration","scope":10658,"src":"2638:51:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option[])"},"typeName":{"id":8899,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2638:28:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8897,"nodeType":"UserDefinedTypeName","pathNode":{"id":8896,"name":"Option","nameLocations":["2657:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":8824,"src":"2657:6:34"},"referencedDeclaration":8824,"src":"2657:6:34","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_storage_ptr","typeString":"struct ProposalLogic.Option"}},"id":8898,"nodeType":"ArrayTypeName","src":"2657:8:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.Option[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c134d66","id":8906,"mutability":"mutable","name":"voters","nameLocation":"2784:6:34","nodeType":"VariableDeclaration","scope":10658,"src":"2732:58:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":8905,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8901,"name":"address","nodeType":"ElementaryTypeName","src":"2740:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2732:44:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8904,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2751:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8903,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"dd5c0da2","id":8910,"mutability":"mutable","name":"proposalTokenDeposits","nameLocation":"2871:21:34","nodeType":"VariableDeclaration","scope":10658,"src":"2836:56:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8909,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8907,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2836:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"1940278f","id":8914,"mutability":"mutable","name":"usedVotingRights","nameLocation":"2964:16:34","nodeType":"VariableDeclaration","scope":10658,"src":"2929:51:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8913,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8911,"name":"address","nodeType":"ElementaryTypeName","src":"2937:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2929:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"3a3ddd91","id":8920,"mutability":"mutable","name":"votingRecords","nameLocation":"3042:13:34","nodeType":"VariableDeclaration","scope":10658,"src":"2987:68:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":8919,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8915,"name":"address","nodeType":"ElementaryTypeName","src":"2995:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2987:47:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8918,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"3014:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3006:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"44daa227","id":8926,"mutability":"mutable","name":"added_proposal","nameLocation":"3117:14:34","nodeType":"VariableDeclaration","scope":10658,"src":"3062:69:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":8925,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8921,"name":"address","nodeType":"ElementaryTypeName","src":"3070:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3062:47:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8924,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3089:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3081:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8923,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"eda0b804","id":8931,"mutability":"mutable","name":"voterAddressesByProposal","nameLocation":"3175:24:34","nodeType":"VariableDeclaration","scope":10658,"src":"3138:61:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":8930,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3138:29:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8928,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8929,"nodeType":"ArrayTypeName","src":"3157:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"e2b239c8","id":8936,"mutability":"mutable","name":"optionIdsByProposal","nameLocation":"3243:19:34","nodeType":"VariableDeclaration","scope":10658,"src":"3206:56:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":8935,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8932,"name":"uint256","nodeType":"ElementaryTypeName","src":"3214:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3206:29:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8934,"nodeType":"ArrayTypeName","src":"3225:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a9bc3711","id":8941,"mutability":"mutable","name":"voteCountsByProposal","nameLocation":"3306:20:34","nodeType":"VariableDeclaration","scope":10658,"src":"3269:57:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":8940,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3277:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3269:29:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3288:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8939,"nodeType":"ArrayTypeName","src":"3288:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"f496baa0","id":8947,"mutability":"mutable","name":"voterIndexInProposal","nameLocation":"3388:20:34","nodeType":"VariableDeclaration","scope":10658,"src":"3333:75:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":8946,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8942,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3333:47:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8945,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3360:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3352:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3371:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"59e04c3f0d44b7caf6e8ef854b61d9a51cf1960d7a88ff6356cc5e946b4b5832","id":8955,"name":"Received","nameLocation":"3437:8:34","nodeType":"EventDefinition","parameters":{"id":8954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8949,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"3454:6:34","nodeType":"VariableDeclaration","scope":8955,"src":"3446:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8948,"name":"address","nodeType":"ElementaryTypeName","src":"3446:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8951,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3467:6:34","nodeType":"VariableDeclaration","scope":8955,"src":"3462:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8950,"name":"uint","nodeType":"ElementaryTypeName","src":"3462:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8953,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"3482:7:34","nodeType":"VariableDeclaration","scope":8955,"src":"3475:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8952,"name":"string","nodeType":"ElementaryTypeName","src":"3475:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3445:45:34"},"src":"3431:60:34"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":8961,"name":"Deposited","nameLocation":"3503:9:34","nodeType":"EventDefinition","parameters":{"id":8960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3529:4:34","nodeType":"VariableDeclaration","scope":8961,"src":"3513:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8956,"name":"address","nodeType":"ElementaryTypeName","src":"3513:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8959,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3540:6:34","nodeType":"VariableDeclaration","scope":8961,"src":"3535:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8958,"name":"uint","nodeType":"ElementaryTypeName","src":"3535:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3512:35:34"},"src":"3497:51:34"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":8967,"name":"Withdrawn","nameLocation":"3560:9:34","nodeType":"EventDefinition","parameters":{"id":8966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8963,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3586:4:34","nodeType":"VariableDeclaration","scope":8967,"src":"3570:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8962,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8965,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3597:6:34","nodeType":"VariableDeclaration","scope":8967,"src":"3592:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8964,"name":"uint","nodeType":"ElementaryTypeName","src":"3592:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3569:35:34"},"src":"3554:51:34"},{"anonymous":false,"eventSelector":"c32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3","id":8977,"name":"Voted","nameLocation":"3617:5:34","nodeType":"EventDefinition","parameters":{"id":8976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8969,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"3649:8:34","nodeType":"VariableDeclaration","scope":8977,"src":"3633:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8968,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8971,"indexed":true,"mutability":"mutable","name":"_proposalId","nameLocation":"3684:11:34","nodeType":"VariableDeclaration","scope":8977,"src":"3668:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3668:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8973,"indexed":true,"mutability":"mutable","name":"_optionId","nameLocation":"3722:9:34","nodeType":"VariableDeclaration","scope":8977,"src":"3706:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8972,"name":"uint256","nodeType":"ElementaryTypeName","src":"3706:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8975,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"3750:7:34","nodeType":"VariableDeclaration","scope":8977,"src":"3742:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3742:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3622:142:34"},"src":"3611:154:34"},{"anonymous":false,"eventSelector":"ea966a8f7bfdedb35590510f87f503b52990ecf99d780380ad04545ee72b9b73","id":8990,"name":"ProposalAndOptionsSubmitted","nameLocation":"3777:27:34","nodeType":"EventDefinition","parameters":{"id":8989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8979,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3831:4:34","nodeType":"VariableDeclaration","scope":8990,"src":"3815:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8978,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8981,"indexed":true,"mutability":"mutable","name":"proposalIndex","nameLocation":"3862:13:34","nodeType":"VariableDeclaration","scope":8990,"src":"3846:29:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3846:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8983,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"3893:19:34","nodeType":"VariableDeclaration","scope":8990,"src":"3886:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8982,"name":"string","nodeType":"ElementaryTypeName","src":"3886:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8986,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"3932:18:34","nodeType":"VariableDeclaration","scope":8990,"src":"3923:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8984,"name":"string","nodeType":"ElementaryTypeName","src":"3923:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8985,"nodeType":"ArrayTypeName","src":"3923:8:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8988,"indexed":false,"mutability":"mutable","name":"endtime","nameLocation":"3969:7:34","nodeType":"VariableDeclaration","scope":8990,"src":"3961:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:179:34"},"src":"3771:213:34"},{"anonymous":false,"eventSelector":"5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085","id":9002,"name":"DepositForProposal","nameLocation":"3996:18:34","nodeType":"EventDefinition","parameters":{"id":9001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8992,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"4041:6:34","nodeType":"VariableDeclaration","scope":9002,"src":"4025:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8991,"name":"address","nodeType":"ElementaryTypeName","src":"4025:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8994,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4066:6:34","nodeType":"VariableDeclaration","scope":9002,"src":"4058:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8996,"indexed":false,"mutability":"mutable","name":"staked","nameLocation":"4088:6:34","nodeType":"VariableDeclaration","scope":9002,"src":"4083:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8995,"name":"bool","nodeType":"ElementaryTypeName","src":"4083:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8998,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"4113:10:34","nodeType":"VariableDeclaration","scope":9002,"src":"4105:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4105:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9000,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"4150:10:34","nodeType":"VariableDeclaration","scope":9002,"src":"4134:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4134:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:153:34"},"src":"3990:178:34"},{"anonymous":false,"eventSelector":"9851629be966df862ee0cfd4f2544aed401a8672ab1fee2cb3bc8a89a44953e0","id":9010,"name":"TokensStaked","nameLocation":"4180:12:34","nodeType":"EventDefinition","parameters":{"id":9009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9004,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4219:4:34","nodeType":"VariableDeclaration","scope":9010,"src":"4203:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9003,"name":"address","nodeType":"ElementaryTypeName","src":"4203:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9006,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4242:6:34","nodeType":"VariableDeclaration","scope":9010,"src":"4234:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9005,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9008,"indexed":false,"mutability":"mutable","name":"isForProposal","nameLocation":"4264:13:34","nodeType":"VariableDeclaration","scope":9010,"src":"4259:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9007,"name":"bool","nodeType":"ElementaryTypeName","src":"4259:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4192:92:34"},"src":"4174:111:34"},{"anonymous":false,"eventSelector":"465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8","id":9018,"name":"FundsSettledForAverageQuality","nameLocation":"4297:29:34","nodeType":"EventDefinition","parameters":{"id":9017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"4353:10:34","nodeType":"VariableDeclaration","scope":9018,"src":"4337:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9011,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9014,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"4390:8:34","nodeType":"VariableDeclaration","scope":9018,"src":"4374:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9013,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9016,"indexed":false,"mutability":"mutable","name":"amountToReturn","nameLocation":"4417:14:34","nodeType":"VariableDeclaration","scope":9018,"src":"4409:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9015,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:112:34"},"src":"4291:148:34"},{"anonymous":false,"eventSelector":"55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c","id":9026,"name":"WithdrawalDetailed","nameLocation":"4451:18:34","nodeType":"EventDefinition","parameters":{"id":9025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9020,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4496:4:34","nodeType":"VariableDeclaration","scope":9026,"src":"4480:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9019,"name":"address","nodeType":"ElementaryTypeName","src":"4480:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9022,"indexed":false,"mutability":"mutable","name":"amountWithdrawn","nameLocation":"4519:15:34","nodeType":"VariableDeclaration","scope":9026,"src":"4511:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9024,"indexed":false,"mutability":"mutable","name":"balanceAfterWithdrawal","nameLocation":"4553:22:34","nodeType":"VariableDeclaration","scope":9026,"src":"4545:30:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9023,"name":"uint256","nodeType":"ElementaryTypeName","src":"4545:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4469:113:34"},"src":"4445:138:34"},{"anonymous":false,"eventSelector":"72dfc6aae5d2371c5da47f722fc615b78f5b0fa713798ff2ad1ff40ec149c809","id":9034,"name":"UnlockTimeUpdated","nameLocation":"4595:17:34","nodeType":"EventDefinition","parameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9028,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"4639:6:34","nodeType":"VariableDeclaration","scope":9034,"src":"4623:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9027,"name":"address","nodeType":"ElementaryTypeName","src":"4623:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9030,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"4672:10:34","nodeType":"VariableDeclaration","scope":9034,"src":"4656:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9029,"name":"uint256","nodeType":"ElementaryTypeName","src":"4656:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9032,"indexed":false,"mutability":"mutable","name":"newUnlockTime","nameLocation":"4701:13:34","nodeType":"VariableDeclaration","scope":9034,"src":"4693:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9031,"name":"uint256","nodeType":"ElementaryTypeName","src":"4693:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4612:109:34"},"src":"4589:133:34"},{"anonymous":false,"eventSelector":"ddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368","id":9042,"name":"FundsPenalizedForNonCompliance","nameLocation":"4734:30:34","nodeType":"EventDefinition","parameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9036,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"4791:10:34","nodeType":"VariableDeclaration","scope":9042,"src":"4775:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4775:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9038,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"4828:8:34","nodeType":"VariableDeclaration","scope":9042,"src":"4812:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9037,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9040,"indexed":false,"mutability":"mutable","name":"penalty","nameLocation":"4855:7:34","nodeType":"VariableDeclaration","scope":9042,"src":"4847:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9039,"name":"uint256","nodeType":"ElementaryTypeName","src":"4847:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4764:105:34"},"src":"4728:142:34"},{"anonymous":false,"eventSelector":"68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f","id":9048,"name":"ProposalStatusChanged","nameLocation":"4882:21:34","nodeType":"EventDefinition","parameters":{"id":9047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9044,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"4912:10:34","nodeType":"VariableDeclaration","scope":9048,"src":"4904:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4904:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9046,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"4929:8:34","nodeType":"VariableDeclaration","scope":9048,"src":"4924:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9045,"name":"bool","nodeType":"ElementaryTypeName","src":"4924:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4903:35:34"},"src":"4876:63:34"},{"anonymous":false,"eventSelector":"9881fec5d892a663ff01483c3d9ea7c153c2ca7ca7fcd7eac040e32f792700ec","id":9054,"name":"ProposalEndTime","nameLocation":"4951:15:34","nodeType":"EventDefinition","parameters":{"id":9053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9050,"indexed":false,"mutability":"mutable","name":"_proposalId","nameLocation":"4975:11:34","nodeType":"VariableDeclaration","scope":9054,"src":"4967:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4967:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9052,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"4996:7:34","nodeType":"VariableDeclaration","scope":9054,"src":"4988:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4988:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4966:38:34"},"src":"4945:60:34"},{"anonymous":false,"eventSelector":"66f49d52069f7740a610f503527e90cfb04b8d7218d20d9fe7a5d3e246ea8653","id":9069,"name":"ProposalForUser","nameLocation":"5017:15:34","nodeType":"EventDefinition","parameters":{"id":9068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9056,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"5059:11:34","nodeType":"VariableDeclaration","scope":9069,"src":"5043:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9055,"name":"address","nodeType":"ElementaryTypeName","src":"5043:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9058,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"5097:10:34","nodeType":"VariableDeclaration","scope":9069,"src":"5081:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9057,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9060,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"5125:19:34","nodeType":"VariableDeclaration","scope":9069,"src":"5118:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9059,"name":"string","nodeType":"ElementaryTypeName","src":"5118:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9062,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"5163:11:34","nodeType":"VariableDeclaration","scope":9069,"src":"5155:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9061,"name":"uint256","nodeType":"ElementaryTypeName","src":"5155:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9065,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"5194:18:34","nodeType":"VariableDeclaration","scope":9069,"src":"5185:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9063,"name":"string","nodeType":"ElementaryTypeName","src":"5185:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9064,"nodeType":"ArrayTypeName","src":"5185:8:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":9067,"indexed":false,"mutability":"mutable","name":"endtime","nameLocation":"5231:7:34","nodeType":"VariableDeclaration","scope":9069,"src":"5223:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5223:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5032:213:34"},"src":"5011:235:34"},{"anonymous":false,"eventSelector":"a793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab","id":9079,"name":"StakeReleased","nameLocation":"5258:13:34","nodeType":"EventDefinition","parameters":{"id":9078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9071,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5298:4:34","nodeType":"VariableDeclaration","scope":9079,"src":"5282:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9070,"name":"address","nodeType":"ElementaryTypeName","src":"5282:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9073,"indexed":false,"mutability":"mutable","name":"stakeIndex","nameLocation":"5321:10:34","nodeType":"VariableDeclaration","scope":9079,"src":"5313:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5313:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9075,"indexed":false,"mutability":"mutable","name":"penalized","nameLocation":"5347:9:34","nodeType":"VariableDeclaration","scope":9079,"src":"5342:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9074,"name":"bool","nodeType":"ElementaryTypeName","src":"5342:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9077,"indexed":false,"mutability":"mutable","name":"amountReleased","nameLocation":"5375:14:34","nodeType":"VariableDeclaration","scope":9079,"src":"5367:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5367:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5271:125:34"},"src":"5252:145:34"},{"anonymous":false,"eventSelector":"712354cc8b71a852b959baf9994ba8b6dba9bc7f8d2cc4ec7d1f4898b31bd7c1","id":9085,"name":"ProposalEnded","nameLocation":"5409:13:34","nodeType":"EventDefinition","parameters":{"id":9084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9081,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"5439:10:34","nodeType":"VariableDeclaration","scope":9085,"src":"5423:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9080,"name":"uint256","nodeType":"ElementaryTypeName","src":"5423:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9083,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"5456:8:34","nodeType":"VariableDeclaration","scope":9085,"src":"5451:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9082,"name":"bool","nodeType":"ElementaryTypeName","src":"5451:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5422:43:34"},"src":"5403:63:34"},{"anonymous":false,"eventSelector":"628c5b5fb646e7f6c763f5e3b6fdcbee619fe1c1bc595643a1c70415a6f11349","id":9091,"name":"ProposalConcluded","nameLocation":"5478:17:34","nodeType":"EventDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9087,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"5512:10:34","nodeType":"VariableDeclaration","scope":9091,"src":"5496:26:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9089,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"5529:8:34","nodeType":"VariableDeclaration","scope":9091,"src":"5524:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9088,"name":"bool","nodeType":"ElementaryTypeName","src":"5524:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5495:43:34"},"src":"5472:67:34"},{"anonymous":false,"eventSelector":"149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa","id":9101,"name":"RewardDistributed","nameLocation":"5551:17:34","nodeType":"EventDefinition","parameters":{"id":9100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9093,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"5595:5:34","nodeType":"VariableDeclaration","scope":9101,"src":"5579:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9092,"name":"address","nodeType":"ElementaryTypeName","src":"5579:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9095,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"5619:10:34","nodeType":"VariableDeclaration","scope":9101,"src":"5611:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9094,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9097,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5648:6:34","nodeType":"VariableDeclaration","scope":9101,"src":"5640:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5640:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9099,"indexed":false,"mutability":"mutable","name":"isWinner","nameLocation":"5670:8:34","nodeType":"VariableDeclaration","scope":9101,"src":"5665:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9098,"name":"bool","nodeType":"ElementaryTypeName","src":"5665:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5568:117:34"},"src":"5545:141:34"},{"body":{"id":9114,"nodeType":"Block","src":"5792:37:34","statements":[{"expression":{"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9110,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"5803:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9111,"name":"_myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"5813:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5803:18:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9113,"nodeType":"ExpressionStatement","src":"5803:18:34"}]},"id":9115,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5780:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5784:6:34","memberName":"sender","nodeType":"MemberAccess","src":"5780:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9108,"kind":"baseConstructorSpecifier","modifierName":{"id":9105,"name":"Ownable","nameLocations":["5772:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"5772:7:34"},"nodeType":"ModifierInvocation","src":"5772:19:34"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"_myToken","nameLocation":"5762:8:34","nodeType":"VariableDeclaration","scope":9115,"src":"5754:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9102,"name":"address","nodeType":"ElementaryTypeName","src":"5754:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5753:18:34"},"returnParameters":{"id":9109,"nodeType":"ParameterList","parameters":[],"src":"5792:0:34"},"scope":10658,"src":"5742:87:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8614],"body":{"id":9126,"nodeType":"Block","src":"5939:47:34","statements":[{"expression":{"baseExpression":{"id":9122,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"5957:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9124,"indexExpression":{"id":9123,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"5966:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5957:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9121,"id":9125,"nodeType":"Return","src":"5950:28:34"}]},"functionSelector":"47734892","id":9127,"implemented":true,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"5873:14:34","nodeType":"FunctionDefinition","parameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9117,"mutability":"mutable","name":"userAddress","nameLocation":"5896:11:34","nodeType":"VariableDeclaration","scope":9127,"src":"5888:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9116,"name":"address","nodeType":"ElementaryTypeName","src":"5888:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5887:21:34"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9127,"src":"5930:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5930:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5929:9:34"},"scope":10658,"src":"5864:122:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8621],"body":{"id":9138,"nodeType":"Block","src":"6110:55:34","statements":[{"expression":{"baseExpression":{"id":9134,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"6128:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9136,"indexExpression":{"id":9135,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"6145:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6128:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9133,"id":9137,"nodeType":"Return","src":"6121:36:34"}]},"functionSelector":"6e16c790","id":9139,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotingRights","nameLocation":"6039:19:34","nodeType":"FunctionDefinition","parameters":{"id":9130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9129,"mutability":"mutable","name":"userAddress","nameLocation":"6067:11:34","nodeType":"VariableDeclaration","scope":9139,"src":"6059:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9128,"name":"address","nodeType":"ElementaryTypeName","src":"6059:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6058:21:34"},"returnParameters":{"id":9133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9139,"src":"6101:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9131,"name":"uint256","nodeType":"ElementaryTypeName","src":"6101:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6100:9:34"},"scope":10658,"src":"6030:135:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8626],"body":{"id":9178,"nodeType":"Block","src":"6240:255:34","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":9149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6302:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6306:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6302:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9153,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6322:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_ProposalLogic_$10658","typeString":"contract ProposalLogic"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProposalLogic_$10658","typeString":"contract ProposalLogic"}],"id":9152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6314:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9151,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:34","typeDescriptions":{}}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6314:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9155,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"6329:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9146,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"6280:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9145,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6273:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1617_$","typeString":"type(contract IERC20)"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6289:12:34","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"6273:28:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:63:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":9157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6351:17:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":9144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6251:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6251:128:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9159,"nodeType":"ExpressionStatement","src":"6251:128:34"},{"expression":{"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9160,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"6390:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9163,"indexExpression":{"expression":{"id":9161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6399:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6403:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6399:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6390:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9164,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"6413:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9167,"indexExpression":{"expression":{"id":9165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6422:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6426:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6422:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6413:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9168,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"6436:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6413:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6390:52:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9171,"nodeType":"ExpressionStatement","src":"6390:52:34"},{"eventCall":{"arguments":[{"expression":{"id":9173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6468:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6472:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6468:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9175,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"6480:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9172,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"6458:9:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6458:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9177,"nodeType":"EmitStatement","src":"6453:34:34"}]},"functionSelector":"b6b55f25","id":9179,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"6209:7:34","nodeType":"FunctionDefinition","parameters":{"id":9142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9141,"mutability":"mutable","name":"amount","nameLocation":"6225:6:34","nodeType":"VariableDeclaration","scope":9179,"src":"6217:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9140,"name":"uint256","nodeType":"ElementaryTypeName","src":"6217:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6216:16:34"},"returnParameters":{"id":9143,"nodeType":"ParameterList","parameters":[],"src":"6240:0:34"},"scope":10658,"src":"6200:295:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8633],"body":{"id":9277,"nodeType":"Block","src":"6577:1064:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9187,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"6596:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9190,"indexExpression":{"expression":{"id":9188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6605:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6609:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6605:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6596:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"6620:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6596:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":9193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6628:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":9186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6588:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6588:63:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9195,"nodeType":"ExpressionStatement","src":"6588:63:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9197,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"6684:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9200,"indexExpression":{"expression":{"id":9198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6693:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6697:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6693:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6684:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":9201,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"6707:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9204,"indexExpression":{"expression":{"id":9202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6724:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6728:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6724:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6707:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6684:51:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"6739:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6684:61:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":9208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6760:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":9196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6662:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6662:131:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9210,"nodeType":"ExpressionStatement","src":"6662:131:34"},{"assignments":[9212],"declarations":[{"constant":false,"id":9212,"mutability":"mutable","name":"unlockTime","nameLocation":"6812:10:34","nodeType":"VariableDeclaration","scope":9277,"src":"6804:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6804:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9217,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9213,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6825:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6831:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"6825:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":9215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6843:6:34","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"6825:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6804:45:34"},{"assignments":[9219],"declarations":[{"constant":false,"id":9219,"mutability":"mutable","name":"User_stakeIndex","nameLocation":"6893:15:34","nodeType":"VariableDeclaration","scope":9277,"src":"6885:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9218,"name":"uint256","nodeType":"ElementaryTypeName","src":"6885:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9223,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9220,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8859,"src":"6911:19:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6931:7:34","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":8549,"src":"6911:27:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$8537_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6885:55:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9224,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8859,"src":"6951:19:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6971:9:34","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":8563,"src":"6951:29:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$8537_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9228,"nodeType":"ExpressionStatement","src":"6951:31:34"},{"assignments":[9230],"declarations":[{"constant":false,"id":9230,"mutability":"mutable","name":"isWagered","nameLocation":"7077:9:34","nodeType":"VariableDeclaration","scope":9277,"src":"7072:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9229,"name":"bool","nodeType":"ElementaryTypeName","src":"7072:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9231,"nodeType":"VariableDeclarationStatement","src":"7072:14:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9232,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"7101:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7110:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7101:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9251,"nodeType":"Block","src":"7220:44:34","statements":[{"expression":{"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9247,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"7235:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7247:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7235:17:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9250,"nodeType":"ExpressionStatement","src":"7235:17:34"}]},"id":9252,"nodeType":"IfStatement","src":"7097:167:34","trueBody":{"id":9246,"nodeType":"Block","src":"7113:101:34","statements":[{"expression":{"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9235,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"7128:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7140:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7128:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9238,"nodeType":"ExpressionStatement","src":"7128:16:34"},{"expression":{"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9239,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"7159:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9242,"indexExpression":{"expression":{"id":9240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7181:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7185:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7181:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7159:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9243,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"7196:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7159:43:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9245,"nodeType":"ExpressionStatement","src":"7159:43:34"}]}},{"expression":{"arguments":[{"expression":{"id":9256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7301:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7305:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7301:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9253,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"7276:19:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7296:4:34","memberName":"push","nodeType":"MemberAccess","src":"7276:24:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9259,"nodeType":"ExpressionStatement","src":"7276:36:34"},{"expression":{"arguments":[{"id":9263,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"7346:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9260,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"7323:17:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7341:4:34","memberName":"push","nodeType":"MemberAccess","src":"7323:22:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9265,"nodeType":"ExpressionStatement","src":"7323:30:34"},{"eventCall":{"arguments":[{"expression":{"id":9267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7402:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7406:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7402:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9269,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"7427:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9270,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"7448:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9271,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"7472:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9272,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"7497:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9266,"name":"DepositForProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9002,"src":"7369:18:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256,uint256)"}},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:154:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9274,"nodeType":"EmitStatement","src":"7364:159:34"},{"expression":{"id":9275,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"7541:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9185,"id":9276,"nodeType":"Return","src":"7534:22:34"}]},"functionSelector":"bbebdd25","id":9278,"implemented":true,"kind":"function","modifiers":[],"name":"submitProposalForReview","nameLocation":"6512:23:34","nodeType":"FunctionDefinition","parameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"amount","nameLocation":"6544:6:34","nodeType":"VariableDeclaration","scope":9278,"src":"6536:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9180,"name":"uint256","nodeType":"ElementaryTypeName","src":"6536:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6535:16:34"},"returnParameters":{"id":9185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9278,"src":"6568:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9183,"name":"uint256","nodeType":"ElementaryTypeName","src":"6568:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6567:9:34"},"scope":10658,"src":"6503:1138:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8647],"body":{"id":9372,"nodeType":"Block","src":"7863:1186:34","statements":[{"assignments":[9295],"declarations":[{"constant":false,"id":9295,"mutability":"mutable","name":"proposalId","nameLocation":"7907:10:34","nodeType":"VariableDeclaration","scope":9372,"src":"7899:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9294,"name":"uint256","nodeType":"ElementaryTypeName","src":"7899:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9299,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9296,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"7920:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7933:7:34","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":8549,"src":"7920:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$8537_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7920:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7899:43:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9300,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"7977:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7990:9:34","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":8563,"src":"7977:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$8537_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9304,"nodeType":"ExpressionStatement","src":"7977:24:34"},{"assignments":[9306],"declarations":[{"constant":false,"id":9306,"mutability":"mutable","name":"isWagered","nameLocation":"8037:9:34","nodeType":"VariableDeclaration","scope":9372,"src":"8032:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9305,"name":"bool","nodeType":"ElementaryTypeName","src":"8032:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9310,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9307,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"8049:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8058:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8049:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8032:27:34"},{"assignments":[9312],"declarations":[{"constant":false,"id":9312,"mutability":"mutable","name":"unlockTime","nameLocation":"8080:10:34","nodeType":"VariableDeclaration","scope":9372,"src":"8072:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9311,"name":"uint256","nodeType":"ElementaryTypeName","src":"8072:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9320,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9313,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8093:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8099:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"8093:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9315,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9287,"src":"8112:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":9316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8122:6:34","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8112:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8111:18:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8093:36:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8072:57:34"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":9325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8241:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8245:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8241:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9327,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"8283:19:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"8334:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8367:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":9330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8401:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":9331,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9306,"src":"8436:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9332,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"8473:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9324,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"8203:8:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$8819_storage_ptr_$","typeString":"type(struct ProposalLogic.Proposal storage pointer)"}},"id":9333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8231:8:34","8270:11:34","8321:11:34","8359:6:34","8390:9:34","8425:9:34","8464:7:34"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"8203:296:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_memory_ptr","typeString":"struct ProposalLogic.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$8819_memory_ptr","typeString":"struct ProposalLogic.Proposal memory"}],"expression":{"id":9321,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"8174:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:4:34","memberName":"push","nodeType":"MemberAccess","src":"8174:14:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$8819_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage_ptr_$","typeString":"function (struct ProposalLogic.Proposal storage ref[] storage pointer,struct ProposalLogic.Proposal storage ref)"}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8174:336:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9335,"nodeType":"ExpressionStatement","src":"8174:336:34"},{"body":{"id":9359,"nodeType":"Block","src":"8610:151:34","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":9352,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"8697:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9354,"indexExpression":{"id":9353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"8716:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8697:21:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":9355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9351,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"8676:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$8824_storage_ptr_$","typeString":"type(struct ProposalLogic.Option storage pointer)"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8684:11:34","8720:9:34"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"8676:58:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_memory_ptr","typeString":"struct ProposalLogic.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$8824_memory_ptr","typeString":"struct ProposalLogic.Option memory"}],"expression":{"baseExpression":{"id":9347,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"8625:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9349,"indexExpression":{"id":9348,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"8641:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8625:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8653:4:34","memberName":"push","nodeType":"MemberAccess","src":"8625:32:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_ptr_$_t_struct$_Option_$8824_storage_$returns$__$attached_to$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_ptr_$","typeString":"function (struct ProposalLogic.Option storage ref[] storage pointer,struct ProposalLogic.Option storage ref)"}},"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8625:124:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9358,"nodeType":"ExpressionStatement","src":"8625:124:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"8574:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9341,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"8578:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8597:6:34","memberName":"length","nodeType":"MemberAccess","src":"8578:25:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8574:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9360,"initializationExpression":{"assignments":[9337],"declarations":[{"constant":false,"id":9337,"mutability":"mutable","name":"i","nameLocation":"8567:1:34","nodeType":"VariableDeclaration","scope":9360,"src":"8562:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9336,"name":"uint","nodeType":"ElementaryTypeName","src":"8562:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9339,"initialValue":{"hexValue":"30","id":9338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8571:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8562:10:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8605:3:34","subExpression":{"id":9344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"8605:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9346,"nodeType":"ExpressionStatement","src":"8605:3:34"},"nodeType":"ForStatement","src":"8557:204:34"},{"eventCall":{"arguments":[{"expression":{"id":9362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8843:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8847:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8843:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9364,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"8868:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9365,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"8893:19:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9366,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"8927:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":9367,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"8960:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9361,"name":"ProposalAndOptionsSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"8801:27:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,string memory[] memory,uint256)"}},"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:180:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9369,"nodeType":"EmitStatement","src":"8796:185:34"},{"expression":{"id":9370,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"9001:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9293,"id":9371,"nodeType":"Return","src":"8994:17:34"}]},"functionSelector":"3257917a","id":9373,"implemented":true,"kind":"function","modifiers":[{"id":9290,"kind":"modifierInvocation","modifierName":{"id":9289,"name":"onlyOwner","nameLocations":["7835:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7835:9:34"},"nodeType":"ModifierInvocation","src":"7835:9:34"}],"name":"createProposalWithOptions","nameLocation":"7658:25:34","nodeType":"FunctionDefinition","parameters":{"id":9288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9280,"mutability":"mutable","name":"proposalDescription","nameLocation":"7708:19:34","nodeType":"VariableDeclaration","scope":9373,"src":"7694:33:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9279,"name":"string","nodeType":"ElementaryTypeName","src":"7694:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9283,"mutability":"mutable","name":"optionDescriptions","nameLocation":"7754:18:34","nodeType":"VariableDeclaration","scope":9373,"src":"7738:34:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9281,"name":"string","nodeType":"ElementaryTypeName","src":"7738:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9282,"nodeType":"ArrayTypeName","src":"7738:8:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":9285,"mutability":"mutable","name":"amount","nameLocation":"7788:6:34","nodeType":"VariableDeclaration","scope":9373,"src":"7783:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9284,"name":"uint","nodeType":"ElementaryTypeName","src":"7783:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9287,"mutability":"mutable","name":"endtime","nameLocation":"7813:7:34","nodeType":"VariableDeclaration","scope":9373,"src":"7805:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9286,"name":"uint256","nodeType":"ElementaryTypeName","src":"7805:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7683:144:34"},"returnParameters":{"id":9293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9373,"src":"7854:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9291,"name":"uint256","nodeType":"ElementaryTypeName","src":"7854:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7853:9:34"},"scope":10658,"src":"7649:1400:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8665],"body":{"id":9507,"nodeType":"Block","src":"9338:1535:34","statements":[{"assignments":[9394],"declarations":[{"constant":false,"id":9394,"mutability":"mutable","name":"UserAddress","nameLocation":"9357:11:34","nodeType":"VariableDeclaration","scope":9507,"src":"9349:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9393,"name":"address","nodeType":"ElementaryTypeName","src":"9349:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9398,"initialValue":{"baseExpression":{"id":9395,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"9371:19:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9397,"indexExpression":{"id":9396,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"9391:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9371:31:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9349:53:34"},{"assignments":[9400],"declarations":[{"constant":false,"id":9400,"mutability":"mutable","name":"UserAmount","nameLocation":"9421:10:34","nodeType":"VariableDeclaration","scope":9507,"src":"9413:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9399,"name":"uint256","nodeType":"ElementaryTypeName","src":"9413:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9404,"initialValue":{"baseExpression":{"id":9401,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"9434:17:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9403,"indexExpression":{"id":9402,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"9452:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9434:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9413:50:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9406,"name":"UserAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"9482:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9407,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"9497:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9482:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468652061646472657373206973206e6f742073616d65","id":9409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9510:25:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""},"value":"the address is not same"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""}],"id":9405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9474:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9474:62:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9411,"nodeType":"ExpressionStatement","src":"9474:62:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9413,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9379,"src":"9569:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9414,"name":"UserAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"9584:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9569:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b656420616d6f756e7420646f6573206e6f74206d61746368206f7220696e73756666696369656e74","id":9416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9609:46:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""},"value":"Staked amount does not match or insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""}],"id":9412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9547:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9547:119:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9418,"nodeType":"ExpressionStatement","src":"9547:119:34"},{"assignments":[9420],"declarations":[{"constant":false,"id":9420,"mutability":"mutable","name":"unlockTime","nameLocation":"9687:10:34","nodeType":"VariableDeclaration","scope":9507,"src":"9679:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9419,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9428,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9700:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9706:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"9700:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9423,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"9719:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":9424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9729:6:34","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"9719:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9718:18:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9700:36:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9679:57:34"},{"assignments":[9430],"declarations":[{"constant":false,"id":9430,"mutability":"mutable","name":"isWagered","nameLocation":"9786:9:34","nodeType":"VariableDeclaration","scope":9507,"src":"9781:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9429,"name":"bool","nodeType":"ElementaryTypeName","src":"9781:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9431,"nodeType":"VariableDeclarationStatement","src":"9781:14:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9432,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9379,"src":"9810:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9824:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9810:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9444,"nodeType":"Block","src":"9876:44:34","statements":[{"expression":{"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9440,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"9891:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9903:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9891:17:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9443,"nodeType":"ExpressionStatement","src":"9891:17:34"}]},"id":9445,"nodeType":"IfStatement","src":"9806:114:34","trueBody":{"id":9439,"nodeType":"Block","src":"9827:43:34","statements":[{"expression":{"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9435,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"9842:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9854:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9842:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9438,"nodeType":"ExpressionStatement","src":"9842:16:34"}]}},{"expression":{"arguments":[{"arguments":[{"id":9450,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"9997:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9451,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"10040:19:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9452,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9379,"src":"10091:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10129:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":9454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10163:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":9455,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"10198:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9456,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"10235:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9449,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"9959:8:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$8819_storage_ptr_$","typeString":"type(struct ProposalLogic.Proposal storage pointer)"}},"id":9457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9987:8:34","10027:11:34","10078:11:34","10121:6:34","10152:9:34","10187:9:34","10226:7:34"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"9959:302:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_memory_ptr","typeString":"struct ProposalLogic.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$8819_memory_ptr","typeString":"struct ProposalLogic.Proposal memory"}],"expression":{"id":9446,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"9930:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9940:4:34","memberName":"push","nodeType":"MemberAccess","src":"9930:14:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$8819_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage_ptr_$","typeString":"function (struct ProposalLogic.Proposal storage ref[] storage pointer,struct ProposalLogic.Proposal storage ref)"}},"id":9458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9930:342:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9459,"nodeType":"ExpressionStatement","src":"9930:342:34"},{"assignments":[9461],"declarations":[{"constant":false,"id":9461,"mutability":"mutable","name":"proposalId","nameLocation":"10293:10:34","nodeType":"VariableDeclaration","scope":9507,"src":"10285:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"10285:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9462,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"10306:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10319:7:34","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":8549,"src":"10306:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$8537_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10306:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10285:43:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9466,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"10363:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:9:34","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":8563,"src":"10363:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$8537_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10363:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9470,"nodeType":"ExpressionStatement","src":"10363:24:34"},{"body":{"id":9494,"nodeType":"Block","src":"10474:151:34","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":9487,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9382,"src":"10561:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9489,"indexExpression":{"id":9488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9472,"src":"10580:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10561:21:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":9490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10595:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9486,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"10540:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$8824_storage_ptr_$","typeString":"type(struct ProposalLogic.Option storage pointer)"}},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10548:11:34","10584:9:34"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"10540:58:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_memory_ptr","typeString":"struct ProposalLogic.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$8824_memory_ptr","typeString":"struct ProposalLogic.Option memory"}],"expression":{"baseExpression":{"id":9482,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"10489:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9484,"indexExpression":{"id":9483,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"10505:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10489:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10517:4:34","memberName":"push","nodeType":"MemberAccess","src":"10489:32:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_ptr_$_t_struct$_Option_$8824_storage_$returns$__$attached_to$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_ptr_$","typeString":"function (struct ProposalLogic.Option storage ref[] storage pointer,struct ProposalLogic.Option storage ref)"}},"id":9492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10489:124:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9493,"nodeType":"ExpressionStatement","src":"10489:124:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9472,"src":"10438:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9476,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9382,"src":"10442:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10461:6:34","memberName":"length","nodeType":"MemberAccess","src":"10442:25:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10438:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9495,"initializationExpression":{"assignments":[9472],"declarations":[{"constant":false,"id":9472,"mutability":"mutable","name":"i","nameLocation":"10431:1:34","nodeType":"VariableDeclaration","scope":9495,"src":"10423:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9471,"name":"uint256","nodeType":"ElementaryTypeName","src":"10423:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9474,"initialValue":{"hexValue":"30","id":9473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10423:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10469:3:34","subExpression":{"id":9479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9472,"src":"10469:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9481,"nodeType":"ExpressionStatement","src":"10469:3:34"},"nodeType":"ForStatement","src":"10418:207:34"},{"eventCall":{"arguments":[{"id":9497,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"10670:11:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9498,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"10696:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9499,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"10721:19:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9500,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9379,"src":"10755:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9501,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9382,"src":"10781:18:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":9502,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"10814:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9496,"name":"ProposalForUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"10640:15:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,string memory[] memory,uint256)"}},"id":9503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10640:195:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9504,"nodeType":"EmitStatement","src":"10635:200:34"},{"expression":{"id":9505,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"10855:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9392,"id":9506,"nodeType":"Return","src":"10848:17:34"}]},"functionSelector":"a46188ad","id":9508,"implemented":true,"kind":"function","modifiers":[{"id":9389,"kind":"modifierInvocation","modifierName":{"id":9388,"name":"onlyOwner","nameLocations":["9310:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9310:9:34"},"nodeType":"ModifierInvocation","src":"9310:9:34"}],"name":"processUserStakedProposal","nameLocation":"9066:25:34","nodeType":"FunctionDefinition","parameters":{"id":9387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9375,"mutability":"mutable","name":"userAddress","nameLocation":"9110:11:34","nodeType":"VariableDeclaration","scope":9508,"src":"9102:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9374,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9377,"mutability":"mutable","name":"proposalDescription","nameLocation":"9146:19:34","nodeType":"VariableDeclaration","scope":9508,"src":"9132:33:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9376,"name":"string","nodeType":"ElementaryTypeName","src":"9132:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9379,"mutability":"mutable","name":"stakeAmount","nameLocation":"9184:11:34","nodeType":"VariableDeclaration","scope":9508,"src":"9176:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9378,"name":"uint256","nodeType":"ElementaryTypeName","src":"9176:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9382,"mutability":"mutable","name":"optionDescriptions","nameLocation":"9222:18:34","nodeType":"VariableDeclaration","scope":9508,"src":"9206:34:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9380,"name":"string","nodeType":"ElementaryTypeName","src":"9206:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9381,"nodeType":"ArrayTypeName","src":"9206:8:34","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":9384,"mutability":"mutable","name":"stakeIndex","nameLocation":"9259:10:34","nodeType":"VariableDeclaration","scope":9508,"src":"9251:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9383,"name":"uint256","nodeType":"ElementaryTypeName","src":"9251:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9386,"mutability":"mutable","name":"endtime","nameLocation":"9288:7:34","nodeType":"VariableDeclaration","scope":9508,"src":"9280:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9385,"name":"uint256","nodeType":"ElementaryTypeName","src":"9280:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9091:211:34"},"returnParameters":{"id":9392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9508,"src":"9329:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9390,"name":"uint256","nodeType":"ElementaryTypeName","src":"9329:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9328:9:34"},"scope":10658,"src":"9057:1816:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8670],"body":{"id":9563,"nodeType":"Block","src":"10936:632:34","statements":[{"assignments":[9516],"declarations":[{"constant":false,"id":9516,"mutability":"mutable","name":"availableBalance","nameLocation":"11007:16:34","nodeType":"VariableDeclaration","scope":9563,"src":"10999:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9515,"name":"uint256","nodeType":"ElementaryTypeName","src":"10999:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9521,"initialValue":{"arguments":[{"expression":{"id":9518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11054:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11058:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11054:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9517,"name":"getAvailableWithdrawBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"11026:27:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11026:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10999:66:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9523,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"11098:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9524,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"11118:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11098:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820617661696c61626c652062616c616e636520746f207769746864726177","id":9526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11140:42:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""},"value":"Not enough available balance to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""}],"id":9522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11076:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:117:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9528,"nodeType":"ExpressionStatement","src":"11076:117:34"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":9534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11296:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11300:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11296:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9536,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"11308:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9531,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"11278:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9530,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"11271:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1617_$","typeString":"type(contract IERC20)"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11271:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11287:8:34","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"11271:24:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11271:45:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":9538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11331:17:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":9529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11249:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11249:110:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9540,"nodeType":"ExpressionStatement","src":"11249:110:34"},{"expression":{"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9541,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"11397:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9544,"indexExpression":{"expression":{"id":9542,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11406:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11410:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11406:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11397:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9545,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"11420:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9548,"indexExpression":{"expression":{"id":9546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11429:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11433:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11429:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11420:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9549,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"11443:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11420:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11397:53:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9552,"nodeType":"ExpressionStatement","src":"11397:53:34"},{"eventCall":{"arguments":[{"expression":{"id":9554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11518:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11522:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11518:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9556,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"11530:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9557,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"11539:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9560,"indexExpression":{"expression":{"id":9558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11548:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11552:6:34","memberName":"sender","nodeType":"MemberAccess","src":"11548:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11539:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9553,"name":"WithdrawalDetailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"11499:18:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:61:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9562,"nodeType":"EmitStatement","src":"11494:66:34"}]},"functionSelector":"2e1a7d4d","id":9564,"implemented":true,"kind":"function","modifiers":[{"id":9513,"kind":"modifierInvocation","modifierName":{"id":9512,"name":"nonReentrant","nameLocations":["10923:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2503,"src":"10923:12:34"},"nodeType":"ModifierInvocation","src":"10923:12:34"}],"name":"withdraw","nameLocation":"10890:8:34","nodeType":"FunctionDefinition","parameters":{"id":9511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9510,"mutability":"mutable","name":"_amount","nameLocation":"10907:7:34","nodeType":"VariableDeclaration","scope":9564,"src":"10899:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10899:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10898:17:34"},"returnParameters":{"id":9514,"nodeType":"ParameterList","parameters":[],"src":"10936:0:34"},"scope":10658,"src":"10881:687:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8677],"body":{"id":9604,"nodeType":"Block","src":"11673:386:34","statements":[{"assignments":[9572],"declarations":[{"constant":false,"id":9572,"mutability":"mutable","name":"totalBalance","nameLocation":"11692:12:34","nodeType":"VariableDeclaration","scope":9604,"src":"11684:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11684:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9576,"initialValue":{"baseExpression":{"id":9573,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"11707:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9575,"indexExpression":{"id":9574,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9566,"src":"11716:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11707:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11684:37:34"},{"assignments":[9578],"declarations":[{"constant":false,"id":9578,"mutability":"mutable","name":"lockedForVoting","nameLocation":"11740:15:34","nodeType":"VariableDeclaration","scope":9604,"src":"11732:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11732:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9582,"initialValue":{"baseExpression":{"id":9579,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"11758:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9581,"indexExpression":{"id":9580,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9566,"src":"11775:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11758:22:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11732:48:34"},{"assignments":[9584],"declarations":[{"constant":false,"id":9584,"mutability":"mutable","name":"lockedInProposals","nameLocation":"11799:17:34","nodeType":"VariableDeclaration","scope":9604,"src":"11791:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9583,"name":"uint256","nodeType":"ElementaryTypeName","src":"11791:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9588,"initialValue":{"baseExpression":{"id":9585,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"11819:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9587,"indexExpression":{"id":9586,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9566,"src":"11841:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11819:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11791:55:34"},{"assignments":[9590],"declarations":[{"constant":false,"id":9590,"mutability":"mutable","name":"totalLocked","nameLocation":"11925:11:34","nodeType":"VariableDeclaration","scope":9604,"src":"11917:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11917:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9591,"name":"lockedForVoting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9578,"src":"11939:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9592,"name":"lockedInProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"11957:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11939:35:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11917:57:34"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9595,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"11992:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9596,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"12007:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11992:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12050:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11992:59:34","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9598,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"12021:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9599,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"12036:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12021:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9570,"id":9603,"nodeType":"Return","src":"11985:66:34"}]},"functionSelector":"bcfc4429","id":9605,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableWithdrawBalance","nameLocation":"11585:27:34","nodeType":"FunctionDefinition","parameters":{"id":9567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9566,"mutability":"mutable","name":"user","nameLocation":"11631:4:34","nodeType":"VariableDeclaration","scope":9605,"src":"11623:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9565,"name":"address","nodeType":"ElementaryTypeName","src":"11623:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11612:30:34"},"returnParameters":{"id":9570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9605,"src":"11664:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9568,"name":"uint256","nodeType":"ElementaryTypeName","src":"11664:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11663:9:34"},"scope":10658,"src":"11576:483:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8684],"body":{"id":9622,"nodeType":"Block","src":"12142:102:34","statements":[{"assignments":[9614],"declarations":[{"constant":false,"id":9614,"mutability":"mutable","name":"proposal","nameLocation":"12170:8:34","nodeType":"VariableDeclaration","scope":9622,"src":"12153:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":9613,"nodeType":"UserDefinedTypeName","pathNode":{"id":9612,"name":"Proposal","nameLocations":["12153:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"12153:8:34"},"referencedDeclaration":8819,"src":"12153:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":9618,"initialValue":{"baseExpression":{"id":9615,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"12181:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9617,"indexExpression":{"id":9616,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"12191:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12181:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12153:50:34"},{"expression":{"expression":{"id":9619,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"12221:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":9620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12230:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"12221:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9611,"id":9621,"nodeType":"Return","src":"12214:22:34"}]},"functionSelector":"401853b7","id":9623,"implemented":true,"kind":"function","modifiers":[],"name":"getProposalStatus","nameLocation":"12076:17:34","nodeType":"FunctionDefinition","parameters":{"id":9608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9607,"mutability":"mutable","name":"_proposalId","nameLocation":"12102:11:34","nodeType":"VariableDeclaration","scope":9623,"src":"12094:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9606,"name":"uint256","nodeType":"ElementaryTypeName","src":"12094:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12093:21:34"},"returnParameters":{"id":9611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9623,"src":"12136:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9609,"name":"bool","nodeType":"ElementaryTypeName","src":"12136:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12135:6:34"},"scope":10658,"src":"12067:177:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8693],"body":{"id":9798,"nodeType":"Block","src":"12393:1959:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9635,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"12412:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9636,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"12426:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12436:6:34","memberName":"length","nodeType":"MemberAccess","src":"12426:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12412:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c20646f6573206e6f74206578697374","id":9639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12444:29:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""},"value":"The proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""}],"id":9634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12404:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12404:70:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9641,"nodeType":"ExpressionStatement","src":"12404:70:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9643,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"12507:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":9644,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"12519:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9646,"indexExpression":{"id":9645,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"12535:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12519:28:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12548:6:34","memberName":"length","nodeType":"MemberAccess","src":"12519:35:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12507:47:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865206f7074696f6e20646f6573206e6f74206578697374","id":9649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12569:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""},"value":"The option does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""}],"id":9642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12485:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12485:122:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9651,"nodeType":"ExpressionStatement","src":"12485:122:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12640:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12646:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"12640:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":9655,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"12658:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9657,"indexExpression":{"id":9656,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"12668:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12658:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"id":9658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12681:7:34","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8818,"src":"12658:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12640:48:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520766f74696e6720706572696f6420666f7220746869732070726f706f73616c2068617320656e646564","id":9660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12703:47:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_997011783ffbafebb4613a45aaaaab5d364ceff48b376fc3349ed53193c7cba7","typeString":"literal_string \"The voting period for this proposal has ended\""},"value":"The voting period for this proposal has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_997011783ffbafebb4613a45aaaaab5d364ceff48b376fc3349ed53193c7cba7","typeString":"literal_string \"The voting period for this proposal has ended\""}],"id":9652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12618:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12618:143:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9662,"nodeType":"ExpressionStatement","src":"12618:143:34"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9664,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"12780:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9666,"indexExpression":{"id":9665,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"12790:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12780:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"id":9667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12803:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"12780:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c206973206e6f7420616374697665","id":9668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12811:28:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""},"value":"The proposal is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""}],"id":9663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12772:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12772:68:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9670,"nodeType":"ExpressionStatement","src":"12772:68:34"},{"assignments":[9672],"declarations":[{"constant":false,"id":9672,"mutability":"mutable","name":"remainingVotingRights","nameLocation":"12956:21:34","nodeType":"VariableDeclaration","scope":9798,"src":"12948:29:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12948:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9673,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"12980:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9676,"indexExpression":{"expression":{"id":9674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12989:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12993:6:34","memberName":"sender","nodeType":"MemberAccess","src":"12989:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12980:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":9677,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"13016:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9680,"indexExpression":{"expression":{"id":9678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13033:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13037:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13033:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13016:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12980:64:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":9682,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"13060:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9685,"indexExpression":{"expression":{"id":9683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13082:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13086:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13082:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13060:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12980:113:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12948:145:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9689,"name":"remainingVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"13112:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9690,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"13137:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13112:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720726967687473","id":9692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13146:28:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""},"value":"Insufficient voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""}],"id":9688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13104:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13104:71:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9694,"nodeType":"ExpressionStatement","src":"13104:71:34"},{"expression":{"id":9705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9695,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"13224:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9698,"indexExpression":{"expression":{"id":9696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13241:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13245:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13241:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13224:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9699,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"13255:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9702,"indexExpression":{"expression":{"id":9700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13272:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13276:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13272:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13255:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"13286:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:38:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13224:69:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9706,"nodeType":"ExpressionStatement","src":"13224:69:34"},{"expression":{"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":9707,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"13408:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9710,"indexExpression":{"id":9708,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13424:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13408:28:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9711,"indexExpression":{"id":9709,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"13437:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13408:39:34","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_storage","typeString":"struct ProposalLogic.Option storage ref"}},"id":9712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13448:9:34","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8823,"src":"13408:49:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9713,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"13461:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13408:60:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9715,"nodeType":"ExpressionStatement","src":"13408:60:34"},{"expression":{"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9716,"name":"votingRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"13479:13:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":9720,"indexExpression":{"expression":{"id":9717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13493:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13497:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13493:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13479:25:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9721,"indexExpression":{"id":9719,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13505:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13479:38:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9722,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"13521:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13479:49:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9724,"nodeType":"ExpressionStatement","src":"13479:49:34"},{"expression":{"id":9732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9725,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"13573:6:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":9729,"indexExpression":{"expression":{"id":9726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13580:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13584:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13580:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13573:18:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9730,"indexExpression":{"id":9728,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13592:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13573:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13607:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13573:38:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9733,"nodeType":"ExpressionStatement","src":"13573:38:34"},{"expression":{"arguments":[{"arguments":[{"id":9740,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13719:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9741,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"13732:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9742,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"13743:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9739,"name":"VoteRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"13708:10:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VoteRecord_$8840_storage_ptr_$","typeString":"type(struct ProposalLogic.VoteRecord storage pointer)"}},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13708:43:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_memory_ptr","typeString":"struct ProposalLogic.VoteRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VoteRecord_$8840_memory_ptr","typeString":"struct ProposalLogic.VoteRecord memory"}],"expression":{"baseExpression":{"id":9734,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"13659:17:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.VoteRecord storage ref[] storage ref)"}},"id":9737,"indexExpression":{"expression":{"id":9735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13677:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13681:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13677:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13659:29:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage ref"}},"id":9738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13689:4:34","memberName":"push","nodeType":"MemberAccess","src":"13659:34:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr_$_t_struct$_VoteRecord_$8840_storage_$returns$__$attached_to$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr_$","typeString":"function (struct ProposalLogic.VoteRecord storage ref[] storage pointer,struct ProposalLogic.VoteRecord storage ref)"}},"id":9744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13659:103:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9745,"nodeType":"ExpressionStatement","src":"13659:103:34"},{"expression":{"arguments":[{"expression":{"id":9750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13840:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13844:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13840:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9746,"name":"proposalVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"13807:14:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":9748,"indexExpression":{"id":9747,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13822:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13807:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13835:4:34","memberName":"push","nodeType":"MemberAccess","src":"13807:32:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13807:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9753,"nodeType":"ExpressionStatement","src":"13807:44:34"},{"expression":{"arguments":[{"expression":{"id":9758,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13964:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13968:6:34","memberName":"sender","nodeType":"MemberAccess","src":"13964:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9754,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"13921:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":9756,"indexExpression":{"id":9755,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"13946:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13921:37:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13959:4:34","memberName":"push","nodeType":"MemberAccess","src":"13921:42:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:54:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9761,"nodeType":"ExpressionStatement","src":"13921:54:34"},{"expression":{"arguments":[{"id":9766,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"14024:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":9762,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"13986:19:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":9764,"indexExpression":{"id":9763,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"14006:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13986:32:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14019:4:34","memberName":"push","nodeType":"MemberAccess","src":"13986:37:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13986:48:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9768,"nodeType":"ExpressionStatement","src":"13986:48:34"},{"expression":{"arguments":[{"id":9773,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"14084:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":9769,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"14045:20:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":9771,"indexExpression":{"id":9770,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"14066:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14045:33:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:4:34","memberName":"push","nodeType":"MemberAccess","src":"14045:38:34","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14045:47:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9775,"nodeType":"ExpressionStatement","src":"14045:47:34"},{"expression":{"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9776,"name":"voterIndexInProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"14154:20:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":9780,"indexExpression":{"expression":{"id":9777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14175:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14179:6:34","memberName":"sender","nodeType":"MemberAccess","src":"14175:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14154:32:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9781,"indexExpression":{"id":9779,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"14187:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14154:45:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9782,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"14215:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":9784,"indexExpression":{"id":9783,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"14240:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14215:37:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14253:6:34","memberName":"length","nodeType":"MemberAccess","src":"14215:44:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14275:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14215:61:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14154:122:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9789,"nodeType":"ExpressionStatement","src":"14154:122:34"},{"eventCall":{"arguments":[{"expression":{"id":9791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14300:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14304:6:34","memberName":"sender","nodeType":"MemberAccess","src":"14300:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9793,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"14312:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9794,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"14325:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9795,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"14336:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9790,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"14294:5:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":9796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14294:50:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9797,"nodeType":"EmitStatement","src":"14289:55:34"}]},"functionSelector":"8a6655d6","id":9799,"implemented":true,"kind":"function","modifiers":[{"id":9632,"kind":"modifierInvocation","modifierName":{"id":9631,"name":"whenNotPaused","nameLocations":["12379:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"12379:13:34"},"nodeType":"ModifierInvocation","src":"12379:13:34"}],"name":"vote","nameLocation":"12276:4:34","nodeType":"FunctionDefinition","parameters":{"id":9630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9625,"mutability":"mutable","name":"_proposalId","nameLocation":"12299:11:34","nodeType":"VariableDeclaration","scope":9799,"src":"12291:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9624,"name":"uint256","nodeType":"ElementaryTypeName","src":"12291:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9627,"mutability":"mutable","name":"_optionId","nameLocation":"12329:9:34","nodeType":"VariableDeclaration","scope":9799,"src":"12321:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12321:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9629,"mutability":"mutable","name":"_amount","nameLocation":"12357:7:34","nodeType":"VariableDeclaration","scope":9799,"src":"12349:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9628,"name":"uint256","nodeType":"ElementaryTypeName","src":"12349:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12280:91:34"},"returnParameters":{"id":9633,"nodeType":"ParameterList","parameters":[],"src":"12393:0:34"},"scope":10658,"src":"12267:2085:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8698],"body":{"id":9814,"nodeType":"Block","src":"14475:66:34","statements":[{"expression":{"arguments":[{"arguments":[{"id":9810,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14527:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_ProposalLogic_$10658","typeString":"contract ProposalLogic"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProposalLogic_$10658","typeString":"contract ProposalLogic"}],"id":9809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14519:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9808,"name":"address","nodeType":"ElementaryTypeName","src":"14519:7:34","typeDescriptions":{}}},"id":9811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14519:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9805,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"14500:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9804,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14493:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1617_$","typeString":"type(contract IERC20)"}},"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14493:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1617","typeString":"contract IERC20"}},"id":9807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14509:9:34","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1574,"src":"14493:25:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14493:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9803,"id":9813,"nodeType":"Return","src":"14486:47:34"}]},"functionSelector":"6f9fb98a","id":9815,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"14427:18:34","nodeType":"FunctionDefinition","parameters":{"id":9800,"nodeType":"ParameterList","parameters":[],"src":"14445:2:34"},"returnParameters":{"id":9803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9815,"src":"14469:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9801,"name":"uint","nodeType":"ElementaryTypeName","src":"14469:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14468:6:34"},"scope":10658,"src":"14418:123:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8701],"body":{"id":9823,"nodeType":"Block","src":"14583:27:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9820,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"14594:6:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14594:8:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9822,"nodeType":"ExpressionStatement","src":"14594:8:34"}]},"functionSelector":"8456cb59","id":9824,"implemented":true,"kind":"function","modifiers":[{"id":9818,"kind":"modifierInvocation","modifierName":{"id":9817,"name":"onlyOwner","nameLocations":["14573:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14573:9:34"},"nodeType":"ModifierInvocation","src":"14573:9:34"}],"name":"pause","nameLocation":"14558:5:34","nodeType":"FunctionDefinition","parameters":{"id":9816,"nodeType":"ParameterList","parameters":[],"src":"14563:2:34"},"returnParameters":{"id":9819,"nodeType":"ParameterList","parameters":[],"src":"14583:0:34"},"scope":10658,"src":"14549:61:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8704],"body":{"id":9832,"nodeType":"Block","src":"14654:29:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9829,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"14665:8:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14665:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9831,"nodeType":"ExpressionStatement","src":"14665:10:34"}]},"functionSelector":"3f4ba83a","id":9833,"implemented":true,"kind":"function","modifiers":[{"id":9827,"kind":"modifierInvocation","modifierName":{"id":9826,"name":"onlyOwner","nameLocations":["14644:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14644:9:34"},"nodeType":"ModifierInvocation","src":"14644:9:34"}],"name":"unpause","nameLocation":"14627:7:34","nodeType":"FunctionDefinition","parameters":{"id":9825,"nodeType":"ParameterList","parameters":[],"src":"14634:2:34"},"returnParameters":{"id":9828,"nodeType":"ParameterList","parameters":[],"src":"14654:0:34"},"scope":10658,"src":"14618:65:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8718],"body":{"id":9923,"nodeType":"Block","src":"14939:446:34","statements":[{"assignments":[9851],"declarations":[{"constant":false,"id":9851,"mutability":"mutable","name":"records","nameLocation":"14971:7:34","nodeType":"VariableDeclaration","scope":9923,"src":"14950:28:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord[]"},"typeName":{"baseType":{"id":9849,"nodeType":"UserDefinedTypeName","pathNode":{"id":9848,"name":"VoteRecord","nameLocations":["14950:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":8840,"src":"14950:10:34"},"referencedDeclaration":8840,"src":"14950:10:34","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_storage_ptr","typeString":"struct ProposalLogic.VoteRecord"}},"id":9850,"nodeType":"ArrayTypeName","src":"14950:12:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord[]"}},"visibility":"internal"}],"id":9855,"initialValue":{"baseExpression":{"id":9852,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"14981:17:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_$","typeString":"mapping(address => struct ProposalLogic.VoteRecord storage ref[] storage ref)"}},"id":9854,"indexExpression":{"id":9853,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9835,"src":"14999:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14981:24:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14950:55:34"},{"expression":{"id":9863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9856,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"15016:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9860,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15044:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15052:6:34","memberName":"length","nodeType":"MemberAccess","src":"15044:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15030:13:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9857,"name":"uint256","nodeType":"ElementaryTypeName","src":"15034:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9858,"nodeType":"ArrayTypeName","src":"15034:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15030:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"15016:43:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9864,"nodeType":"ExpressionStatement","src":"15016:43:34"},{"expression":{"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9865,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"15070:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9869,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15096:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15104:6:34","memberName":"length","nodeType":"MemberAccess","src":"15096:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15082:13:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9866,"name":"uint256","nodeType":"ElementaryTypeName","src":"15086:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9867,"nodeType":"ArrayTypeName","src":"15086:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15082:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"15070:41:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9873,"nodeType":"ExpressionStatement","src":"15070:41:34"},{"expression":{"id":9881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9874,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9845,"src":"15122:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9878,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15146:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15154:6:34","memberName":"length","nodeType":"MemberAccess","src":"15146:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15132:13:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9875,"name":"uint256","nodeType":"ElementaryTypeName","src":"15136:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9876,"nodeType":"ArrayTypeName","src":"15136:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15132:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"15122:39:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9882,"nodeType":"ExpressionStatement","src":"15122:39:34"},{"body":{"id":9921,"nodeType":"Block","src":"15219:159:34","statements":[{"expression":{"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9894,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"15234:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9896,"indexExpression":{"id":9895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15246:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15234:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9897,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15251:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9899,"indexExpression":{"id":9898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15259:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15251:10:34","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_storage","typeString":"struct ProposalLogic.VoteRecord storage ref"}},"id":9900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15262:10:34","memberName":"proposalId","nodeType":"MemberAccess","referencedDeclaration":8835,"src":"15251:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15234:38:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9902,"nodeType":"ExpressionStatement","src":"15234:38:34"},{"expression":{"id":9910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9903,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"15287:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9905,"indexExpression":{"id":9904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15297:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15287:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9906,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15302:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9908,"indexExpression":{"id":9907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15310:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15302:10:34","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_storage","typeString":"struct ProposalLogic.VoteRecord storage ref"}},"id":9909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15313:8:34","memberName":"optionId","nodeType":"MemberAccess","referencedDeclaration":8837,"src":"15302:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15287:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9911,"nodeType":"ExpressionStatement","src":"15287:34:34"},{"expression":{"id":9919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9912,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9845,"src":"15336:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9914,"indexExpression":{"id":9913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15344:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15336:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9915,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15349:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9917,"indexExpression":{"id":9916,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15357:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15349:10:34","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$8840_storage","typeString":"struct ProposalLogic.VoteRecord storage ref"}},"id":9918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15360:6:34","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8839,"src":"15349:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15336:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9920,"nodeType":"ExpressionStatement","src":"15336:30:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15194:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9888,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"15198:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$8840_storage_$dyn_storage_ptr","typeString":"struct ProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":9889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15206:6:34","memberName":"length","nodeType":"MemberAccess","src":"15198:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15194:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9922,"initializationExpression":{"assignments":[9884],"declarations":[{"constant":false,"id":9884,"mutability":"mutable","name":"i","nameLocation":"15187:1:34","nodeType":"VariableDeclaration","scope":9922,"src":"15179:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"15179:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9886,"initialValue":{"hexValue":"30","id":9885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15191:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15179:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15214:3:34","subExpression":{"id":9891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"15214:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9893,"nodeType":"ExpressionStatement","src":"15214:3:34"},"nodeType":"ForStatement","src":"15174:204:34"}]},"functionSelector":"0ff7c4a5","id":9924,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotingHistory","nameLocation":"14700:20:34","nodeType":"FunctionDefinition","parameters":{"id":9836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9835,"mutability":"mutable","name":"_user","nameLocation":"14739:5:34","nodeType":"VariableDeclaration","scope":9924,"src":"14731:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9834,"name":"address","nodeType":"ElementaryTypeName","src":"14731:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14720:31:34"},"returnParameters":{"id":9846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9839,"mutability":"mutable","name":"proposalIds","nameLocation":"14831:11:34","nodeType":"VariableDeclaration","scope":9924,"src":"14814:28:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9837,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9838,"nodeType":"ArrayTypeName","src":"14814:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9842,"mutability":"mutable","name":"optionIds","nameLocation":"14874:9:34","nodeType":"VariableDeclaration","scope":9924,"src":"14857:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9840,"name":"uint256","nodeType":"ElementaryTypeName","src":"14857:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9841,"nodeType":"ArrayTypeName","src":"14857:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9845,"mutability":"mutable","name":"amounts","nameLocation":"14915:7:34","nodeType":"VariableDeclaration","scope":9924,"src":"14898:24:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9843,"name":"uint256","nodeType":"ElementaryTypeName","src":"14898:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9844,"nodeType":"ArrayTypeName","src":"14898:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14799:134:34"},"scope":10658,"src":"14691:694:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8723],"body":{"id":9932,"nodeType":"Block","src":"15450:42:34","statements":[{"expression":{"expression":{"id":9929,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"15468:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15478:6:34","memberName":"length","nodeType":"MemberAccess","src":"15468:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9928,"id":9931,"nodeType":"Return","src":"15461:23:34"}]},"functionSelector":"44c7c867","id":9933,"implemented":true,"kind":"function","modifiers":[],"name":"proposalsLength","nameLocation":"15402:15:34","nodeType":"FunctionDefinition","parameters":{"id":9925,"nodeType":"ParameterList","parameters":[],"src":"15417:2:34"},"returnParameters":{"id":9928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9933,"src":"15441:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9926,"name":"uint256","nodeType":"ElementaryTypeName","src":"15441:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15440:9:34"},"scope":10658,"src":"15393:99:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8730],"body":{"id":9945,"nodeType":"Block","src":"15575:60:34","statements":[{"expression":{"expression":{"baseExpression":{"id":9940,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"15593:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9942,"indexExpression":{"id":9941,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"15609:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15593:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15621:6:34","memberName":"length","nodeType":"MemberAccess","src":"15593:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9939,"id":9944,"nodeType":"Return","src":"15586:41:34"}]},"functionSelector":"517a6257","id":9946,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionsCount","nameLocation":"15509:15:34","nodeType":"FunctionDefinition","parameters":{"id":9936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9935,"mutability":"mutable","name":"proposalId","nameLocation":"15533:10:34","nodeType":"VariableDeclaration","scope":9946,"src":"15525:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9934,"name":"uint256","nodeType":"ElementaryTypeName","src":"15525:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15524:20:34"},"returnParameters":{"id":9939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9946,"src":"15566:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9937,"name":"uint256","nodeType":"ElementaryTypeName","src":"15566:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15565:9:34"},"scope":10658,"src":"15500:135:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8739],"body":{"id":9980,"nodeType":"Block","src":"15767:285:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9956,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9948,"src":"15786:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9957,"name":"proposalsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9933,"src":"15799:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15799:17:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15786:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":9960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15818:26:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":9955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15778:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15778:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9962,"nodeType":"ExpressionStatement","src":"15778:67:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9964,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9950,"src":"15878:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":9965,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"15892:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9967,"indexExpression":{"id":9966,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9948,"src":"15908:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15892:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15920:6:34","memberName":"length","nodeType":"MemberAccess","src":"15892:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15878:48:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7074696f6e20646f6573206e6f742065786973742e","id":9970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15941:24:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""},"value":"Option does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""}],"id":9963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15856:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15856:120:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9972,"nodeType":"ExpressionStatement","src":"15856:120:34"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":9973,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"15994:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":9975,"indexExpression":{"id":9974,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9948,"src":"16010:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15994:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":9977,"indexExpression":{"id":9976,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9950,"src":"16022:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15994:40:34","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_storage","typeString":"struct ProposalLogic.Option storage ref"}},"id":9978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16035:9:34","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8823,"src":"15994:50:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9954,"id":9979,"nodeType":"Return","src":"15987:57:34"}]},"functionSelector":"63e9a61d","id":9981,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionVoteCount","nameLocation":"15652:18:34","nodeType":"FunctionDefinition","parameters":{"id":9951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9948,"mutability":"mutable","name":"proposalId","nameLocation":"15689:10:34","nodeType":"VariableDeclaration","scope":9981,"src":"15681:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9947,"name":"uint256","nodeType":"ElementaryTypeName","src":"15681:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9950,"mutability":"mutable","name":"optionIndex","nameLocation":"15718:11:34","nodeType":"VariableDeclaration","scope":9981,"src":"15710:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9949,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15670:66:34"},"returnParameters":{"id":9954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9981,"src":"15758:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9952,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15757:9:34"},"scope":10658,"src":"15643:409:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8744],"body":{"id":10009,"nodeType":"Block","src":"16122:501:34","statements":[{"assignments":[9987],"declarations":[{"constant":false,"id":9987,"mutability":"mutable","name":"proposalArrayLength","nameLocation":"16141:19:34","nodeType":"VariableDeclaration","scope":10009,"src":"16133:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9986,"name":"uint256","nodeType":"ElementaryTypeName","src":"16133:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9990,"initialValue":{"expression":{"id":9988,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"16163:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16173:6:34","memberName":"length","nodeType":"MemberAccess","src":"16163:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16133:46:34"},{"assignments":[9992],"declarations":[{"constant":false,"id":9992,"mutability":"mutable","name":"currentCounterValue","nameLocation":"16198:19:34","nodeType":"VariableDeclaration","scope":10009,"src":"16190:27:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9991,"name":"uint256","nodeType":"ElementaryTypeName","src":"16190:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9996,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9993,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"16220:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$8537_storage","typeString":"struct Counters.Counter storage ref"}},"id":9994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16233:7:34","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":8549,"src":"16220:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$8537_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$8537_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16220:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16190:52:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9997,"name":"proposalArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"16259:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9998,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"16282:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16259:42:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10007,"nodeType":"Block","src":"16451:165:34","statements":[{"expression":{"id":10005,"name":"MAX_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"16550:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9985,"id":10006,"nodeType":"Return","src":"16543:18:34"}]},"id":10008,"nodeType":"IfStatement","src":"16255:361:34","trueBody":{"id":10004,"nodeType":"Block","src":"16303:142:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10000,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"16410:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16432:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16410:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9985,"id":10003,"nodeType":"Return","src":"16403:30:34"}]}}]},"functionSelector":"fe10226d","id":10010,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentProposalId","nameLocation":"16069:20:34","nodeType":"FunctionDefinition","parameters":{"id":9982,"nodeType":"ParameterList","parameters":[],"src":"16089:2:34"},"returnParameters":{"id":9985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10010,"src":"16113:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9983,"name":"uint256","nodeType":"ElementaryTypeName","src":"16113:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16112:9:34"},"scope":10658,"src":"16060:563:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8753],"body":{"id":10076,"nodeType":"Block","src":"16764:838:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10022,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10014,"src":"16834:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10023,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"16847:17:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16865:6:34","memberName":"length","nodeType":"MemberAccess","src":"16847:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16834:37:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520696e646578206f7574206f6620626f756e6473","id":10026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16886:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""},"value":"Stake index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""}],"id":10021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16812:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16812:112:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10028,"nodeType":"ExpressionStatement","src":"16812:112:34"},{"assignments":[10030],"declarations":[{"constant":false,"id":10030,"mutability":"mutable","name":"amountToRelease","nameLocation":"16943:15:34","nodeType":"VariableDeclaration","scope":10076,"src":"16935:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10029,"name":"uint256","nodeType":"ElementaryTypeName","src":"16935:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10034,"initialValue":{"baseExpression":{"id":10031,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"16961:17:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10033,"indexExpression":{"id":10032,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10014,"src":"16979:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16961:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16935:55:34"},{"expression":{"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10035,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"17001:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10037,"indexExpression":{"id":10036,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10012,"src":"17023:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17001:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10038,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"17032:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17001:46:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10040,"nodeType":"ExpressionStatement","src":"17001:46:34"},{"condition":{"id":10041,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10016,"src":"17122:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10062,"nodeType":"IfStatement","src":"17118:257:34","trueBody":{"id":10061,"nodeType":"Block","src":"17137:238:34","statements":[{"assignments":[10043],"declarations":[{"constant":false,"id":10043,"mutability":"mutable","name":"penaltyAmount","nameLocation":"17160:13:34","nodeType":"VariableDeclaration","scope":10061,"src":"17152:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10042,"name":"uint256","nodeType":"ElementaryTypeName","src":"17152:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10050,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10044,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"17177:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":10045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17195:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"17177:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17176:22:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17201:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"17176:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17152:52:34"},{"expression":{"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10051,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"17238:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10052,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10043,"src":"17257:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17238:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10054,"nodeType":"ExpressionStatement","src":"17238:32:34"},{"expression":{"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10055,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"17301:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10057,"indexExpression":{"id":10056,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10012,"src":"17310:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17301:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10058,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10043,"src":"17319:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17301:31:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10060,"nodeType":"ExpressionStatement","src":"17301:31:34"}]}},{"expression":{"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10063,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"17428:17:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10065,"indexExpression":{"id":10064,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10014,"src":"17446:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17428:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17460:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17428:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10068,"nodeType":"ExpressionStatement","src":"17428:33:34"},{"eventCall":{"arguments":[{"id":10070,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10012,"src":"17545:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10071,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10014,"src":"17551:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10072,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10016,"src":"17563:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10073,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"17578:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10069,"name":"StakeReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9079,"src":"17531:13:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256)"}},"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17531:63:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10075,"nodeType":"EmitStatement","src":"17526:68:34"}]},"functionSelector":"cc4d6345","id":10077,"implemented":true,"kind":"function","modifiers":[{"id":10019,"kind":"modifierInvocation","modifierName":{"id":10018,"name":"onlyOwner","nameLocations":["16754:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16754:9:34"},"nodeType":"ModifierInvocation","src":"16754:9:34"}],"name":"handleStakeRelease","nameLocation":"16640:18:34","nodeType":"FunctionDefinition","parameters":{"id":10017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10012,"mutability":"mutable","name":"user","nameLocation":"16677:4:34","nodeType":"VariableDeclaration","scope":10077,"src":"16669:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10011,"name":"address","nodeType":"ElementaryTypeName","src":"16669:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10014,"mutability":"mutable","name":"stakeIndex","nameLocation":"16700:10:34","nodeType":"VariableDeclaration","scope":10077,"src":"16692:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10013,"name":"uint256","nodeType":"ElementaryTypeName","src":"16692:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10016,"mutability":"mutable","name":"penalizeStake","nameLocation":"16726:13:34","nodeType":"VariableDeclaration","scope":10077,"src":"16721:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10015,"name":"bool","nodeType":"ElementaryTypeName","src":"16721:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16658:88:34"},"returnParameters":{"id":10020,"nodeType":"ParameterList","parameters":[],"src":"16764:0:34"},"scope":10658,"src":"16631:971:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8760],"body":{"id":10287,"nodeType":"Block","src":"17733:2838:34","statements":[{"assignments":[10089],"declarations":[{"constant":false,"id":10089,"mutability":"mutable","name":"totalStake","nameLocation":"17749:10:34","nodeType":"VariableDeclaration","scope":10287,"src":"17744:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10088,"name":"uint","nodeType":"ElementaryTypeName","src":"17744:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10091,"initialValue":{"hexValue":"30","id":10090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17744:19:34"},{"assignments":[10094],"declarations":[{"constant":false,"id":10094,"mutability":"mutable","name":"proposal","nameLocation":"17791:8:34","nodeType":"VariableDeclaration","scope":10287,"src":"17774:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":10093,"nodeType":"UserDefinedTypeName","pathNode":{"id":10092,"name":"Proposal","nameLocations":["17774:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"17774:8:34"},"referencedDeclaration":8819,"src":"17774:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":10098,"initialValue":{"baseExpression":{"id":10095,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"17802:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10097,"indexExpression":{"id":10096,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"17812:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17802:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17774:49:34"},{"assignments":[10100],"declarations":[{"constant":false,"id":10100,"mutability":"mutable","name":"optionCount","nameLocation":"17897:11:34","nodeType":"VariableDeclaration","scope":10287,"src":"17892:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10099,"name":"uint","nodeType":"ElementaryTypeName","src":"17892:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10104,"initialValue":{"arguments":[{"id":10102,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"17927:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10101,"name":"getOptionsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9946,"src":"17911:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":10103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17911:27:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17892:46:34"},{"body":{"id":10122,"nodeType":"Block","src":"17990:74:34","statements":[{"expression":{"id":10120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10115,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10089,"src":"18005:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":10117,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"18038:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"18050:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10116,"name":"getOptionVoteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"18019:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":10119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18019:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18005:47:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10121,"nodeType":"ExpressionStatement","src":"18005:47:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"17968:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10110,"name":"optionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"17972:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17968:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10123,"initializationExpression":{"assignments":[10106],"declarations":[{"constant":false,"id":10106,"mutability":"mutable","name":"i","nameLocation":"17961:1:34","nodeType":"VariableDeclaration","scope":10123,"src":"17956:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10105,"name":"uint","nodeType":"ElementaryTypeName","src":"17956:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10108,"initialValue":{"hexValue":"30","id":10107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17965:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17956:10:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17985:3:34","subExpression":{"id":10112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"17985:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10114,"nodeType":"ExpressionStatement","src":"17985:3:34"},"nodeType":"ForStatement","src":"17951:113:34"},{"assignments":[10125],"declarations":[{"constant":false,"id":10125,"mutability":"mutable","name":"totalStakeExtractFee","nameLocation":"18358:20:34","nodeType":"VariableDeclaration","scope":10287,"src":"18353:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10124,"name":"uint","nodeType":"ElementaryTypeName","src":"18353:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10126,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10089,"src":"18382:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3830","id":10127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18395:2:34","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"18382:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18381:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18401:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"18381:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18353:51:34"},{"assignments":[10134],"declarations":[{"constant":false,"id":10134,"mutability":"mutable","name":"totalVotesForWinningOption","nameLocation":"18420:26:34","nodeType":"VariableDeclaration","scope":10287,"src":"18415:31:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10133,"name":"uint","nodeType":"ElementaryTypeName","src":"18415:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10141,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":10135,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"18449:15:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$8824_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ProposalLogic.Option storage ref[] storage ref)"}},"id":10137,"indexExpression":{"id":10136,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"18465:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18449:27:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$8824_storage_$dyn_storage","typeString":"struct ProposalLogic.Option storage ref[] storage ref"}},"id":10139,"indexExpression":{"id":10138,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10081,"src":"18491:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18449:68:34","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$8824_storage","typeString":"struct ProposalLogic.Option storage ref"}},"id":10140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18518:9:34","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8823,"src":"18449:78:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18415:112:34"},{"assignments":[10143],"declarations":[{"constant":false,"id":10143,"mutability":"mutable","name":"totalVotesForFailedOption","nameLocation":"18543:25:34","nodeType":"VariableDeclaration","scope":10287,"src":"18538:30:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10142,"name":"uint","nodeType":"ElementaryTypeName","src":"18538:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10147,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10144,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10089,"src":"18571:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10145,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10134,"src":"18597:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18571:52:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18538:85:34"},{"expression":{"arguments":[{"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18658:16:34","subExpression":{"expression":{"id":10149,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"18659:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18668:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"18659:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206d75737420626520696e61637469766520746f20736574746c6520726577617264732e","id":10152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18689:46:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""},"value":"Proposal must be inactive to settle rewards."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""}],"id":10148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18636:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18636:110:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10154,"nodeType":"ExpressionStatement","src":"18636:110:34"},{"expression":{"arguments":[{"id":10158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18765:19:34","subExpression":{"expression":{"id":10156,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"18766:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18775:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"18766:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265776172647320616c726561647920736574746c6564","id":10159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18786:25:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""},"value":"Rewards already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""}],"id":10155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18757:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18757:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10161,"nodeType":"ExpressionStatement","src":"18757:55:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10163,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10134,"src":"18833:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18833:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f74657320666f722077696e6e696e67206f7074696f6e","id":10166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18865:29:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""},"value":"No votes for winning option"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""}],"id":10162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18825:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18825:70:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10168,"nodeType":"ExpressionStatement","src":"18825:70:34"},{"body":{"id":10279,"nodeType":"Block","src":"19090:1407:34","statements":[{"assignments":[10183],"declarations":[{"constant":false,"id":10183,"mutability":"mutable","name":"voter","nameLocation":"19174:5:34","nodeType":"VariableDeclaration","scope":10279,"src":"19166:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10182,"name":"address","nodeType":"ElementaryTypeName","src":"19166:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10189,"initialValue":{"baseExpression":{"baseExpression":{"id":10184,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"19182:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":10186,"indexExpression":{"id":10185,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"19207:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19182:36:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10188,"indexExpression":{"id":10187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"19219:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19182:39:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19166:55:34"},{"assignments":[10191],"declarations":[{"constant":false,"id":10191,"mutability":"mutable","name":"optionId","nameLocation":"19244:8:34","nodeType":"VariableDeclaration","scope":10279,"src":"19236:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10190,"name":"uint256","nodeType":"ElementaryTypeName","src":"19236:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10197,"initialValue":{"baseExpression":{"baseExpression":{"id":10192,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"19255:19:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":10194,"indexExpression":{"id":10193,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"19275:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19255:31:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10196,"indexExpression":{"id":10195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"19287:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19255:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19236:53:34"},{"assignments":[10199],"declarations":[{"constant":false,"id":10199,"mutability":"mutable","name":"voteCount","nameLocation":"19312:9:34","nodeType":"VariableDeclaration","scope":10279,"src":"19304:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10198,"name":"uint256","nodeType":"ElementaryTypeName","src":"19304:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10205,"initialValue":{"baseExpression":{"baseExpression":{"id":10200,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"19324:20:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":10202,"indexExpression":{"id":10201,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"19345:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19324:32:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10204,"indexExpression":{"id":10203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"19357:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19324:35:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19304:55:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10207,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"19402:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10209,"indexExpression":{"id":10208,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"19419:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19402:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10210,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"19429:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19402:36:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206c6f636b656420766f74696e6720726967687473","id":10212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19457:33:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""},"value":"Not enough locked voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""}],"id":10206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19376:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19376:129:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10214,"nodeType":"ExpressionStatement","src":"19376:129:34"},{"expression":{"id":10219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10215,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"19522:16:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10217,"indexExpression":{"id":10216,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"19539:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19522:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10218,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"19549:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19522:36:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10220,"nodeType":"ExpressionStatement","src":"19522:36:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10221,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"19579:8:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10222,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10081,"src":"19591:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19579:27:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10277,"nodeType":"Block","src":"20107:379:34","statements":[{"assignments":[10252],"declarations":[{"constant":false,"id":10252,"mutability":"mutable","name":"voterPunish","nameLocation":"20134:11:34","nodeType":"VariableDeclaration","scope":10277,"src":"20126:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10251,"name":"uint256","nodeType":"ElementaryTypeName","src":"20126:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10253,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"20149:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10254,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"20161:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20149:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20148:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10257,"name":"totalVotesForFailedOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"20206:25:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20148:83:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20126:105:34"},{"expression":{"id":10262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10260,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"20295:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10261,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"20310:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20295:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10263,"nodeType":"ExpressionStatement","src":"20295:24:34"},{"expression":{"id":10268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10264,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"20338:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10266,"indexExpression":{"id":10265,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"20347:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20338:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10267,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"20357:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20338:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10269,"nodeType":"ExpressionStatement","src":"20338:30:34"},{"eventCall":{"arguments":[{"id":10271,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"20432:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10272,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"20439:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10273,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"20451:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20464:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10270,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"20414:17:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20414:56:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10276,"nodeType":"EmitStatement","src":"20409:61:34"}]},"id":10278,"nodeType":"IfStatement","src":"19575:911:34","trueBody":{"id":10250,"nodeType":"Block","src":"19608:493:34","statements":[{"assignments":[10225],"declarations":[{"constant":false,"id":10225,"mutability":"mutable","name":"voterReward","nameLocation":"19698:11:34","nodeType":"VariableDeclaration","scope":10250,"src":"19690:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10224,"name":"uint256","nodeType":"ElementaryTypeName","src":"19690:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10232,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10226,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"19713:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10227,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"19725:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19713:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19712:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10230,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10134,"src":"19770:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19712:84:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19690:106:34"},{"expression":{"id":10235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10233,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10225,"src":"19860:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10234,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"19875:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19860:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10236,"nodeType":"ExpressionStatement","src":"19860:24:34"},{"expression":{"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10237,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"19954:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10239,"indexExpression":{"id":10238,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"19963:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19954:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10240,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10225,"src":"19973:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19954:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10242,"nodeType":"ExpressionStatement","src":"19954:30:34"},{"eventCall":{"arguments":[{"id":10244,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"20048:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10245,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"20055:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10246,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10225,"src":"20067:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":10247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20080:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10243,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"20030:17:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20030:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10249,"nodeType":"EmitStatement","src":"20025:60:34"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"19013:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":10174,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"19017:24:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":10176,"indexExpression":{"id":10175,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"19042:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19017:36:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19054:6:34","memberName":"length","nodeType":"MemberAccess","src":"19017:43:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19013:47:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10280,"initializationExpression":{"assignments":[10170],"declarations":[{"constant":false,"id":10170,"mutability":"mutable","name":"i","nameLocation":"18993:1:34","nodeType":"VariableDeclaration","scope":10280,"src":"18985:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10169,"name":"uint256","nodeType":"ElementaryTypeName","src":"18985:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10172,"initialValue":{"hexValue":"30","id":10171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18997:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18985:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19075:3:34","subExpression":{"id":10179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"19075:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10181,"nodeType":"ExpressionStatement","src":"19075:3:34"},"nodeType":"ForStatement","src":"18966:1531:34"},{"expression":{"id":10285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10281,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"20538:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20547:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"20538:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20559:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20538:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10286,"nodeType":"ExpressionStatement","src":"20538:25:34"}]},"functionSelector":"e13b7b31","id":10288,"implemented":true,"kind":"function","modifiers":[{"id":10084,"kind":"modifierInvocation","modifierName":{"id":10083,"name":"onlyOwner","nameLocations":["17710:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"17710:9:34"},"nodeType":"ModifierInvocation","src":"17710:9:34"},{"id":10086,"kind":"modifierInvocation","modifierName":{"id":10085,"name":"nonReentrant","nameLocations":["17720:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2503,"src":"17720:12:34"},"nodeType":"ModifierInvocation","src":"17720:12:34"}],"name":"settleRewards","nameLocation":"17619:13:34","nodeType":"FunctionDefinition","parameters":{"id":10082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10079,"mutability":"mutable","name":"proposalId","nameLocation":"17651:10:34","nodeType":"VariableDeclaration","scope":10288,"src":"17643:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10078,"name":"uint256","nodeType":"ElementaryTypeName","src":"17643:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10081,"mutability":"mutable","name":"winningOptionId","nameLocation":"17680:15:34","nodeType":"VariableDeclaration","scope":10288,"src":"17672:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10080,"name":"uint256","nodeType":"ElementaryTypeName","src":"17672:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17632:70:34"},"returnParameters":{"id":10087,"nodeType":"ParameterList","parameters":[],"src":"17733:0:34"},"scope":10658,"src":"17610:2961:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8765],"body":{"id":10404,"nodeType":"Block","src":"20698:1225:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10296,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"20717:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10297,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"20731:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20741:6:34","memberName":"length","nodeType":"MemberAccess","src":"20731:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20717:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":10300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20749:26:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":10295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20709:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20709:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10302,"nodeType":"ExpressionStatement","src":"20709:67:34"},{"assignments":[10305],"declarations":[{"constant":false,"id":10305,"mutability":"mutable","name":"proposal","nameLocation":"20804:8:34","nodeType":"VariableDeclaration","scope":10404,"src":"20787:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":10304,"nodeType":"UserDefinedTypeName","pathNode":{"id":10303,"name":"Proposal","nameLocations":["20787:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"20787:8:34"},"referencedDeclaration":8819,"src":"20787:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":10309,"initialValue":{"baseExpression":{"id":10306,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"20815:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10308,"indexExpression":{"id":10307,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"20825:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20815:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20787:50:34"},{"expression":{"arguments":[{"expression":{"id":10311,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"20856:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20865:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"20856:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":10313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20873:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":10310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20848:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20848:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10315,"nodeType":"ExpressionStatement","src":"20848:53:34"},{"expression":{"arguments":[{"id":10319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20920:19:34","subExpression":{"expression":{"id":10317,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"20921:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20930:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"20921:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":10320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20941:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":10316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20912:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20912:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10322,"nodeType":"ExpressionStatement","src":"20912:53:34"},{"expression":{"arguments":[{"id":10324,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"20995:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10323,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10657,"src":"20976:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20976:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10326,"nodeType":"ExpressionStatement","src":"20976:31:34"},{"assignments":[10328],"declarations":[{"constant":false,"id":10328,"mutability":"mutable","name":"stakedAmount","nameLocation":"21065:12:34","nodeType":"VariableDeclaration","scope":10404,"src":"21057:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10327,"name":"uint256","nodeType":"ElementaryTypeName","src":"21057:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10331,"initialValue":{"expression":{"id":10329,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21080:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21089:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"21080:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21057:43:34"},{"condition":{"expression":{"id":10332,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21115:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21124:9:34","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":8816,"src":"21115:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10362,"nodeType":"Block","src":"21407:52:34","statements":[{"expression":{"id":10360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10356,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21422:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21431:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"21422:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21443:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"21422:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10361,"nodeType":"ExpressionStatement","src":"21422:25:34"}]},"id":10363,"nodeType":"IfStatement","src":"21111:348:34","trueBody":{"id":10355,"nodeType":"Block","src":"21135:266:34","statements":[{"assignments":[10335],"declarations":[{"constant":false,"id":10335,"mutability":"mutable","name":"currentDeposit","nameLocation":"21158:14:34","nodeType":"VariableDeclaration","scope":10355,"src":"21150:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10334,"name":"uint256","nodeType":"ElementaryTypeName","src":"21150:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10340,"initialValue":{"baseExpression":{"id":10336,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"21175:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10339,"indexExpression":{"expression":{"id":10337,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21197:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21206:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"21197:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21175:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21150:65:34"},{"expression":{"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10341,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"21230:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10344,"indexExpression":{"expression":{"id":10342,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21252:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21261:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"21252:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21230:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10345,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10328,"src":"21273:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10346,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"21305:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21273:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10349,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"21360:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10350,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10328,"src":"21377:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21360:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"21273:116:34","trueExpression":{"hexValue":"30","id":10348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21339:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21230:159:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10354,"nodeType":"ExpressionStatement","src":"21230:159:34"}]}},{"assignments":[10365],"declarations":[{"constant":false,"id":10365,"mutability":"mutable","name":"serviceFee","nameLocation":"21477:10:34","nodeType":"VariableDeclaration","scope":10404,"src":"21469:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10364,"name":"uint256","nodeType":"ElementaryTypeName","src":"21469:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10373,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10366,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21491:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21500:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"21491:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":10368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21514:1:34","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"21491:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21490:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21519:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"21490:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21469:53:34"},{"assignments":[10375],"declarations":[{"constant":false,"id":10375,"mutability":"mutable","name":"reward","nameLocation":"21571:6:34","nodeType":"VariableDeclaration","scope":10404,"src":"21563:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10374,"name":"uint256","nodeType":"ElementaryTypeName","src":"21563:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10376,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21581:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21590:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"21581:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":10378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21604:1:34","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"21581:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21580:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21609:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"21580:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21563:49:34"},{"assignments":[10385],"declarations":[{"constant":false,"id":10385,"mutability":"mutable","name":"profit","nameLocation":"21656:6:34","nodeType":"VariableDeclaration","scope":10404,"src":"21648:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10384,"name":"uint256","nodeType":"ElementaryTypeName","src":"21648:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10389,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10386,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10375,"src":"21665:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10387,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"21674:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21665:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21648:36:34"},{"expression":{"id":10395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10390,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"21697:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10393,"indexExpression":{"expression":{"id":10391,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21706:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21715:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"21706:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21697:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10394,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10385,"src":"21728:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21697:37:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10396,"nodeType":"ExpressionStatement","src":"21697:37:34"},{"eventCall":{"arguments":[{"id":10398,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"21840:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10399,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"21866:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21875:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"21866:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10401,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10385,"src":"21898:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10397,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"21796:29:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":10402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21796:119:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10403,"nodeType":"EmitStatement","src":"21791:124:34"}]},"functionSelector":"9d678da1","id":10405,"implemented":true,"kind":"function","modifiers":[{"id":10293,"kind":"modifierInvocation","modifierName":{"id":10292,"name":"onlyOwner","nameLocations":["20688:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20688:9:34"},"nodeType":"ModifierInvocation","src":"20688:9:34"}],"name":"settleFundsForAverageQuality","nameLocation":"20615:28:34","nodeType":"FunctionDefinition","parameters":{"id":10291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10290,"mutability":"mutable","name":"_proposalId","nameLocation":"20662:11:34","nodeType":"VariableDeclaration","scope":10405,"src":"20654:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10289,"name":"uint256","nodeType":"ElementaryTypeName","src":"20654:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20643:37:34"},"returnParameters":{"id":10294,"nodeType":"ParameterList","parameters":[],"src":"20698:0:34"},"scope":10658,"src":"20606:1317:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8770],"body":{"id":10521,"nodeType":"Block","src":"22026:1266:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10413,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10407,"src":"22045:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10414,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"22059:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22069:6:34","memberName":"length","nodeType":"MemberAccess","src":"22059:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22045:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":10417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22077:26:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":10412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22037:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22037:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10419,"nodeType":"ExpressionStatement","src":"22037:67:34"},{"assignments":[10422],"declarations":[{"constant":false,"id":10422,"mutability":"mutable","name":"proposal","nameLocation":"22132:8:34","nodeType":"VariableDeclaration","scope":10521,"src":"22115:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":10421,"nodeType":"UserDefinedTypeName","pathNode":{"id":10420,"name":"Proposal","nameLocations":["22115:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"22115:8:34"},"referencedDeclaration":8819,"src":"22115:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":10426,"initialValue":{"baseExpression":{"id":10423,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"22143:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10425,"indexExpression":{"id":10424,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10407,"src":"22153:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22143:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22115:50:34"},{"expression":{"arguments":[{"expression":{"id":10428,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22184:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22193:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"22184:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":10430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22201:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":10427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22176:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22176:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10432,"nodeType":"ExpressionStatement","src":"22176:53:34"},{"expression":{"arguments":[{"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22248:19:34","subExpression":{"expression":{"id":10434,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22249:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22258:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"22249:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":10437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22269:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":10433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22240:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22240:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10439,"nodeType":"ExpressionStatement","src":"22240:53:34"},{"expression":{"arguments":[{"id":10441,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10407,"src":"22323:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10440,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10657,"src":"22304:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22304:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10443,"nodeType":"ExpressionStatement","src":"22304:31:34"},{"assignments":[10445],"declarations":[{"constant":false,"id":10445,"mutability":"mutable","name":"stakedAmount","nameLocation":"22391:12:34","nodeType":"VariableDeclaration","scope":10521,"src":"22383:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10444,"name":"uint256","nodeType":"ElementaryTypeName","src":"22383:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10448,"initialValue":{"expression":{"id":10446,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22406:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22415:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"22406:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22383:43:34"},{"condition":{"expression":{"id":10449,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22441:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22450:9:34","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":8816,"src":"22441:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10479,"nodeType":"Block","src":"22774:52:34","statements":[{"expression":{"id":10477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10473,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22789:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22798:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"22789:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22810:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"22789:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10478,"nodeType":"ExpressionStatement","src":"22789:25:34"}]},"id":10480,"nodeType":"IfStatement","src":"22437:389:34","trueBody":{"id":10472,"nodeType":"Block","src":"22461:307:34","statements":[{"assignments":[10452],"declarations":[{"constant":false,"id":10452,"mutability":"mutable","name":"currentDeposit","nameLocation":"22525:14:34","nodeType":"VariableDeclaration","scope":10472,"src":"22517:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10451,"name":"uint256","nodeType":"ElementaryTypeName","src":"22517:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10457,"initialValue":{"baseExpression":{"id":10453,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"22542:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10456,"indexExpression":{"expression":{"id":10454,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22564:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22573:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"22564:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22542:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22517:65:34"},{"expression":{"id":10470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10458,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"22597:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10461,"indexExpression":{"expression":{"id":10459,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22619:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22628:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"22619:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22597:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10462,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"22640:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10463,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10452,"src":"22672:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22640:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10466,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10452,"src":"22727:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10467,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"22744:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22727:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22640:116:34","trueExpression":{"hexValue":"30","id":10465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22706:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22597:159:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10471,"nodeType":"ExpressionStatement","src":"22597:159:34"}]}},{"assignments":[10482],"declarations":[{"constant":false,"id":10482,"mutability":"mutable","name":"serviceFee","nameLocation":"22844:10:34","nodeType":"VariableDeclaration","scope":10521,"src":"22836:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10481,"name":"uint256","nodeType":"ElementaryTypeName","src":"22836:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10490,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10483,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22858:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22867:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"22858:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":10485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22881:1:34","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"22858:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22857:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22886:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"22857:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22836:53:34"},{"assignments":[10492],"declarations":[{"constant":false,"id":10492,"mutability":"mutable","name":"reward","nameLocation":"22938:6:34","nodeType":"VariableDeclaration","scope":10521,"src":"22930:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10491,"name":"uint256","nodeType":"ElementaryTypeName","src":"22930:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10493,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"22948:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22957:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"22948:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":10495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22971:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"22948:25:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22947:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22977:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"22947:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22930:50:34"},{"assignments":[10502],"declarations":[{"constant":false,"id":10502,"mutability":"mutable","name":"profit","nameLocation":"23025:6:34","nodeType":"VariableDeclaration","scope":10521,"src":"23017:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10501,"name":"uint256","nodeType":"ElementaryTypeName","src":"23017:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10503,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10492,"src":"23034:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10504,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10482,"src":"23043:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23034:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23017:36:34"},{"expression":{"id":10512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10507,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"23066:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10510,"indexExpression":{"expression":{"id":10508,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"23075:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23084:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"23075:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23066:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10511,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10502,"src":"23097:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23066:37:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10513,"nodeType":"ExpressionStatement","src":"23066:37:34"},{"eventCall":{"arguments":[{"id":10515,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10407,"src":"23209:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10516,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"23235:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23244:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"23235:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10518,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10502,"src":"23267:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10514,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"23165:29:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":10519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23165:119:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10520,"nodeType":"EmitStatement","src":"23160:124:34"}]},"functionSelector":"a24f8bd5","id":10522,"implemented":true,"kind":"function","modifiers":[{"id":10410,"kind":"modifierInvocation","modifierName":{"id":10409,"name":"onlyOwner","nameLocations":["22016:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"22016:9:34"},"nodeType":"ModifierInvocation","src":"22016:9:34"}],"name":"verifyComplianceAndExpectations","nameLocation":"21940:31:34","nodeType":"FunctionDefinition","parameters":{"id":10408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10407,"mutability":"mutable","name":"_proposalId","nameLocation":"21990:11:34","nodeType":"VariableDeclaration","scope":10522,"src":"21982:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10406,"name":"uint256","nodeType":"ElementaryTypeName","src":"21982:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21971:37:34"},"returnParameters":{"id":10411,"nodeType":"ParameterList","parameters":[],"src":"22026:0:34"},"scope":10658,"src":"21931:1361:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8775],"body":{"id":10622,"nodeType":"Block","src":"23403:1142:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10530,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10524,"src":"23422:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10531,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"23436:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23446:6:34","memberName":"length","nodeType":"MemberAccess","src":"23436:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23422:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":10534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23454:26:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":10529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23414:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23414:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10536,"nodeType":"ExpressionStatement","src":"23414:67:34"},{"assignments":[10539],"declarations":[{"constant":false,"id":10539,"mutability":"mutable","name":"proposal","nameLocation":"23509:8:34","nodeType":"VariableDeclaration","scope":10622,"src":"23492:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":10538,"nodeType":"UserDefinedTypeName","pathNode":{"id":10537,"name":"Proposal","nameLocations":["23492:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"23492:8:34"},"referencedDeclaration":8819,"src":"23492:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":10543,"initialValue":{"baseExpression":{"id":10540,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"23520:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10542,"indexExpression":{"id":10541,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10524,"src":"23530:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23520:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23492:50:34"},{"expression":{"arguments":[{"expression":{"id":10545,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23561:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23570:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"23561:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":10547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23578:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":10544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23553:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23553:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10549,"nodeType":"ExpressionStatement","src":"23553:53:34"},{"expression":{"arguments":[{"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23625:19:34","subExpression":{"expression":{"id":10551,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23626:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23635:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"23626:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":10554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23646:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":10550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23617:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23617:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10556,"nodeType":"ExpressionStatement","src":"23617:53:34"},{"expression":{"arguments":[{"id":10558,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10524,"src":"23700:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10557,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10657,"src":"23681:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23681:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10560,"nodeType":"ExpressionStatement","src":"23681:31:34"},{"assignments":[10562],"declarations":[{"constant":false,"id":10562,"mutability":"mutable","name":"stakedAmount","nameLocation":"23770:12:34","nodeType":"VariableDeclaration","scope":10622,"src":"23762:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10561,"name":"uint256","nodeType":"ElementaryTypeName","src":"23762:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10565,"initialValue":{"expression":{"id":10563,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23785:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23794:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"23785:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23762:43:34"},{"condition":{"expression":{"id":10566,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23820:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23829:9:34","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":8816,"src":"23820:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10596,"nodeType":"Block","src":"24153:52:34","statements":[{"expression":{"id":10594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10590,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"24168:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24177:9:34","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":8814,"src":"24168:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24189:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24168:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10595,"nodeType":"ExpressionStatement","src":"24168:25:34"}]},"id":10597,"nodeType":"IfStatement","src":"23816:389:34","trueBody":{"id":10589,"nodeType":"Block","src":"23840:307:34","statements":[{"assignments":[10569],"declarations":[{"constant":false,"id":10569,"mutability":"mutable","name":"currentDeposit","nameLocation":"23904:14:34","nodeType":"VariableDeclaration","scope":10589,"src":"23896:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10568,"name":"uint256","nodeType":"ElementaryTypeName","src":"23896:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10574,"initialValue":{"baseExpression":{"id":10570,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"23921:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10573,"indexExpression":{"expression":{"id":10571,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23943:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23952:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"23943:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23921:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23896:65:34"},{"expression":{"id":10587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10575,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"23976:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10578,"indexExpression":{"expression":{"id":10576,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"23998:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24007:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"23998:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23976:40:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10579,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10562,"src":"24019:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10580,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10569,"src":"24051:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24019:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10583,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10569,"src":"24106:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10584,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10562,"src":"24123:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24106:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24019:116:34","trueExpression":{"hexValue":"30","id":10582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24085:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23976:159:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10588,"nodeType":"ExpressionStatement","src":"23976:159:34"}]}},{"assignments":[10599],"declarations":[{"constant":false,"id":10599,"mutability":"mutable","name":"punishment","nameLocation":"24223:10:34","nodeType":"VariableDeclaration","scope":10622,"src":"24215:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10598,"name":"uint256","nodeType":"ElementaryTypeName","src":"24215:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10607,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10600,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"24237:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24246:11:34","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8810,"src":"24237:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":10602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24260:1:34","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"24237:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24236:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24265:3:34","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"24236:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24215:53:34"},{"expression":{"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10608,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"24310:8:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10611,"indexExpression":{"expression":{"id":10609,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"24319:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24328:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"24319:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24310:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10612,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"24341:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24310:41:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10614,"nodeType":"ExpressionStatement","src":"24310:41:34"},{"eventCall":{"arguments":[{"id":10616,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10524,"src":"24458:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10617,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"24484:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24493:8:34","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":8806,"src":"24484:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10619,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"24516:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10615,"name":"FundsPenalizedForNonCompliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"24413:30:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":10620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24413:124:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10621,"nodeType":"EmitStatement","src":"24408:129:34"}]},"functionSelector":"df63ba91","id":10623,"implemented":true,"kind":"function","modifiers":[{"id":10527,"kind":"modifierInvocation","modifierName":{"id":10526,"name":"onlyOwner","nameLocations":["23393:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"23393:9:34"},"nodeType":"ModifierInvocation","src":"23393:9:34"}],"name":"checkQualityComplianceBelowExpectations","nameLocation":"23309:39:34","nodeType":"FunctionDefinition","parameters":{"id":10525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10524,"mutability":"mutable","name":"_proposalId","nameLocation":"23367:11:34","nodeType":"VariableDeclaration","scope":10623,"src":"23359:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10523,"name":"uint256","nodeType":"ElementaryTypeName","src":"23359:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23348:37:34"},"returnParameters":{"id":10528,"nodeType":"ParameterList","parameters":[],"src":"23403:0:34"},"scope":10658,"src":"23300:1245:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8780],"body":{"id":10656,"nodeType":"Block","src":"24609:249:34","statements":[{"assignments":[10630],"declarations":[{"constant":false,"id":10630,"mutability":"mutable","name":"proposal","nameLocation":"24637:8:34","nodeType":"VariableDeclaration","scope":10656,"src":"24620:25:34","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"},"typeName":{"id":10629,"nodeType":"UserDefinedTypeName","pathNode":{"id":10628,"name":"Proposal","nameLocations":["24620:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":8819,"src":"24620:8:34"},"referencedDeclaration":8819,"src":"24620:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal"}},"visibility":"internal"}],"id":10634,"initialValue":{"baseExpression":{"id":10631,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"24648:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8819_storage_$dyn_storage","typeString":"struct ProposalLogic.Proposal storage ref[] storage ref"}},"id":10633,"indexExpression":{"id":10632,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10625,"src":"24658:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24648:22:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage","typeString":"struct ProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24620:50:34"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10635,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24685:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24691:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"24685:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":10637,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10630,"src":"24703:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24712:7:34","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8818,"src":"24703:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24685:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":10640,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10630,"src":"24723:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24732:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"24723:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24685:53:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10655,"nodeType":"IfStatement","src":"24681:170:34","trueBody":{"id":10654,"nodeType":"Block","src":"24740:111:34","statements":[{"expression":{"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10643,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10630,"src":"24755:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8819_storage_ptr","typeString":"struct ProposalLogic.Proposal storage pointer"}},"id":10645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24764:6:34","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8812,"src":"24755:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24773:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"24755:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10648,"nodeType":"ExpressionStatement","src":"24755:23:34"},{"eventCall":{"arguments":[{"id":10650,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10625,"src":"24820:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24833:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10649,"name":"ProposalStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"24798:21:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":10652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24798:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10653,"nodeType":"EmitStatement","src":"24793:46:34"}]}}]},"functionSelector":"6bff47e6","id":10657,"implemented":true,"kind":"function","modifiers":[],"name":"deactivateProposal","nameLocation":"24562:18:34","nodeType":"FunctionDefinition","parameters":{"id":10626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10625,"mutability":"mutable","name":"_proposalId","nameLocation":"24589:11:34","nodeType":"VariableDeclaration","scope":10657,"src":"24581:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10624,"name":"uint256","nodeType":"ElementaryTypeName","src":"24581:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24580:21:34"},"returnParameters":{"id":10627,"nodeType":"ParameterList","parameters":[],"src":"24609:0:34"},"scope":10658,"src":"24553:305:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10659,"src":"812:24049:34","usedErrors":[13,18,2375,2378,2484],"usedEvents":[24,2367,2372,8955,8961,8967,8977,8990,9002,9010,9018,9026,9034,9042,9048,9054,9069,9079,9085,9091,9101]}],"src":"33:24830:34"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"irOptimized":""}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ERC20FlashMint":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions, {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend overriding {maxFlashLoan} so that it correctly reflects the supply cap.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":\"ERC20FlashMint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0xde94f78563e985acb16868dae5955135207baa103e2a654108b6f043fd8c51c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b6f33918ae1ef9898bf976dbd62771ea10054cc330f8ca262e61ab6d0cdfa25\",\"dweb:/ipfs/QmReBtCQDR8F7pEd2Cwf2XWLtJNxQAKJiY3p7n7UZniwuL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"paused()":"5c975abb"}},"irOptimized":""}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ShortStrings.sol:ShortStrings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f1377d24f124bea1381627a398fd4075033b68071ec473f75d27771f1a041548"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 21:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\nobject \"ShortStrings_2756\" {\n    code {\n        {\n            /// @src 21:1255:4308  \"library ShortStrings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ShortStrings_2756_deployed\")\n            codecopy(_1, dataoffset(\"ShortStrings_2756_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\n    object \"ShortStrings_2756_deployed\" {\n        code {\n            {\n                /// @src 21:1255:4308  \"library ShortStrings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201324f930bfef97a67db8782d5ba50c7999ed538db9e9b059a8aaf30f10f0020264736f6c63430008180033\"\n    }\n}\n","hash":"01000007ff92847613618c737f6b7ecdcfe352ba41a24585f9fe648179723c19","factoryDependencies":{}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000cb5ffcc40512e38d91cda3debec06a8082ed4bcf948101ef8fb852fffd13e12c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 22:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_2866\" {\n    code {\n        {\n            /// @src 22:1245:3930  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_2866_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_2866_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 22:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_2866_deployed\" {\n        code {\n            {\n                /// @src 22:1245:3930  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ee36ed20e70c22da90626582036e3a679dee91b3f15ccee0f24d02fb10965a3764736f6c63430008180033\"\n    }\n}\n","hash":"010000074ba1a97c8e9a1fcbdb4f70c5bfa81b0803374d134c72f23d2b56f6f9","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000719dd442c7f4a1b3b7344e8ab3d5cd1d6da319ca6721dae9564a410704957626"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 23:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_3121\" {\n    code {\n        {\n            /// @src 23:251:3098  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_3121_deployed\")\n            codecopy(_1, dataoffset(\"Strings_3121_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 23:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_3121_deployed\" {\n        code {\n            {\n                /// @src 23:251:3098  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122015d014e01afb0ec54a072eeeb5f8ed281f0bb3587d83e29541b7b7693f196da864736f6c63430008180033\"\n    }\n}\n","hash":"0100000730cc61659c47f5524816733bf79407e03d1ce574d37f15880aef4b3b","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000daca8e2ed8d4281133ea242f6004fc1e234e485a9d5899b5d4584424e98896a7"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 24:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_3469\" {\n    code {\n        {\n            /// @src 24:344:7730  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_3469_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_3469_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 24:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_3469_deployed\" {\n        code {\n            {\n                /// @src 24:344:7730  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207c3c195e5100821c671548b6ed995f6142a269275c5db7e386d120baf64e976964736f6c63430008180033\"\n    }\n}\n","hash":"010000073648ffd5dc48aa6cf3d5f3562bbe56f16e0bda73d26d4659fb5113bb","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MessageHashUtils.sol:MessageHashUtils\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000bf9dfca8513deedfc90a41464e2f0ac9addd32872170f4bb08bba550f8603336"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 26:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\nobject \"MessageHashUtils_3770\" {\n    code {\n        {\n            /// @src 26:521:3756  \"library MessageHashUtils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MessageHashUtils_3770_deployed\")\n            codecopy(_1, dataoffset(\"MessageHashUtils_3770_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 26:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\n    object \"MessageHashUtils_3770_deployed\" {\n        code {\n            {\n                /// @src 26:521:3756  \"library MessageHashUtils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212204ce762655d32f9207eb8f0d17e76369843d9b1f7e5e7d69f4bc92ca35eb8d02464736f6c63430008180033\"\n    }\n}\n","hash":"010000075a4d2172313fb23ebea2c536830cde976a1184491f74f9f9bee44553","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b9997343189305e65cb1366a8d51efc86b77737b7c76a554f55edcc565f09087"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 27:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_4824\" {\n    code {\n        {\n            /// @src 27:203:15117  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_4824_deployed\")\n            codecopy(_1, dataoffset(\"Math_4824_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 27:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_4824_deployed\" {\n        code {\n            {\n                /// @src 27:203:15117  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205f9cca639bfc745709167f3ff7c154ea15aa3cc71167e98b8be106877e78748064736f6c63430008180033\"\n    }\n}\n","hash":"0100000798911312f54a46dfcf8ab4dfaf71febeed3770b6f375f15f8fc28051","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeCast.sol:SafeCast\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000a5e19b432c0be3383318f70de8714f1ab896f4981c6faa984a003f1b70afe3a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 28:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\nobject \"SafeCast_6579\" {\n    code {\n        {\n            /// @src 28:764:34691  \"library SafeCast {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeCast_6579_deployed\")\n            codecopy(_1, dataoffset(\"SafeCast_6579_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 28:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\n    object \"SafeCast_6579_deployed\" {\n        code {\n            {\n                /// @src 28:764:34691  \"library SafeCast {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206c6f909b0c5f722263595f7db140ed2c87e8b3d2a25f796ea16c350b625dce0964736f6c63430008180033\"\n    }\n}\n","hash":"01000007d25bc21dbf7c8447c53b8707bddeb965d0b5156a42228d2fdabf895e","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f79ab5b3c6988eccc172b543a5015a9728de779674ffeb9e45aeaec19a0697f3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 29:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_6684\" {\n    code {\n        {\n            /// @src 29:216:1263  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_6684_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_6684_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 29:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_6684_deployed\" {\n        code {\n            {\n                /// @src 29:216:1263  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205f70028e67f81dfb99f16af1731a10f485e5aaed6a2a0c52bf4ae0b72e4c9ce264736f6c63430008180033\"\n    }\n}\n","hash":"0100000730007d14165d0f493f93f480def153d8b0f8ccf213eed4b871179fcb","factoryDependencies":{}}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Checkpoints.sol:Checkpoints\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007973422caeffe7ca417f8954f1cfcbaea42582c9ca97d3a4079f5a0aed9f9e6d"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 30:\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\"\nobject \"Checkpoints_8256\" {\n    code {\n        {\n            /// @src 30:668:21139  \"library Checkpoints {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Checkpoints_8256_deployed\")\n            codecopy(_1, dataoffset(\"Checkpoints_8256_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 30:\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\"\n    object \"Checkpoints_8256_deployed\" {\n        code {\n            {\n                /// @src 30:668:21139  \"library Checkpoints {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cd9bf58323c1a59858ded9075a258ed4e1a71be5c0c28b7b64bf881c2928c17064736f6c63430008180033\"\n    }\n}\n","hash":"01000007f1fa130dabebcd6606c52d04c7bdac9bc49d4a5714fb9a7948292b9d","factoryDependencies":{}}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Time.sol:Time\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e898389cfdd5fead979c2846b054f67fd4a2b280d3fb1e1c486c28882747a6ba"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 31:\"@openzeppelin/contracts/utils/types/Time.sol\"\nobject \"Time_8531\" {\n    code {\n        {\n            /// @src 31:640:5094  \"library Time {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Time_8531_deployed\")\n            codecopy(_1, dataoffset(\"Time_8531_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 31:\"@openzeppelin/contracts/utils/types/Time.sol\"\n    object \"Time_8531_deployed\" {\n        code {\n            {\n                /// @src 31:640:5094  \"library Time {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122085f1781be4c8cf34b3c28bd6abeb0a6aa67e2febbde855ccb011339f73650c3864736f6c63430008180033\"\n    }\n}\n","hash":"01000007652614aad1c7945e5f0449240855e1f9b585e46bd2d1354aace957ad","factoryDependencies":{}}},"contracts/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009c6a089a610e7afef446673721105b184501732ea530e824498b25190629c8e2"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 32:\"contracts/Counters.sol\"\nobject \"Counters_8605\" {\n    code {\n        {\n            /// @src 32:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_8605_deployed\")\n            codecopy(_1, dataoffset(\"Counters_8605_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 32:\"contracts/Counters.sol\"\n    object \"Counters_8605_deployed\" {\n        code {\n            {\n                /// @src 32:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122028c3046287f2d18e7155ae8343bf61dcd4f438207468fbe91dff2f9160bdbfe064736f6c63430008180033\"\n    }\n}\n","hash":"010000076717ced082677e5aab24e9b41eb4d3d86b76f23ebea98ebf16b0a368","factoryDependencies":{}}},"contracts/IProposalLogic.sol":{"IProposalLogic":{"abi":[{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"checkQualityComplianceBelowExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createProposalWithOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"deactivateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionIndex","type":"uint256"}],"name":"getOptionVoteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getOptionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotingHistory","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"bool","name":"penalizeStake","type":"bool"}],"name":"handleStakeRelease","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"processUserStakedProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposalsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"settleFundsForAverageQuality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winningOptionId","type":"uint256"}],"name":"settleRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"submitProposalForReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"verifyComplianceAndExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"checkQualityComplianceBelowExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createProposalWithOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"deactivateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"}],\"name\":\"getOptionVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"penalizeStake\",\"type\":\"bool\"}],\"name\":\"handleStakeRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"processUserStakedProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"settleFundsForAverageQuality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"}],\"name\":\"settleRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"submitProposalForReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"verifyComplianceAndExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IProposalLogic.sol\":\"IProposalLogic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IProposalLogic.sol\":{\"keccak256\":\"0x0d51024db35812893ca46c601cb9fd9b1b1a21c50c05674051128566596f25ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861a27f308163c8519ad08c2c70372904e600a1e4484b532bedc529add523e31\",\"dweb:/ipfs/QmZx8fQ9yQKwS9Y1z64HhkLN2h5zWhGvpYdkb6GwRMyKzY\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"checkQualityComplianceBelowExpectations(uint256)":"df63ba91","createProposalWithOptions(string,string[],uint256,uint256)":"3257917a","deactivateProposal(uint256)":"6bff47e6","deposit(uint256)":"b6b55f25","getAvailableWithdrawBalance(address)":"bcfc4429","getContractBalance()":"6f9fb98a","getCurrentProposalId()":"fe10226d","getOptionVoteCount(uint256,uint256)":"63e9a61d","getOptionsCount(uint256)":"517a6257","getProposalStatus(uint256)":"401853b7","getUserBalance(address)":"47734892","getUserVotingHistory(address)":"0ff7c4a5","getUserVotingRights(address)":"6e16c790","handleStakeRelease(address,uint256,bool)":"cc4d6345","pause()":"8456cb59","processUserStakedProposal(address,string,uint256,string[],uint256,uint256)":"a46188ad","proposalsLength()":"44c7c867","settleFundsForAverageQuality(uint256)":"9d678da1","settleRewards(uint256,uint256)":"e13b7b31","submitProposalForReview(uint256)":"bbebdd25","unpause()":"3f4ba83a","verifyComplianceAndExpectations(uint256)":"a24f8bd5","vote(uint256,uint256,uint256)":"8a6655d6","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":""}},"contracts/ProposalLogic.sol":{"ProposalLogic":{"abi":[{"inputs":[{"internalType":"address","name":"_myToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"staked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"DepositForProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"FundsPenalizedForNonCompliance","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"}],"name":"FundsSettledForAverageQuality","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalAndOptionsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalConcluded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ProposalEndTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalForUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isWinner","type":"bool"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"},{"indexed":false,"internalType":"uint256","name":"amountReleased","type":"uint256"}],"name":"StakeReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isForProposal","type":"bool"}],"name":"TokensStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newUnlockTime","type":"uint256"}],"name":"UnlockTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":true,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_optionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountWithdrawn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceAfterWithdrawal","type":"uint256"}],"name":"WithdrawalDetailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserSstakeAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserStakerAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"added_proposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"checkQualityComplianceBelowExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createProposalWithOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"deactivateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionIndex","type":"uint256"}],"name":"getOptionVoteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getOptionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotingHistory","outputs":[{"internalType":"uint256[]","name":"proposalIds","type":"uint256[]"},{"internalType":"uint256[]","name":"optionIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"bool","name":"penalizeStake","type":"bool"}],"name":"handleStakeRelease","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"myToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"optionIdsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"processUserStakedProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalOptions","outputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"proposalTokenDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bool","name":"isWagered","type":"bool"},{"internalType":"uint256","name":"endTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"settleFundsForAverageQuality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winningOptionId","type":"uint256"}],"name":"settleRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakesForUser","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"unlockTime","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"bool","name":"isWagered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"submitProposalForReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"usedVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVotingHistory","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"verifyComplianceAndExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteCountsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterAddressesByProposal","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterIndexInProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingEndTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingRecords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"DepositForProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"FundsPenalizedForNonCompliance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"name\":\"FundsSettledForAverageQuality\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalAndOptionsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ProposalEndTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWinner\",\"type\":\"bool\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isForProposal\",\"type\":\"bool\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UnlockTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceAfterWithdrawal\",\"type\":\"uint256\"}],\"name\":\"WithdrawalDetailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserSstakeAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserStakerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"added_proposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"checkQualityComplianceBelowExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createProposalWithOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"deactivateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"}],\"name\":\"getOptionVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"optionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"penalizeStake\",\"type\":\"bool\"}],\"name\":\"handleStakeRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"optionIdsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"processUserStakedProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalOptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalTokenDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSettled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"settleFundsForAverageQuality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"}],\"name\":\"settleRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakesForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"submitProposalForReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usedVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVotingHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"verifyComplianceAndExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteCountsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterAddressesByProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterIndexInProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingEndTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProposalLogic.sol\":\"ProposalLogic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0xde94f78563e985acb16868dae5955135207baa103e2a654108b6f043fd8c51c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b6f33918ae1ef9898bf976dbd62771ea10054cc330f8ca262e61ab6d0cdfa25\",\"dweb:/ipfs/QmReBtCQDR8F7pEd2Cwf2XWLtJNxQAKJiY3p7n7UZniwuL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/IProposalLogic.sol\":{\"keccak256\":\"0x0d51024db35812893ca46c601cb9fd9b1b1a21c50c05674051128566596f25ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861a27f308163c8519ad08c2c70372904e600a1e4484b532bedc529add523e31\",\"dweb:/ipfs/QmZx8fQ9yQKwS9Y1z64HhkLN2h5zWhGvpYdkb6GwRMyKzY\"]},\"contracts/ProposalLogic.sol\":{\"keccak256\":\"0x19009eeed22f0d406a1f0f4b71fd0f74d741720258ba0fb5032864fdda215af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ee8c7440aa89cc530320d211f000beb3660af14b427941c0c00743252a8ba40\",\"dweb:/ipfs/QmSevxpRNKvAoNVjkLtBFTrjQN1j3VHFSPjYqwfvy2hgxE\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ProposalLogic.sol:ProposalLogic\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tptr.add\tr1, r0, r15\n\tptr.add\tr15, r0, stack[@ptr_calldata]\n\tadd\tr15, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr15, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.le\t@.BB0_16\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_62\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_55\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.gt\t@.BB0_52\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.eq\t@.BB0_324\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.eq\t@.BB0_328\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r4\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_332\n\tadd\t7, r0, r5\n\tsload\tr5, r1\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB0_338\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr2, r0, stack-[17]\n\tadd\tr3, r0, stack-[16]\n\tst.1\t0, r3\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_342\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[16], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_112\n\tst.1\t0, r3\n\tmul\t5, r2, r2, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI0_96[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tld\tr1, r1\n\tsub.s!\tstack-[12], r1, r1\n\tjump.ge\t@.BB0_346\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.le\t@.BB0_112\n\tst.1\t0, r3\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI0_84[0], r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_353\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_134[0], r0, r3\n.BB0_350:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tjump\t@.BB0_351\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t159, r1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_754\n\tadd\tr0, r0, r4\n.BB0_5:\n\tshl.s\t5, r4, r5\n\tptr.add\tr15, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_5\n.BB0_754:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r3, r3\n\tptr.add\tr15, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_7:\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.le\t@.BB0_9\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_16:\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.le\t@.BB0_17\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_52[0], r2, r3\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_56[0], r2, r3\n\tjump.eq\t@.BB0_270\n\tsub.s!\t@CPI0_57[0], r2, r3\n\tjump.eq\t@.BB0_273\n\tsub.s!\t@CPI0_58[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_262\n.BB0_62:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_70\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_67\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_578\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_597\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[15]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_606\n\tadd\t6, r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[16], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_608\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_105[0], r2, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[14], r2, r3\n\tjump.lt\t@.BB0_148\n\tsub.s\tstack-[14], r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[15], r0, r1\n\tjump.ne\t@.BB0_612\n.BB0_614:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.le\t@.BB0_112\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tsstore\tr1, r0\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_90[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_106[0], r0, r4\n\tjump\t@.BB0_573\n.BB0_9:\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_12\n\tld.1\t64, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_11:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_60[0], r2, r3\n\tjump.gt\t@.BB0_28\n\tsub.s!\t@CPI0_64[0], r2, r3\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_65[0], r2, r3\n\tjump.eq\t@.BB0_139\n\tsub.s!\t@CPI0_66[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t2, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tst.1\tr5, r1\n\tadd\t64, r4, r1\n\tand\t@CPI0_2[0], r2, r5\n\tst.1\tr1, r5\n\tand!\t@CPI0_143[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_144[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tsub.s!\t@CPI0_45[0], r2, r3\n\tjump.gt\t@.BB0_43\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.eq\t@.BB0_292\n\tsub.s!\t@CPI0_50[0], r2, r3\n\tjump.eq\t@.BB0_296\n\tsub.s!\t@CPI0_51[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getOptionVoteCount, @DEFAULT_UNWIND\n\tjump\t@.BB0_718\n.BB0_55:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_59\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.eq\t@.BB0_450\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_534\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_545\n.BB0_70:\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.gt\t@.BB0_74\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_707\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_712\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_550\n.BB0_12:\n\tshl.s\t8, r6, r2\n\tand\t@CPI0_3[0], r2, r2\n\tadd\tr3, r0, stack-[17]\n\tsload\tr1, r3\n\tand\t@CPI0_4[0], r3, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tshr.s\t8, r3, r2\n\tand\t@CPI0_2[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_67[0], r2, r3\n\tjump.le\t@.BB0_19\n\tsub.s!\t@CPI0_68[0], r2, r3\n\tjump.eq\t@.BB0_84\n\tsub.s!\t@CPI0_69[0], r2, r3\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_70[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_151[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.eq\t@.BB0_280\n\tsub.s!\t@CPI0_54[0], r2, r3\n\tjump.eq\t@.BB0_284\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tjump\t@.BB0_127\n.BB0_43:\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.eq\t@.BB0_301\n\tsub.s!\t@CPI0_47[0], r2, r3\n\tjump.eq\t@.BB0_304\n\tsub.s!\t@CPI0_48[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_139[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_311\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_321\n.BB0_28:\n\tsub.s!\t@CPI0_61[0], r2, r3\n\tjump.eq\t@.BB0_181\n\tsub.s!\t@CPI0_62[0], r2, r3\n\tjump.eq\t@.BB0_258\n\tsub.s!\t@CPI0_63[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tshr.s\t8, r2, r1\n\tand\t@CPI0_2[0], r1, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_265\n\tand!\t255, r2, r4\n\tjump.ne\t@.BB0_268\n\tadd\t@CPI0_141[0], r0, r1\n\tjump\t@.BB0_143\n.BB0_52:\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.eq\t@.BB0_393\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_395\n\tsub.s!\t@CPI0_39[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_429\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_400\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_95[0], r6, r4\n\tadd\t@CPI0_84[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_402\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_404\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\t@CPI0_96[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_436\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_438\n.BB0_436:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_99[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_438:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI0_100[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tand!\t@CPI0_101[0], r2, r1\n\tjump.ne\t@.BB0_442\n\tand\t@CPI0_89[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_439:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB0_440\n.BB0_446:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tsub\tstack-[17], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tjump\t@.BB0_422\n.BB0_67:\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_619\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_623\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_648\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_142\n\tadd\t2, r0, r1\n\tsstore\tr0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr3, r0, stack-[14]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_112\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[17]\n\tadd\tr0, r0, stack-[4]\n\tjump.ne\t@.BB0_653\n.BB0_664:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[9], r2, r2\n\tjump.le\t@.BB0_112\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[8]\n\tsub!\tstack-[4], r2, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[14], r0, r1\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI0_84[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_669\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_671\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_674\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_94[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n\tjump\t@.BB0_351\n.BB0_59:\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_546\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.eq\t@.BB0_551\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_577\n.BB0_74:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_724\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_732\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t1, r0, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_740\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_739\n.BB0_148:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_90\n.BB0_19:\n\tsub.s!\t@CPI0_71[0], r2, r3\n\tjump.eq\t@.BB0_77\n\tsub.s!\t@CPI0_72[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tjump\t@.BB0_127\n.BB0_273:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tjump\t@.BB0_275\n.BB0_296:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_298\n.BB0_284:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_address_dyn_37049, @DEFAULT_UNWIND\n\tjump\t@.BB0_288\n.BB0_304:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tjump\t@.BB0_126\n.BB0_270:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @storage_array_index_access_struct_Proposal__dyn, @DEFAULT_UNWIND\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_718\n.BB0_292:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tr15, r0, stack-[17]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[17], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_298:\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_740\n.BB0_280:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tjump\t@.BB0_138\n.BB0_301:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_deactivateProposal, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_77:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_struct_Proposal__dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t1, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tadd\t2, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t3, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t4, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t224, r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[13]\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[15], r0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tst.1\tr4, r2\n\tadd\t224, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tadd\t192, r4, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r5\n\tand!\t@CPI0_101[0], r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tand!\t65280, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tand!\t255, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tadd\t64, r4, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_539\n.BB0_123:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n.BB0_126:\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tjump\t@.BB0_127\n.BB0_84:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r8\n\tsload\tr8, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_152[0], r1, r1\n\tjump.ge\t@.BB0_89\n\tadd\tstack-[12], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r1\n\tadd\tr2, r0, stack-[11]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_109[0], r1, r5\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr2, r1, r9\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_743\n\tadd\tr0, r0, r5\n.BB0_95:\n\tshl.s\t5, r5, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_95\n.BB0_743:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_97\n.BB0_97:\n\tld.1\t64, r6\n\tadd\tr6, r4, r5\n\tadd\tr6, r0, stack-[10]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_109[0], r5, r7\n\tjump.gt\t@.BB0_89\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_89\n\tadd\tr9, r0, stack-[8]\n\tadd\tr8, r0, stack-[16]\n\tst.1\t64, r5\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[10], r0, r6\n\tst.1.inc\tr6, r5, r8\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_742\n\tadd\tr0, r0, r5\n.BB0_101:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_101\n.BB0_742:\n\tadd\tr8, r0, stack-[7]\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_103\n.BB0_103:\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[9]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_109[0], r4, r6\n\tjump.gt\t@.BB0_89\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r4\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r4, r7\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_741\n\tadd\tr0, r0, r4\n.BB0_107:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_107\n.BB0_741:\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_109\n.BB0_109:\n\tsub!\tstack-[12], r0, r1\n\tadd\tstack-[16], r0, r3\n\tjump.ne\t@.BB0_110\n.BB0_122:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t96, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t96, r2, r2\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tsub.s\tstack-[17], r2, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[17], r0, r3\n\tadd\t64, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_540\n.BB0_139:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r2\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB0_144\n.BB0_142:\n\tadd\t@CPI0_150[0], r0, r1\n\tjump\t@.BB0_143\n.BB0_258:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_262\n.BB0_135:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n.BB0_138:\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tjump\t@.BB0_127\n.BB0_181:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_109[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tadd\t@CPI0_116[0], r0, r4\n\tsub!\tr2, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_116[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_116[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr15, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_109[0], r2, r5\n\tjump.gt\t@.BB0_89\n\tadd\t191, r2, r5\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r5, r5\n\tsub.s!\t@CPI0_109[0], r5, r6\n\tjump.gt\t@.BB0_89\n\tst.1\t64, r5\n\tst.1\t128, r2\n\tadd\tr3, r2, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r4, r3\n\tptr.add\tr15, r3, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_747\n\tadd\tr0, r0, r6\n.BB0_190:\n\tshl.s\t5, r6, r7\n\tptr.add\tr3, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_190\n.BB0_747:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_192\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tshl.s\t3, r4, r4\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_192:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_109[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r2\n\tptr.add\tr15, r2, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_109[0], r5, r4\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\tstack-[16], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[15]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_109[0], r6, r8\n\tjump.gt\t@.BB0_89\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r6\n\tadd\tstack-[15], r0, r6\n\tst.1.inc\tr6, r5, r6\n\tadd\tr6, r0, stack-[9]\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r4\n\tsub!\tr4, r1, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_199\n.BB0_211:\n\tptr.add.s\t100, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsload\tr2, r2\n\tshr.s\t8, r2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_212\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\t1, r3, r3\n\tsstore\tr2, r3\n\tmul\t@CPI0_120[0], r1, stack-[12], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_215\n\tdiv\tstack-[12], r1, r1, r2\n\tsub.s!\t@CPI0_120[0], r1, r1\n\tjump.ne\t@.BB0_148\n.BB0_215:\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tld\tr1, r1\n\tadd\tstack-[12], r1, stack-[3]\n\tsub!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_148\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_121[0], r1, r2\n\tjump.gt\t@.BB0_89\n\tadd\t224, r1, r2\n\tst.1\t64, r2\n\tadd\t192, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_220\n.BB0_221:\n\tld.1\t64, r1\n\tadd\t96, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\t96, r1, r4\n\tld.1\t128, r2\n\tst.1\tr4, r2\n\tadd\t128, r1, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_224\n\tadd\tr0, r0, r5\n.BB0_223:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_223\n.BB0_224:\n\tadd\tr2, r4, r5\n\tst.1\tr5, r0\n\tadd\t31, r2, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r4, r2\n\tsub\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[15], r0, r12\n\tld.1\tr12, r3\n\tst.1\tr2, r3\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r4\n\tadd\t32, r4, r6\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_225\n.BB0_230:\n\tadd\t64, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_142[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_257\n.BB0_328:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tshr.s\t8, r2, r1\n\tand\t@CPI0_2[0], r1, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_330\n\tand!\t255, r2, r4\n\tjump.ne\t@.BB0_332\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tor\t1, r2, r2\n\tsstore\tr3, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_137[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_138[0], r0, r4\n.BB0_574:\n\tjump\t@.BB0_424\n.BB0_597:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_getAvailableWithdrawBalance, @DEFAULT_UNWIND\n\tjump\t@.BB0_718\n.BB0_534:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_Option__dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[17]\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t64, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t64, r3, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[15], r0, r4\n.BB0_539:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n.BB0_540:\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_712:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_address_dyn_37061, @DEFAULT_UNWIND\n\tjump\t@.BB0_716\n.BB0_395:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_398\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_400\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_95[0], r6, r4\n\tadd\t@CPI0_84[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_402\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_404\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\t@CPI0_96[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_408\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_410\n.BB0_408:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_99[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_410:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI0_100[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tand!\t@CPI0_101[0], r2, r1\n\tjump.ne\t@.BB0_414\n\tand\t@CPI0_89[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_411:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[17]\n\tjump.eq\t@.BB0_418\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_148\n\tmul\t5, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[17], r3\n\tsub.s!\t5, r2, r2\n\tjump.ne\t@.BB0_148\n.BB0_418:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tsub\tstack-[17], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n.BB0_422:\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_124[0], r0, r4\n\tjump\t@.BB0_423\n.BB0_623:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_626\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_400\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_95[0], r6, r4\n\tadd\t@CPI0_84[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_629\n.BB0_402:\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_126[0], r0, r1\n\tjump\t@.BB0_339\n.BB0_551:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t132, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\tr3, r0, stack-[16]\n\tst.1\t196, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_555\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_565\n.BB0_732:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n.BB0_262:\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tr15, r0, stack-[17]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[17], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tstack-[16], r0, r1\n\tjump\t@.BB0_128\n.BB0_324:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_326\n\tand\t@CPI0_76[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_424\n.BB0_578:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_583\n.BB0_582:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_112[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n.BB0_351:\n\tst.1\tr2, r3\n\tadd\t@CPI0_80[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_352\n.BB0_450:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t192, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_109[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tadd\t@CPI0_116[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_116[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_116[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr15, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_109[0], r3, r6\n\tjump.gt\t@.BB0_89\n\tadd\t191, r3, r6\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r6, r6\n\tsub.s!\t@CPI0_109[0], r6, r7\n\tjump.le\t@.BB0_457\n.BB0_89:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_90:\n\tst.1\t4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_707:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_545:\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n.BB0_716:\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tjump\t@.BB0_717\n.BB0_393:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n.BB0_577:\n\tand\t@CPI0_2[0], r1, r1\n\tjump\t@.BB0_740\n.BB0_619:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n.BB0_127:\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n.BB0_128:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_275:\n\tsload\tr1, r1\n.BB0_740:\n\tst.1\t128, r1\n\tadd\t@CPI0_73[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_546:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_550:\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n.BB0_288:\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_2[0], r1, r1\n.BB0_717:\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n.BB0_718:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_724:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_728\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_731\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_75[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_400:\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t24, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tjump\t@.BB0_339\n.BB0_332:\n\tadd\t@CPI0_135[0], r0, r1\n.BB0_143:\n\tst.1\t128, r1\n\tadd\t@CPI0_136[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_311:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_749\n\tadd\tr0, r0, r7\n.BB0_313:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_313\n.BB0_749:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_315\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_315:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_316\n.BB0_321:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tst.1\tr1, r2\n.BB0_323:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_144:\n\tadd\tr2, r0, stack-[17]\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsstore\tr0, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_148\n\tsub\tstack-[13], r1, r3\n\tsub.s!\tstack-[13], r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr1, r0, r1\n\tadd.ne\tr0, r0, r3\n\tld.1\t64, r6\n\tadd\t36, r6, r1\n\tadd\t4, r6, r2\n\tadd\tstack-[17], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_151\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\tr6, r3\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t40, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r6, r1\n\tadd\t@CPI0_148[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r6, r1\n\tadd\t@CPI0_149[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r6, r2\n\tadd.ge\tr1, r0, r6\n\tshl.s\t64, r6, r1\n\tor\t@CPI0_87[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_330:\n\tjump\t@.BB0_265\n.BB0_398:\n\tjump\t@.BB0_265\n.BB0_626:\n\tjump\t@.BB0_265\n.BB0_555:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_753\n\tadd\tr0, r0, r7\n.BB0_557:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_557\n.BB0_753:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_559\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_559:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_560\n.BB0_565:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_569\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\tr1, r3\n\tor\t132, r2, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r3\n\tadd\t@CPI0_115[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r2, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n.BB0_352:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_81[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_429:\n\tjump\t@.BB0_265\n.BB0_648:\n.BB0_265:\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_75[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_316:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_748\n\tadd\tr0, r0, r6\n.BB0_318:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_318\n.BB0_748:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_320\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_320:\n\tjump\t@.BB0_162\n.BB0_268:\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tsstore\tr3, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_137[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_140[0], r0, r4\n.BB0_424:\n.BB0_425:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_560:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_752\n\tadd\tr0, r0, r6\n.BB0_562:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_562\n.BB0_752:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_564\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_564:\n.BB0_162:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_583:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_148\n\tsub\tr3, r1, r1\n\tsub.s!\tstack-[17], r1, r1\n\tjump.lt\t@.BB0_582\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tld\tr1, r1\n\tadd\t@CPI0_107[0], r1, stack-[15]\n\tsub.s!\t@CPI0_108[0], r1, r1\n\tjump.gt\t@.BB0_148\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[17], r0, r1\n\tjump.ne\t@.BB0_591\n.BB0_590:\n\tsub!\tstack-[17], r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_109[0], r2, r4\n\tjump.gt\t@.BB0_89\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tadd\t@CPI0_110[0], r2, r2\n\tsload\tr2, r3\n\tand\t@CPI0_7[0], r3, r3\n\tor\tstack-[16], r3, r3\n\tsstore\tr2, r3\n\tadd\t6, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_109[0], r2, r4\n\tjump.gt\t@.BB0_89\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tadd\t@CPI0_105[0], r2, r2\n\tadd\tstack-[17], r0, r4\n\tsstore\tr2, r4\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tadd\tstack-[15], r0, r5\n\tst.1\tr3, r5\n\tand\t1, r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_90[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_111[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n.BB0_257:\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_323\n.BB0_728:\n.BB0_326:\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_75[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_739:\n\tsub.s\t1, r2, r1\n\tjump\t@.BB0_740\n.BB0_338:\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t27, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_127[0], r0, r1\n\tjump\t@.BB0_339\n.BB0_629:\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_404\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[14]\n\tadd\t@CPI0_96[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_633\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_635\n.BB0_633:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_99[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_635:\n\tadd\tstack-[14], r0, r1\n\tadd\t@CPI0_100[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tand!\t@CPI0_101[0], r2, r1\n\tjump.ne\t@.BB0_639\n\tand\t@CPI0_89[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_636:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tmul\t5, r1, stack-[17], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_642\n\tdiv\tstack-[17], r1, r1, r2\n\tsub.s!\t5, r1, r1\n\tjump.ne\t@.BB0_148\n.BB0_642:\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_148\n\tsub\tr3, r2, r3\n\tsstore\tr1, r3\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_102[0], r0, r4\n.BB0_423:\n\tadd\tstack-[13], r0, r5\n\tjump\t@.BB0_424\n.BB0_404:\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t21, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_125[0], r0, r1\n\tjump\t@.BB0_339\n.BB0_731:\n\tand\t@CPI0_76[0], r2, r2\n\tshl.s\t8, r6, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tjump\t@.BB0_425\n.BB0_606:\n\tjump\t@.BB0_265\n.BB0_569:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[16], r1, stack-[14]\n\tsub!\tstack-[14], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_148\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_114[0], r0, r4\n.BB0_573:\n\tadd\tstack-[17], r0, r5\n\tjump\t@.BB0_574\n.BB0_457:\n\tst.1\t64, r6\n\tst.1\t128, r3\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r4\n\tptr.add\tr15, r0, r2\n\tptr.add\tr15, r4, r4\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_751\n\tadd\tr0, r0, r7\n.BB0_460:\n\tshl.s\t5, r7, r8\n\tptr.add\tr4, r8, r9\n\tld\tr9, r9\n\tadd\t160, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_460\n.BB0_751:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_462\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tadd\t160, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_462:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add\tr2, r0, r15\n\tptr.add.s\t68, r15, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[3]\n\tptr.add.s\t100, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_109[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r3\n\tptr.add\tr15, r3, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_109[0], r6, r5\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r7\n\tand\tstack-[16], r7, r7\n\tld.1\t64, r8\n\tadd\tr8, r7, r7\n\tadd\tr8, r0, stack-[14]\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_109[0], r7, r9\n\tjump.gt\t@.BB0_89\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r7\n\tadd\tstack-[14], r0, r7\n\tst.1.inc\tr7, r6, r7\n\tadd\tr7, r0, stack-[8]\n\tadd\t36, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB0_469\n.BB0_481:\n\tptr.add.s\t164, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t132, r15, r3\n\tld\tr3, r3\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsload\tr2, r4\n\tshr.s\t8, r4, r4\n\tand\t@CPI0_2[0], r4, r5\n\tcontext.caller\tr4\n\tsub!\tr5, r4, r5\n\tjump.ne\t@.BB0_482\n\tadd\t5, r0, r4\n\tsload\tr4, r4\n\tsub!\tr4, r3, r4\n\tjump.le\t@.BB0_112\n\tadd\t6, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r3, r5\n\tjump.le\t@.BB0_112\n\tadd\t@CPI0_110[0], r3, r5\n\tsload\tr5, r5\n\tst.1\t0, r4\n\tadd\tstack-[15], r0, r2\n\tand\t@CPI0_2[0], r2, stack-[2]\n\tand\t@CPI0_2[0], r5, r2\n\tsub.s!\tstack-[2], r2, r2\n\tjump.ne\t@.BB0_486\n\tadd\t@CPI0_105[0], r3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[3], r2, r2\n\tjump.ne\t@.BB0_489\n\tmul\t@CPI0_120[0], r1, stack-[15], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_494\n\tdiv\tstack-[15], r1, r1, r2\n\tsub.s!\t@CPI0_120[0], r1, r1\n\tjump.ne\t@.BB0_148\n.BB0_494:\n\tadd\t@CPI0_97[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_98[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_216\n\tld\tr1, r1\n\tadd\tstack-[15], r1, stack-[1]\n\tsub!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_148\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_121[0], r1, r2\n\tjump.gt\t@.BB0_89\n\tadd\t224, r1, r2\n\tst.1\t64, r2\n\tadd\t192, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[3], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_498\n.BB0_499:\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t128, r1, r4\n\tld.1\t128, r3\n\tst.1\tr4, r3\n\tadd\t160, r1, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_502\n\tadd\tr0, r0, r5\n.BB0_501:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_501\n.BB0_502:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\tstack-[3], r0, r5\n\tst.1\tr2, r5\n\tadd\t31, r3, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r4, r2\n\tsub\tr2, r1, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[14], r0, r12\n\tld.1\tr12, r3\n\tst.1\tr2, r3\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r4\n\tadd\t32, r4, r6\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_503\n.BB0_508:\n\tadd\t96, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_123[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_257\n.BB0_216:\n\trevert\n.BB0_342:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_128[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tjump\t@.BB0_351\n.BB0_608:\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_103[0], r0, r1\n.BB0_339:\n\tst.1\t196, r1\n\tadd\t@CPI0_104[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_653:\n\tadd\t32784, r0, stack-[16]\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n.BB0_654:\n\tadd\tr4, r0, stack-[17]\n\tadd\tr3, r0, stack-[15]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_655\n\tst.1\t0, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_658\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r4\n\tshl.s\t1, r4, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_148\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[11], r4, r1\n\tjump.lt\t@.BB0_654\n\tsub!\tr3, r0, r1\n\tadd\tr0, r0, stack-[17]\n\tadd\tr0, r0, stack-[4]\n\tjump.eq\t@.BB0_664\n\tmul\t80, r3, stack-[17], r1\n\tdiv\tstack-[17], r3, r1, r2\n\tsub.s!\t80, r1, r1\n\tadd\tr3, r0, stack-[4]\n\tjump.ne\t@.BB0_148\n\tjump\t@.BB0_664\n.BB0_151:\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r3\n\tadd\t@CPI0_145[0], r0, r4\n\tadd\tr6, r0, stack-[13]\n\tst.1\tr6, r4\n\tadd\tstack-[16], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_153\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_163\n.BB0_414:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_411\n.BB0_639:\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_636\n.BB0_442:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_439\n.BB0_153:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_146[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_745\n\tadd\tr0, r0, r7\n.BB0_155:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_155\n.BB0_745:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_157\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_157:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_158\n.BB0_163:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_109[0], r1, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tadd\t68, r1, r2\n\tadd\t@CPI0_115[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[11], r0, r3\n\tjump\t@.BB0_351\n.BB0_110:\n\tadd\t32784, r0, stack-[13]\n\tadd\tr0, r0, r4\n.BB0_111:\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_112\n\tadd\tr4, r0, stack-[17]\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_112\n\tmul\t3, r4, stack-[15], r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tshl.s\t5, r4, r5\n\tadd\tr5, r0, stack-[14]\n\tadd\tstack-[8], r5, r2\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_112\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_112\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[7], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_112\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_112\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[6], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_111\n\tjump\t@.BB0_122\n.BB0_346:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_129[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_130[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n.BB0_491:\n\tst.1\tr2, r3\n\tadd\t@CPI0_80[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_612:\n\tadd\tstack-[14], r0, r2\n\tmul\t10, r2, stack-[11], r1\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_616\n\tadd\tstack-[11], r0, r2\n\tdiv.s\tstack-[14], r2, r1, r2\n\tsub.s!\t10, r1, r1\n\tjump.ne\t@.BB0_148\n.BB0_616:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_148\n\tsub\tstack-[14], r2, stack-[14]\n\tsub\tr3, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_614\n.BB0_440:\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_148\n\tmul\t10, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[17], r3\n\tsub.s!\t10, r2, r2\n\tjump.ne\t@.BB0_148\n\tjump\t@.BB0_446\n.BB0_655:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_79[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_351\n.BB0_658:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_82[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tjump\t@.BB0_351\n.BB0_158:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_744\n\tadd\tr0, r0, r6\n.BB0_160:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_160\n.BB0_744:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_162\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_162\n.BB0_353:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[10]\n\tsub!\tstack-[12], r2, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tsub\tstack-[12], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_148\n\tsub\tr2, r1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_360\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_133[0], r0, r3\n\tjump\t@.BB0_350\n.BB0_591:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[17], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r2\n\tjump\t@.BB0_590\n.BB0_669:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_85[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_86[0], r0, r3\n.BB0_490:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB0_491\n.BB0_199:\n\tadd\t@CPI0_116[0], r0, r5\n\tadd\tstack-[15], r0, r6\n\tjump\t@.BB0_200\n.BB0_210:\n\tadd\t32, r6, r6\n\tadd\tr9, r7, r7\n\tst.1\tr7, r0\n\tst.1\tr6, r8\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r7\n\tjump.ge\t@.BB0_211\n.BB0_200:\n\tptr.add\tr15, r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_109[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr7, r2, r10\n\tadd\t63, r10, r7\n\tsub!\tr7, r1, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr5, r0, r8\n\tand\t@CPI0_116[0], r7, r7\n\tsub!\tr7, r0, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tsub.s!\t@CPI0_116[0], r7, r7\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB0_2\n\tadd\t32, r10, r11\n\tptr.add\tr15, r11, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_109[0], r7, r8\n\tjump.gt\t@.BB0_89\n\tadd\t63, r7, r8\n\tand\tstack-[16], r8, r9\n\tld.1\t64, r8\n\tadd\tr8, r9, r9\n\tsub!\tr9, r8, r12\n\tadd\t0, r0, r12\n\tadd.lt\t1, r0, r12\n\tsub.s!\t@CPI0_109[0], r9, r13\n\tjump.gt\t@.BB0_89\n\tand!\t1, r12, r12\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r9\n\tst.1.inc\tr8, r7, r9\n\tadd\tr10, r7, r10\n\tadd\t64, r10, r10\n\tsub!\tr10, r1, r10\n\tjump.gt\t@.BB0_2\n\tadd\t32, r11, r10\n\tptr.add\tr15, r10, r10\n\tshr.s!\t5, r7, r11\n\tjump.eq\t@.BB0_746\n\tadd\tr0, r0, r12\n.BB0_208:\n\tshl.s\t5, r12, r13\n\tadd\tr9, r13, r14\n\tptr.add\tr10, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r11, r13\n\tjump.lt\t@.BB0_208\n.BB0_746:\n\tand!\t31, r7, r12\n\tjump.eq\t@.BB0_210\n\tshl.s\t5, r11, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r11\n\tshl.s\t3, r12, r12\n\tld.1\tr11, r13\n\tshl\tr13, r12, r13\n\tshr\tr13, r12, r13\n\tld\tr10, r10\n\tsub\t256, r12, r12\n\tshr\tr10, r12, r10\n\tshl\tr10, r12, r10\n\tor\tr10, r13, r10\n\tst.1\tr11, r10\n\tjump\t@.BB0_210\n.BB0_169:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r4\n\tsub\tstack-[15], r4, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tst.1\tr1, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_147[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_174\n.BB0_212:\n\tld.1\t64, r1\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_11\n.BB0_671:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_88[0], r0, r3\n.BB0_487:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tjump\t@.BB0_351\n.BB0_469:\n\tadd\t@CPI0_116[0], r0, r6\n\tadd\tstack-[14], r0, r7\n\tjump\t@.BB0_470\n.BB0_480:\n\tadd\t32, r7, r7\n\tadd\tr10, r8, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r9\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r8\n\tptr.add\tr2, r0, r15\n\tjump.ge\t@.BB0_481\n.BB0_470:\n\tptr.add\tr15, r4, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_109[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r3, r11\n\tadd\t63, r11, r8\n\tsub!\tr8, r1, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr6, r0, r9\n\tand\t@CPI0_116[0], r8, r8\n\tsub!\tr8, r0, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr6, r0, r10\n\tsub.s!\t@CPI0_116[0], r8, r8\n\tadd.ne\tr9, r0, r10\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB0_2\n\tadd\t32, r11, r12\n\tptr.add\tr15, r12, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_109[0], r8, r9\n\tjump.gt\t@.BB0_89\n\tadd\t63, r8, r9\n\tand\tstack-[16], r9, r10\n\tld.1\t64, r9\n\tadd\tr9, r10, r10\n\tsub!\tr10, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI0_109[0], r10, r14\n\tjump.gt\t@.BB0_89\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r10\n\tst.1.inc\tr9, r8, r10\n\tadd\tr11, r8, r11\n\tadd\t64, r11, r11\n\tsub!\tr11, r1, r11\n\tjump.gt\t@.BB0_2\n\tadd\t32, r12, r11\n\tptr.add\tr15, r11, r11\n\tshr.s!\t5, r8, r12\n\tjump.eq\t@.BB0_750\n\tadd\tr0, r0, r13\n.BB0_478:\n\tshl.s\t5, r13, r14\n\tadd\tr10, r14, r15\n\tptr.add\tr11, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r12, r14\n\tjump.lt\t@.BB0_478\n.BB0_750:\n\tand!\t31, r8, r13\n\tjump.eq\t@.BB0_480\n\tshl.s\t5, r12, r12\n\tptr.add\tr11, r12, r11\n\tadd\tr10, r12, r12\n\tshl.s\t3, r13, r13\n\tld.1\tr12, r14\n\tshl\tr14, r13, r14\n\tshr\tr14, r13, r14\n\tld\tr11, r11\n\tsub\t256, r13, r13\n\tshr\tr11, r13, r11\n\tshl\tr11, r13, r11\n\tor\tr11, r14, r11\n\tst.1\tr12, r11\n\tjump\t@.BB0_480\n.BB0_482:\n\tld.1\t64, r1\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tjump\t@.BB0_11\n.BB0_674:\n\tadd\tstack-[8], r0, r2\n\tsub\tstack-[4], r2, stack-[3]\n\tadd\tstack-[17], r0, r1\n\tdiv.s\t100, r1, stack-[10], r1\n\tadd\t19, r0, stack-[7]\n\tadd\t32784, r0, stack-[13]\n\tadd\t20, r0, stack-[6]\n\tadd\tr0, r0, stack-[17]\n.BB0_675:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_677\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[16]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_112\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_112\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[15], r1, r1\n\tjump.lt\t@.BB0_687\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_148\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tmul\tstack-[10], r4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tsub.s!\tstack-[9], r3, r2\n\tjump.ne\t@.BB0_692\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_703\n\tdiv\tr1, r4, r2, r3\n\tsub.s!\tstack-[10], r2, r2\n\tjump.ne\t@.BB0_148\n.BB0_703:\n\tdiv.s\tstack-[8], r1, stack-[12], r1\n\tsub!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t64, r1, r3\n\tadd\tstack-[5], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_700\n.BB0_692:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_694\n\tdiv\tr1, r4, r2, r3\n\tsub.s!\tstack-[10], r2, r2\n\tjump.ne\t@.BB0_148\n.BB0_694:\n\tadd\tstack-[8], r0, r3\n\tsub!\tstack-[4], r3, r2\n\tjump.eq\t@.BB0_695\n\tdiv.s\tstack-[3], r1, stack-[12], r1\n\tsub!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_148\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_148\n\tsub\tr3, r2, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n.BB0_700:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_90[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_91[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tadd\t1, r1, stack-[17]\n\tjump\t@.BB0_675\n.BB0_486:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_117[0], r0, r3\n\tjump\t@.BB0_487\n.BB0_360:\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_148\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_112\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_148\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_131[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r3\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tadd\t64, r3, r4\n\tadd\tstack-[14], r0, r2\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r2\n\tadd\tstack-[16], r0, r2\n\tst.1.inc\tr3, r2, r3\n\tadd\tstack-[17], r0, r2\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr3, r2\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[12], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tstack-[15], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[13]\n\tor\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_148\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tsub.s\t1, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_132[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[17], r0, r7\n\tjump\t@.BB0_425\n.BB0_220:\n\tadd\t13, r0, stack-[7]\n\tadd\t32784, r0, stack-[6]\n\tadd\tr0, r0, stack-[17]\n\tjump\t@.BB0_231\n.BB0_251:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[14], r0, r4\n.BB0_255:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t1, r2, stack-[17]\n\tld.1\tr5, r1\n\tsub!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_221\n.BB0_231:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_112\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_122[0], r4, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[17], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[9], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_109[0], r3, r2\n\tjump.gt\t@.BB0_89\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_109[0], r6, r2\n\tadd\tstack-[13], r0, r2\n\tjump.gt\t@.BB0_89\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_238\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[10]\n\tjump.lt\t@.BB0_243\n\tadd\tr3, r0, stack-[5]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[13], r0, r7\n\tjump.ge\t@.BB0_243\n.BB0_244:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_244\n.BB0_243:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_252\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r6\n\tand!\tstack-[16], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r7\n\tjump.eq\t@.BB0_249\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_248:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_248\n.BB0_249:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[15], r0, r5\n\tjump.ge\t@.BB0_251\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_251\n.BB0_252:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r5\n\tjump.eq\t@.BB0_254\n\tld.1\tr7, r1\n.BB0_254:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_255\n.BB0_489:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_118[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_119[0], r0, r3\n\tjump\t@.BB0_490\n.BB0_677:\n\tadd\tstack-[2], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_89[0], r1, r1\n\tor\t256, r1, r1\n\tsstore\tr3, r1\n\tadd\tstack-[5], r0, r1\n.BB0_174:\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_687:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_93[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tjump\t@.BB0_351\n.BB0_225:\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n\tjump\t@.BB0_226\n.BB0_229:\n\tadd\tr7, r6, r8\n\tst.1\tr8, r0\n\tadd\t31, r7, r7\n\tand\tstack-[16], r7, r7\n\tadd\tr7, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.ge\t@.BB0_230\n.BB0_226:\n\tsub\tr6, r2, r7\n\tsub.s\t32, r7, r7\n\tadd\t32, r5, r5\n\tst.1\tr5, r7\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_229\n\tadd\tr0, r0, r9\n.BB0_228:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_228\n\tjump\t@.BB0_229\n.BB0_695:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_90\n.BB0_498:\n\tadd\t13, r0, stack-[6]\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, stack-[15]\n\tjump\t@.BB0_509\n.BB0_528:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[13], r0, r4\n.BB0_532:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r2\n\tadd\t1, r2, stack-[15]\n\tld.1\tr5, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_499\n.BB0_509:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_112\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_122[0], r4, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[15], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[8], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_109[0], r3, r2\n\tjump.gt\t@.BB0_89\n\tadd\tr4, r0, stack-[13]\n\tadd\tr3, r0, stack-[12]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_109[0], r6, r2\n\tadd\tstack-[12], r0, r2\n\tjump.gt\t@.BB0_89\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_238\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\tr6, r0, stack-[10]\n\tadd\tr5, r0, stack-[9]\n\tjump.lt\t@.BB0_520\n\tadd\tr3, r0, stack-[4]\n\tadd\tr7, r0, stack-[12]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[12], r0, r7\n\tjump.ge\t@.BB0_520\n.BB0_521:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_521\n.BB0_520:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_529\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r6\n\tand!\tstack-[16], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r7\n\tjump.eq\t@.BB0_526\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_525:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_525\n.BB0_526:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[14], r0, r5\n\tjump.ge\t@.BB0_528\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_528\n.BB0_529:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r5\n\tjump.eq\t@.BB0_531\n\tld.1\tr7, r1\n.BB0_531:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_532\n.BB0_112:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_90\n.BB0_238:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_90\n.BB0_503:\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n\tjump\t@.BB0_504\n.BB0_507:\n\tadd\tr7, r6, r8\n\tst.1\tr8, r0\n\tadd\t31, r7, r7\n\tand\tstack-[16], r7, r7\n\tadd\tr7, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.ge\t@.BB0_508\n.BB0_504:\n\tsub\tr6, r2, r7\n\tsub.s\t32, r7, r7\n\tadd\t32, r5, r5\n\tst.1\tr5, r7\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_507\n\tadd\tr0, r0, r9\n.BB0_506:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_506\n\tjump\t@.BB0_507\n.func_end0:\n\nstorage_array_index_access_struct_Proposal__dyn:\n.func_begin1:\n\tadd\t7, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin2:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB2_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB2_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_10\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB2_4\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB2_13:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB2_13\n\tjump\t@.BB2_4\n.BB2_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB2_4:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_2[0], r1, r3\n\tjump.gt\t@.BB2_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB2_2\n.BB2_6:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB2_2:\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end3:\n\nabi_encode_array_uint256_dyn:\n.func_begin4:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB4_3\n\tadd\tr0, r0, r2\n.BB4_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB4_2\n.BB4_3:\n\tret\n.func_end4:\n\nstorage_array_index_access_struct_VoteRecord__dyn:\n.func_begin5:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB5_1\n\tst.1\t0, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_3\n\tadd\tstack-[1], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nstorage_array_index_access_address_dyn_37049:\n.func_begin6:\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB6_1\n\tst.1\t0, r2\n\tadd\t@CPI6_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB6_1:\n\tadd\t@CPI6_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nstorage_array_index_access_address_dyn_37061:\n.func_begin7:\n\tadd\t6, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB7_1\n\tst.1\t0, r2\n\tadd\t@CPI7_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nstorage_array_index_access_address_dyn:\n.func_begin8:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB8_1\n\tst.1\t0, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_uint256t_uint256:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nstorage_array_index_access_struct_Option__dyn:\n.func_begin10:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB10_1\n\tst.1\t0, r1\n\tadd\t@CPI10_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB10_1:\n\tadd\t@CPI10_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\narray_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr:\n.func_begin11:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r5\n\tadd\t7, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tjump.ge\t@.BB11_1\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tst.1\t0, r2\n\tld.1.inc\tr5, r2, r3\n\tand\t@CPI11_1[0], r2, r2\n\tmul\t5, r1, r6, r1\n\tadd\t@CPI11_2[0], r6, r1\n\tsload\tr1, r4\n\tand\t@CPI11_3[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_4[0], r6, r4\n\tld.1\tr3, r3\n\tld.1.inc\tr3, r7, r8\n\tsub.s!\t@CPI11_5[0], r7, r1\n\tjump.gt\t@.BB11_1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r9\n\tadd.ne\tr1, r0, r9\n\tsub.s!\t31, r9, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB11_5\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t32, r9, r1\n\tadd\tr5, r0, stack-[7]\n\tadd\tr6, r0, stack-[6]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr7, r0, stack-[4]\n\tjump.lt\t@.BB11_11\n\tadd\tr9, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI11_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_8\n\tadd\tstack-[4], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB11_11\n.BB11_12:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB11_12\n.BB11_11:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB11_21\n\tst.1\t0, r4\n\tadd\t@CPI11_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_8\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB11_18\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB11_17:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB11_17\n.BB11_18:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB11_20\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB11_20:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB11_13\n.BB11_21:\n\tsub!\tr7, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB11_23\n\tld.1\tr8, r1\n.BB11_23:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r7, r2\n\tor\tr1, r2, r1\n.BB11_13:\n\tsstore\tr4, r1\n\tadd\t64, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI11_8[0], r6, r2\n\tsstore\tr2, r1\n\tadd\t160, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI11_9[0], r0, r2\n\tsub!\tr1, r0, r1\n\tadd.eq\tr0, r0, r2\n\tadd\t96, r5, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\t@CPI11_10[0], r6, r1\n\tsload\tr1, r3\n\tand\t@CPI11_11[0], r3, r3\n\tor.ne\t1, r3, r3\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tor.ne\t256, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_12[0], r6, r1\n\tadd\t192, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB11_1:\n\tadd\t@CPI11_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB11_2\n.BB11_5:\n\tadd\t@CPI11_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n.BB11_2:\n\tst.1\t4, r1\n\tadd\t@CPI11_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_getOptionVoteCount:\n.func_begin12:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB12_1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_4\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[1], r2, r2\n\tjump.le\t@.BB12_6\n\tst.1\t0, r1\n\tadd\t@CPI12_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_4\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tret\n.BB12_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB12_2\n.BB12_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n.BB12_2:\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tsub.s!\t@CPI12_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_deactivateProposal:\n.func_begin13:\n\tnop\tstack+=[3]\n\tadd\t7, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB13_1\n\tst.1\t0, r3\n\tadd\tr1, r0, stack-[1]\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[2]\n\tadd\t@CPI13_2[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI13_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI13_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_3\n\tadd\tstack-[2], r0, r2\n\tadd\t@CPI13_6[0], r2, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.gt\t@.BB13_6\n\tand!\t255, r3, r1\n\tjump.eq\t@.BB13_7\n.BB13_6:\n\tsub.s\t256, r0, r1\n\tand\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[1], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI13_4[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI13_8[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_8\n.BB13_7:\n\tret\n.BB13_1:\n\tadd\t@CPI13_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\trevert\n.BB13_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_getAvailableWithdrawBalance:\n.func_begin14:\n\tnop\tstack+=[2]\n\tand\t@CPI14_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_1[0], r1, r2\n\tadd.ge\t@CPI14_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_5\n\tsub\tstack-[2], r1, r1\n\tsub.s!\tstack-[2], r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub!\tr2, r0, r2\n\tadd.ne\tr0, r0, r1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_5:\n\tadd\t@CPI14_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin15:\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_2\n\tld\tr1, r1\n\tret\n.BB16_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\n__farcall:\n.func_begin16:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n__staticcall:\n.func_begin17:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\nCPI5_2:\nCPI8_2:\nCPI10_2:\nCPI11_6:\nCPI12_2:\nCPI13_4:\nCPI14_1:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI11_1:\nCPI14_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_4:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_5:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\nCPI11_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_8:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_9:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_10:\nCPI1_1:\nCPI2_4:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI10_1:\nCPI11_14:\nCPI13_1:\nCPI14_4:\n\t.cell 2852213850513516153367582212096\nCPI0_11:\n\t.cell 1901074597\nCPI0_12:\n\t.cell 3152796964\nCPI0_13:\n\t.cell 3803331015\nCPI0_14:\n\t.cell 4076725130\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 4103518880\nCPI0_17:\n\t.cell 4262470253\nCPI0_18:\n\t.cell 3803331016\nCPI0_19:\n\t.cell 3980728009\nCPI0_20:\n\t.cell 3986733060\nCPI0_21:\n\t.cell 3713797537\nCPI0_22:\n\t.cell 3713797538\nCPI0_23:\n\t.cell 3747854993\nCPI0_24:\n\t.cell 3778771761\nCPI0_25:\n\t.cell 3152796965\nCPI0_26:\n\t.cell 3170649129\nCPI0_27:\n\t.cell 3427623749\nCPI0_28:\n\t.cell 2757855404\nCPI0_29:\n\t.cell 2877899643\nCPI0_30:\n\t.cell 2877899644\nCPI0_31:\n\t.cell 3065339685\nCPI0_32:\n\t.cell 3103586615\nCPI0_33:\n\t.cell 2757855405\nCPI0_34:\n\t.cell 2839235489\nCPI0_35:\n\t.cell 2847684369\nCPI0_36:\n\t.cell 2376452954\nCPI0_37:\n\t.cell 2376452955\nCPI0_38:\n\t.cell 2640809377\nCPI0_39:\n\t.cell 2723122133\nCPI0_40:\n\t.cell 1901074598\nCPI0_41:\n\t.cell 2220280665\nCPI0_42:\n\t.cell 2321962454\nCPI0_43:\n\t.cell 1075336118\nCPI0_44:\n\t.cell 1544768869\nCPI0_45:\n\t.cell 1811892197\nCPI0_46:\n\t.cell 1811892198\nCPI0_47:\n\t.cell 1846986640\nCPI0_48:\n\t.cell 1872738698\nCPI0_49:\n\t.cell 1544768870\nCPI0_50:\n\t.cell 1553423035\nCPI0_51:\n\t.cell 1676256797\nCPI0_52:\n\t.cell 1198737553\nCPI0_53:\n\t.cell 1198737554\nCPI0_54:\n\t.cell 1222874531\nCPI0_55:\n\t.cell 1366975063\nCPI0_56:\n\t.cell 1075336119\nCPI0_57:\n\t.cell 1153943655\nCPI0_58:\n\t.cell 1155179047\nCPI0_59:\n\t.cell 669136354\nCPI0_60:\n\t.cell 844599673\nCPI0_61:\n\t.cell 844599674\nCPI0_62:\n\t.cell 977132945\nCPI0_63:\n\t.cell 1061922874\nCPI0_64:\n\t.cell 669136355\nCPI0_65:\n\t.cell 773487949\nCPI0_66:\n\t.cell 793533407\nCPI0_67:\n\t.cell 267895972\nCPI0_68:\n\t.cell 267895973\nCPI0_69:\n\t.cell 423634831\nCPI0_70:\n\t.cell 602814139\nCPI0_71:\n\t.cell 20770955\nCPI0_72:\n\t.cell 253181954\nCPI0_73:\n\t.cell 2535301202817642044428229017600\nCPI0_74:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_75:\n\t.cell 2852213852874699394802404818944\nCPI0_76:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_77:\nCPI12_4:\nCPI13_7:\nCPI14_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_78:\n\t.cell 2535301200456458802993406410752\nCPI0_79:\nCPI12_0:\n\t.cell 36387217577141696539834861424258368761420197673782181793414050108270671036416\nCPI0_80:\nCPI12_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_81:\nCPI12_3:\n\t.cell 7922816251426433759354395033600\nCPI0_82:\nCPI12_5:\n\t.cell 35931405354438819285617658595495920097445416950975553418838194011793141006336\nCPI0_83:\nCPI2_1:\nCPI5_3:\nCPI8_3:\nCPI10_3:\nCPI11_7:\nCPI12_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_84:\nCPI11_10:\nCPI13_6:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207157\nCPI0_85:\n\t.cell 52659807869801627832262510997813479345293585015266786474190641726690624012288\nCPI0_86:\n\t.cell 36387217577141696539835725718333351628711840515630656354712003733776015517044\nCPI0_87:\n\t.cell 10458117451882892562347801444352\nCPI0_88:\n\t.cell 37268929072347479319882973977646622039547198692478371896653154821649582784512\nCPI0_89:\n\t.cell -65281\nCPI0_90:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_91:\n\t.cell 9320874622402338414002265186837945751613745187773596752754247302760547834106\nCPI0_92:\nCPI1_0:\nCPI2_3:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI10_0:\nCPI11_13:\nCPI13_0:\nCPI14_3:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_93:\n\t.cell 35477323689661671948852797192714902841531780316315243652547593457851088270080\nCPI0_94:\n\t.cell 35476746262579530006295505699313365636224236574709885331482285976688160407552\nCPI0_95:\nCPI1_2:\nCPI11_2:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207160\nCPI0_96:\nCPI11_12:\nCPI13_2:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207156\nCPI0_97:\nCPI13_3:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_98:\nCPI13_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_99:\nCPI13_8:\n\t.cell 47443033188551058709262449094704824964971970972350694975387646557955244442895\nCPI0_100:\nCPI11_8:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207158\nCPI0_101:\n\t.cell 16711680\nCPI0_102:\n\t.cell -15448274557970599020342357832252787846699662468216016471202955423099222326424\nCPI0_103:\n\t.cell 37747593056685209803443802286123549407705676235929409745208007568515101884416\nCPI0_104:\n\t.cell 7922816253787617000789217640448\nCPI0_105:\nCPI7_2:\n\t.cell -4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_106:\n\t.cell -39994767581283235888763294866136160713765770987569152610075762752638452984405\nCPI0_107:\n\t.cell 604800\nCPI0_108:\n\t.cell -604801\nCPI0_109:\nCPI2_2:\nCPI11_5:\n\t.cell 18446744073709551615\nCPI0_110:\nCPI6_2:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_111:\n\t.cell 42001972239423703571445541791532579481923828429046493072436209271122319847557\nCPI0_112:\n\t.cell 33213987989631693067883787898814815401940191597450698095377559960427851415552\nCPI0_113:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_114:\n\t.cell 20644549604082266639320257001935285394590065917650136896563126397825491550916\nCPI0_115:\n\t.cell 38196372293521921433411762994267191979435640421026993835185098046675554926592\nCPI0_116:\nCPI9_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_117:\n\t.cell 52652740479751763535009941535404145553681129640394898682527796418059897405440\nCPI0_118:\n\t.cell 47687999144296217495830161024715922219131381522400987873099915989063997325312\nCPI0_119:\n\t.cell 37747593056713065993060345481711466832112961560299923234275860844699068625440\nCPI0_120:\n\t.cell 86400\nCPI0_121:\n\t.cell 18446744073709551391\nCPI0_122:\n\t.cell 18446744073709551551\nCPI0_123:\n\t.cell 46568107024888644402963050616218326356669501393391917594788281012692919682643\nCPI0_124:\n\t.cell 31814455593045371808710356632721295737477827034060732347023710796849866057672\nCPI0_125:\n\t.cell 31869382407624765961839443156653874141101739777257194269273696000328205336576\nCPI0_126:\n\t.cell 36387217577141696539835341724850825828704487447770704987832489809917434134528\nCPI0_127:\n\t.cell 38178729326672700412052026471650177188377947303277119371474230891316403765248\nCPI0_128:\n\t.cell 38178729326566573358854814593691048060526621130111590168150889920220215902208\nCPI0_129:\n\t.cell 52188108014675451492885792905289607055164646762442067769437487926260617183232\nCPI0_130:\n\t.cell 38178729327303348024370194221094171269603331930812759559094865152464403787887\nCPI0_131:\n\t.cell 18446744073709551519\nCPI0_132:\n\t.cell -27514650628698614327385758459027185577806530076164398494097370979218518502413\nCPI0_133:\n\t.cell 33213987989631693067883787898815262639149058089589072814951568724554042834944\nCPI0_134:\n\t.cell 38178729326672700412052026471650289017067364532791592966292656364482157608960\nCPI0_135:\n\t.cell -17534146137427991961187300527469025899936537448588222841481668375017980690432\nCPI0_136:\n\t.cell 316912652418240591808998408192\nCPI0_137:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_138:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI0_139:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_140:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI0_141:\n\t.cell -51570510111590677826358578368815064033314002580121246528039059915098583728128\nCPI0_142:\n\t.cell -9685120155672097683973861192804685257473605254391586424766234667955514533005\nCPI0_143:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_144:\n\t.cell 10141204801825835211973625643008\nCPI0_145:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_146:\n\t.cell 5387515050969974956360988622848\nCPI0_147:\n\t.cell 38843706945183341624331870532237280948374425637807400008023894331521926152796\nCPI0_148:\n\t.cell 54011551340199394326802475052324827152176255806260853321975479828561184948224\nCPI0_149:\n\t.cell 35477323689661671948852797176678302992950977540387061004118189797849269825312\nCPI0_150:\n\t.cell 28449210373611454402985489541711497976320196644878638971820198805980867198976\nCPI0_151:\n\t.cell 7605903601369376408980219232256\nCPI0_152:\nCPI11_0:\n\t.cell 18446744073709551616\nCPI11_4:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207159\nCPI11_9:\n\t.cell 65536\nCPI11_11:\n\t.cell -16777216\n","bytecode":{"object":""},"methodIdentifiers":{"UserSstakeAmounts(uint256)":"ed4516c9","UserStakerAddresses(uint256)":"48e395a3","added_proposal(address,uint256)":"44daa227","balances(address)":"27e235e3","checkQualityComplianceBelowExpectations(uint256)":"df63ba91","createProposalWithOptions(string,string[],uint256,uint256)":"3257917a","deactivateProposal(uint256)":"6bff47e6","deposit(uint256)":"b6b55f25","getAvailableWithdrawBalance(address)":"bcfc4429","getContractBalance()":"6f9fb98a","getCurrentProposalId()":"fe10226d","getOptionVoteCount(uint256,uint256)":"63e9a61d","getOptionsCount(uint256)":"517a6257","getProposalStatus(uint256)":"401853b7","getUserBalance(address)":"47734892","getUserVotingHistory(address)":"0ff7c4a5","getUserVotingRights(address)":"6e16c790","handleStakeRelease(address,uint256,bool)":"cc4d6345","myToken()":"b8fcf937","optionIdsByProposal(uint256,uint256)":"e2b239c8","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","processUserStakedProposal(address,string,uint256,string[],uint256,uint256)":"a46188ad","proposalOptions(uint256,uint256)":"a93b4ba1","proposalTokenDeposits(address)":"dd5c0da2","proposalVoters(uint256,uint256)":"ab89437c","proposals(uint256)":"013cf08b","proposalsLength()":"44c7c867","renounceOwnership()":"715018a6","settleFundsForAverageQuality(uint256)":"9d678da1","settleRewards(uint256,uint256)":"e13b7b31","stakesForUser(address,uint256)":"2f4c5bdf","submitProposalForReview(uint256)":"bbebdd25","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","usedVotingRights(address)":"1940278f","userVotingHistory(address,uint256)":"23ee36bb","verifyComplianceAndExpectations(uint256)":"a24f8bd5","vote(uint256,uint256,uint256)":"8a6655d6","voteCountsByProposal(uint256,uint256)":"a9bc3711","voterAddressesByProposal(uint256,uint256)":"eda0b804","voterIndexInProposal(address,uint256)":"f496baa0","voters(address,uint256)":"5c134d66","votingEndTimes(uint256)":"0f174002","votingRecords(address,uint256)":"3a3ddd91","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\", 19:\"@openzeppelin/contracts/utils/Pausable.sol\", 20:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 33:\"contracts/IProposalLogic.sol\", 34:\"contracts/ProposalLogic.sol\"\nobject \"ProposalLogic_10658\" {\n    code {\n        {\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ProposalLogic_10658\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:1713:1714  \"1\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 20:1713:1714  \"1\" */ 0x01)\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let _4 := sload(/** @src 20:1713:1714  \"1\" */ 0x01)\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 34:5780:5790  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                let _5 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(_5, shl(224, 0x1e4fbdf7))\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_5, 4), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(_5, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n            }\n            sstore(/** @src 20:1713:1714  \"1\" */ 0x01, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(_4, not(sub(shl(168, 1), 1))), and(shl(8, /** @src 34:5780:5790  \"msg.sender\" */ caller()), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(168, 1), 256))))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _6 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _4), _2), /** @src 34:5780:5790  \"msg.sender\" */ caller())\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            sstore(/** @src 34:5803:5821  \"myToken = _myToken\" */ 0x02, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(sload(/** @src 34:5803:5821  \"myToken = _myToken\" */ 0x02), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(sub(shl(160, 1), 1))), _3))\n            let _7 := datasize(\"ProposalLogic_10658_deployed\")\n            codecopy(_6, dataoffset(\"ProposalLogic_10658_deployed\"), _7)\n            return(_6, _7)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\", 19:\"@openzeppelin/contracts/utils/Pausable.sol\", 20:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 32:\"contracts/Counters.sol\", 34:\"contracts/ProposalLogic.sol\"\n    object \"ProposalLogic_10658_deployed\" {\n        code {\n            {\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x013cf08b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 34:2244:2271  \"Proposal[] public proposals\"\n                        if iszero(lt(value, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ 7)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2244:2271  \"Proposal[] public proposals\"\n                        let slot, offset := storage_array_index_access_struct_Proposal__dyn(value)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_1 := and(sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ slot), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:2244:2271  \"Proposal[] public proposals\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(slot, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _1 := sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ add(slot, 2))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _2 := sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ add(slot, 3))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _3 := sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ add(slot, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        mstore(add(memPos, 32), 224)\n                        let tail := abi_encode_string(ret_mpos, add(memPos, 224))\n                        mstore(add(memPos, 64), _1)\n                        mstore(add(memPos, 96), iszero(iszero(and(_2, 0xff))))\n                        mstore(add(memPos, 128), iszero(iszero(and(shr(8, _2), 0xff))))\n                        mstore(add(memPos, 160), iszero(iszero(and(shr(16, _2), 0xff))))\n                        mstore(add(memPos, 192), _3)\n                        return(memPos, sub(tail, memPos))\n                    }\n                    case 0x0f174002 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 34:2296:2345  \"mapping(uint256 => uint256) public votingEndTimes\" */ 8)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x0ff7c4a5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:14981:14998  \"userVotingHistory\" */ 0x0b)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _5 := sload(/** @src 34:15044:15058  \"records.length\" */ dataSlot)\n                        /// @src 34:15016:15059  \"proposalIds = new uint256[](records.length)\"\n                        let var_proposalIds_mpos := /** @src 34:15030:15059  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 34:15070:15111  \"optionIds = new uint256[](records.length)\"\n                        let var_optionIds_mpos := /** @src 34:15082:15111  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 34:15122:15161  \"amounts = new uint256[](records.length)\"\n                        let var_amounts_mpos := /** @src 34:15132:15161  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 34:15179:15192  \"uint256 i = 0\"\n                        let var_i := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:15174:15378  \"for (uint256 i = 0; i < records.length; i++) {...\"\n                        for { }\n                        /** @src 34:15194:15212  \"i < records.length\" */ lt(var_i, _5)\n                        /// @src 34:15179:15192  \"uint256 i = 0\"\n                        {\n                            /// @src 34:15214:15217  \"i++\"\n                            var_i := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 34:15214:15217  \"i++\" */ var_i, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 34:15214:15217  \"i++\"\n                        {\n                            /// @src 34:15251:15261  \"records[i]\"\n                            let _6, _7 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 34:15234:15272  \"proposalIds[i] = records[i].proposalId\" */ memory_array_index_access_uint256_dyn(var_proposalIds_mpos, var_i), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:15251:15272  \"records[i].proposalId\" */ _6))\n                            /// @src 34:15302:15312  \"records[i]\"\n                            let _8, _9 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 34:15287:15321  \"optionIds[i] = records[i].optionId\" */ memory_array_index_access_uint256_dyn(var_optionIds_mpos, var_i), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:15302:15321  \"records[i].optionId\" */ add(_8, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)))\n                            /// @src 34:15349:15359  \"records[i]\"\n                            let _10, _11 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 34:15336:15366  \"amounts[i] = records[i].amount\" */ memory_array_index_access_uint256_dyn(var_amounts_mpos, var_i), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:15349:15366  \"records[i].amount\" */ add(_10, 2)))\n                        }\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 96)\n                        let tail_1 := abi_encode_array_uint256_dyn(var_proposalIds_mpos, add(memPos_2, 96))\n                        mstore(add(memPos_2, 32), sub(tail_1, memPos_2))\n                        let tail_2 := abi_encode_array_uint256_dyn(var_optionIds_mpos, tail_1)\n                        mstore(add(memPos_2, 64), sub(tail_2, memPos_2))\n                        return(memPos_2, sub(abi_encode_array_uint256_dyn(var_amounts_mpos, tail_2), memPos_2))\n                    }\n                    case 0x1940278f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2929:2980  \"mapping(address => uint256) public usedVotingRights\" */ 16)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _12)\n                        return(memPos_3, 32)\n                    }\n                    case 0x23ee36bb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ 11)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        /// @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        if iszero(lt(value_2, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ dataSlot_1)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        let slot_1, offset_1 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_1, value_2)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _13 := sload(/** @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ slot_1)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _14 := sload(/** @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _15 := sload(/** @src 34:2482:2539  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot_1, 2))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _13)\n                        mstore(add(memPos_4, 32), _14)\n                        mstore(add(memPos_4, 64), _15)\n                        return(memPos_4, 96)\n                    }\n                    case 0x27e235e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2374:2417  \"mapping(address => uint256) public balances\" */ 9)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _16 := sload(keccak256(0, 64))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _16)\n                        return(memPos_5, 32)\n                    }\n                    case 0x2e1a7d4d {\n                        if callvalue() { revert(0, 0) }\n                        let _17 := 32\n                        if slt(add(calldatasize(), not(3)), _17) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        /// @src 20:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 34:11098:11125  \"availableBalance >= _amount\" */ lt(/** @src 34:11026:11065  \"getAvailableWithdrawBalance(msg.sender)\" */ fun_getAvailableWithdrawBalance(/** @src 34:11054:11064  \"msg.sender\" */ caller()), /** @src 34:11098:11125  \"availableBalance >= _amount\" */ value_3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), _17)\n                            mstore(add(memPtr, 36), 40)\n                            mstore(add(memPtr, 68), \"Not enough available balance to \")\n                            mstore(add(memPtr, 100), \"withdraw\")\n                            revert(memPtr, 132)\n                        }\n                        let value_4 := and(sload(/** @src 34:11278:11285  \"myToken\" */ 0x02), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _18 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        mstore(_18, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0xa9059cbb))\n                        mstore(/** @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ add(_18, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 34:11054:11064  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36), value_3)\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _19 := call(gas(), value_4, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, /** @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 68, /** @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17)\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if iszero(_19)\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let expr := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if _19\n                        {\n                            let _20 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17\n                            /// @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                            if gt(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17, /** @src 34:11271:11316  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            expr := abi_decode_bool_fromMemory(_18, add(_18, _20))\n                        }\n                        /// @src 34:11249:11359  \"require(...\"\n                        require_helper_stringliteral_25ad(expr)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:11054:11064  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_17, /** @src 34:11420:11428  \"balances\" */ 0x09)\n                        /// @src 34:11420:11450  \"balances[msg.sender] - _amount\"\n                        let _21 := checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 34:11420:11450  \"balances[msg.sender] - _amount\" */ value_3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:11054:11064  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_17, /** @src 34:11420:11428  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _21)\n                        /// @src 34:11499:11560  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        let _22 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_22, value_3)\n                        mstore(add(_22, _17), _21)\n                        /// @src 34:11499:11560  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        log2(_22, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64, /** @src 34:11499:11560  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\" */ 0x55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c, /** @src 34:11054:11064  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                    case 0x2f4c5bdf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        let _23 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_1, _23))\n                        mstore(32, /** @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\" */ 12)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\"\n                        if iszero(lt(value_5, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\" */ dataSlot_2)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\"\n                        let slot_2, offset_2 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_2, value_5)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _24 := sload(/** @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\" */ slot_2)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _25 := sload(/** @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_2, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _26 := sload(/** @src 34:2583:2631  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_2, 2))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _24)\n                        mstore(add(memPos_6, 32), _25)\n                        mstore(add(memPos_6, 64), and(_26, _23))\n                        mstore(add(memPos_6, 96), iszero(iszero(and(shr(160, _26), 0xff))))\n                        return(memPos_6, 128)\n                    }\n                    case 0x3257917a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let offset_3 := calldataload(4)\n                        let _27 := 0xffffffffffffffff\n                        if gt(offset_3, _27) { revert(0, 0) }\n                        let value0_2 := abi_decode_string(add(4, offset_3), calldatasize())\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, _27) { revert(0, 0) }\n                        let value1 := abi_decode_array_string_dyn(add(4, offset_4), calldatasize())\n                        let value_6 := calldataload(68)\n                        let value_7 := calldataload(100)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _28 := sload(/** @src 34:7920:7932  \"_proposalIds\" */ 0x03)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _29 := 1\n                        sstore(/** @src 34:7920:7932  \"_proposalIds\" */ 0x03, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(_28, 1))\n                        /// @src 34:8122:8128  \"1 days\"\n                        let _30 := 0x015180\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product := mul(value_7, /** @src 34:8122:8128  \"1 days\" */ _30)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(value_7), eq(/** @src 34:8122:8128  \"1 days\" */ _30, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product, value_7))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 34:8093:8129  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_1 := checked_add_uint256(/** @src 34:8093:8108  \"block.timestamp\" */ timestamp(), /** @src 34:8112:8128  \"endtime * 1 days\" */ product)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_37042(memPtr_1)\n                        mstore(memPtr_1, /** @src 34:8241:8251  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _31 := 32\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32), value0_2)\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64), value_6)\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96), 1)\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 128), 0)\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, 160), /** @src 34:8049:8059  \"amount > 0\" */ iszero(iszero(value_6)))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(/** @src 34:8203:8499  \"Proposal({...\" */ add(memPtr_1, 192), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ expr_1)\n                        /// @src 34:8174:8510  \"proposals.push(...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_1)\n                        /// @src 34:8562:8572  \"uint i = 0\"\n                        let var_i_1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:8557:8761  \"for (uint i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _29\n                        /// @src 34:8562:8572  \"uint i = 0\"\n                        {\n                            /// @src 34:8605:8608  \"i++\"\n                            var_i_1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 34:8605:8608  \"i++\" */ var_i_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _29)\n                        }\n                        /// @src 34:8605:8608  \"i++\"\n                        {\n                            /// @src 34:8574:8603  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(/** @src 34:8578:8603  \"optionDescriptions.length\" */ value1)))\n                            /// @src 34:8574:8603  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _28)\n                            mstore(_31, /** @src 34:8625:8640  \"proposalOptions\" */ 0x0d)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_3 := keccak256(0, 64)\n                            /// @src 34:8697:8718  \"optionDescriptions[i]\"\n                            let _mpos := mload(memory_array_index_access_uint256_dyn(value1, var_i_1))\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let memPtr_2 := mload(64)\n                            finalize_allocation_37044(memPtr_2)\n                            mstore(memPtr_2, _mpos)\n                            mstore(/** @src 34:8676:8734  \"Option({description: optionDescriptions[i], voteCount: 0})\" */ add(memPtr_2, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _31), 0)\n                            /// @src 34:8625:8749  \"proposalOptions[proposalId].push(...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_3, memPtr_2)\n                        }\n                        /// @src 34:8801:8981  \"ProposalAndOptionsSubmitted(...\"\n                        let _32 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_32, 96)\n                        let tail_3 := abi_encode_string(value0_2, add(_32, 96))\n                        mstore(add(_32, 32), sub(tail_3, _32))\n                        let tail_4 := abi_encode_array_string_dyn(value1, tail_3)\n                        mstore(add(_32, 64), expr_1)\n                        /// @src 34:8801:8981  \"ProposalAndOptionsSubmitted(...\"\n                        log3(_32, sub(tail_4, _32), 0xea966a8f7bfdedb35590510f87f503b52990ecf99d780380ad04545ee72b9b73, /** @src 34:8241:8251  \"msg.sender\" */ caller(), /** @src 34:8801:8981  \"ProposalAndOptionsSubmitted(...\" */ _28)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _28)\n                        return(memPos_7, 32)\n                    }\n                    case 0x3a3ddd91 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2987:3055  \"mapping(address => mapping(uint256 => uint256)) public votingRecords\" */ 17)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_4)\n                        let _33 := sload(keccak256(0, 64))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _33)\n                        return(memPos_8, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _34 := sload(/** @src 19:1920:1927  \"_paused\" */ 0x01)\n                        /// @src 19:2260:2322  \"if (!paused()) {...\"\n                        if /** @src 19:2264:2273  \"!paused()\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_34, 0xff))\n                        /// @src 19:2260:2322  \"if (!paused()) {...\"\n                        {\n                            /// @src 19:2296:2311  \"ExpectedPause()\"\n                            let _35 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 19:2296:2311  \"ExpectedPause()\"\n                            mstore(_35, shl(224, 0x8dfc202b))\n                            revert(_35, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4)\n                        }\n                        sstore(/** @src 19:1920:1927  \"_paused\" */ 0x01, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_34, not(255)))\n                        /// @src 19:2798:2820  \"Unpaused(_msgSender())\"\n                        let _36 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_36, /** @src 17:735:745  \"msg.sender\" */ caller())\n                        /// @src 19:2798:2820  \"Unpaused(_msgSender())\"\n                        log1(_36, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 19:2798:2820  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x401853b7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 34:12181:12203  \"proposals[_proposalId]\"\n                        let _37, _38 := storage_array_index_access_struct_Proposal__dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ calldataload(4))\n                        let value_8 := and(sload(/** @src 34:12221:12236  \"proposal.active\" */ add(/** @src 34:12153:12203  \"Proposal storage proposal = proposals[_proposalId]\" */ _37, /** @src 34:12221:12236  \"proposal.active\" */ 3)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(value_8)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x44c7c867 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let length := sload(/** @src 34:15468:15477  \"proposals\" */ 0x07)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, length)\n                        return(memPos_10, 32)\n                    }\n                    case 0x44daa227 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:3062:3131  \"mapping(address => mapping(uint256 => uint256)) public added_proposal\" */ 18)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_5)\n                        let _39 := sload(keccak256(0, 64))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _39)\n                        return(memPos_11, 32)\n                    }\n                    case 0x47734892 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:5957:5965  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _40 := sload(keccak256(0, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _40)\n                        return(memPos_12, 32)\n                    }\n                    case 0x48e395a3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 34:2135:2171  \"address[] public UserStakerAddresses\"\n                        if iszero(lt(value_9, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2135:2171  \"address[] public UserStakerAddresses\" */ 5)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2135:2171  \"address[] public UserStakerAddresses\"\n                        let slot_3, offset_5 := storage_array_index_access_address_dyn_37049(value_9)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _41 := sload(/** @src 34:2135:2171  \"address[] public UserStakerAddresses\" */ slot_3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, and(shr(shl(3, offset_5), _41), sub(shl(160, 1), 1)))\n                        return(memPos_13, 32)\n                    }\n                    case 0x517a6257 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 34:15593:15608  \"proposalOptions\" */ 0x0d)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_1 := sload(keccak256(0, 64))\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, length_1)\n                        return(memPos_14, 32)\n                    }\n                    case 0x5c134d66 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2732:2790  \"mapping(address => mapping(uint256 => bool)) public voters\" */ 14)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_6)\n                        let value_10 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_10)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_11 := and(sload(/** @src 19:1920:1927  \"_paused\" */ 0x01), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, iszero(iszero(value_11)))\n                        return(memPos_16, 32)\n                    }\n                    case 0x63e9a61d {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret := fun_getOptionVoteCount(param, param_1)\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, ret)\n                        return(memPos_17, 32)\n                    }\n                    case 0x6bff47e6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        fun_deactivateProposal(calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x6e16c790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:6128:6144  \"usedVotingRights\" */ 0x10)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _42 := sload(keccak256(0, 64))\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, _42)\n                        return(memPos_18, 32)\n                    }\n                    case 0x6f9fb98a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_12 := and(sload(/** @src 34:14500:14507  \"myToken\" */ 0x02), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _43 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                        mstore(_43, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\" */ add(_43, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 34:14527:14531  \"this\" */ address())\n                        /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _44 := staticcall(gas(), value_12, _43, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36, /** @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\" */ _43, 32)\n                        if iszero(_44)\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                        let expr_2 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                        if _44\n                        {\n                            let _45 := 32\n                            if gt(32, returndatasize()) { _45 := returndatasize() }\n                            finalize_allocation(_43, _45)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if slt(sub(/** @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\" */ add(_43, _45), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _43), /** @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            { revert(0, 0) }\n                            /// @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\"\n                            expr_2 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(_43)\n                        }\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, expr_2)\n                        return(memPos_19, /** @src 34:14493:14533  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                    }\n                    case /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _46 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x01)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x01, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_46, not(sub(shl(168, 1), 256))))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _46), sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 19:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 19:2532:2536  \"true\" */ 0x01, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(sload(/** @src 19:2532:2536  \"true\" */ 0x01), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(255)), /** @src 19:2532:2536  \"true\" */ 0x01))\n                        /// @src 19:2551:2571  \"Paused(_msgSender())\"\n                        let _47 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_47, /** @src 17:735:745  \"msg.sender\" */ caller())\n                        /// @src 19:2551:2571  \"Paused(_msgSender())\"\n                        log1(_47, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 19:2551:2571  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8a6655d6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        let _48 := 36\n                        let value_14 := calldataload(_48)\n                        let _49 := 68\n                        let value_15 := calldataload(_49)\n                        /// @src 19:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 34:12412:12442  \"_proposalId < proposals.length\" */ lt(value_13, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:12426:12435  \"proposals\" */ 0x07)))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, _48), 27)\n                            mstore(add(memPtr_3, _49), \"The proposal does not exist\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, value_13)\n                        let _50 := 32\n                        mstore(_50, /** @src 34:12519:12534  \"proposalOptions\" */ 0x0d)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 34:12507:12554  \"_optionId < proposalOptions[_proposalId].length\" */ lt(value_14, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))))\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), _50)\n                            mstore(add(memPtr_4, _48), 25)\n                            mstore(add(memPtr_4, _49), \"The option does not exist\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 34:12658:12680  \"proposals[_proposalId]\"\n                        let _51, _52 := storage_array_index_access_struct_Proposal__dyn(value_13)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 34:12640:12688  \"block.timestamp < proposals[_proposalId].endTime\" */ lt(/** @src 34:12640:12655  \"block.timestamp\" */ timestamp(), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:12658:12688  \"proposals[_proposalId].endTime\" */ add(_51, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4))))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), _50)\n                            mstore(add(memPtr_5, _48), 45)\n                            mstore(add(memPtr_5, _49), \"The voting period for this propo\")\n                            mstore(add(memPtr_5, 100), \"sal has ended\")\n                            revert(memPtr_5, 132)\n                        }\n                        /// @src 34:12780:12802  \"proposals[_proposalId]\"\n                        let _53, _54 := storage_array_index_access_struct_Proposal__dyn(value_13)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(and(sload(/** @src 34:12780:12809  \"proposals[_proposalId].active\" */ add(_53, 3)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff))\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), _50)\n                            mstore(add(memPtr_6, _48), 26)\n                            mstore(add(memPtr_6, _49), \"The proposal is not active\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:12980:12988  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _55 := sload(keccak256(0, 64))\n                        mstore(_50, /** @src 34:13016:13032  \"usedVotingRights\" */ 0x10)\n                        /// @src 34:12980:13044  \"balances[msg.sender] -...\"\n                        let expr_3 := checked_sub_uint256(_55, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)))\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13060:13081  \"proposalTokenDeposits\" */ 0x0f)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 34:13112:13144  \"remainingVotingRights >= _amount\" */ lt(/** @src 34:12980:13093  \"balances[msg.sender] -...\" */ checked_sub_uint256(expr_3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))), /** @src 34:13112:13144  \"remainingVotingRights >= _amount\" */ value_15)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), _50)\n                            mstore(add(memPtr_7, _48), 26)\n                            mstore(add(memPtr_7, _49), \"Insufficient voting rights\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13016:13032  \"usedVotingRights\" */ 0x10)\n                        /// @src 34:13255:13293  \"usedVotingRights[msg.sender] + _amount\"\n                        let _56 := checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 34:13255:13293  \"usedVotingRights[msg.sender] + _amount\" */ value_15)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13016:13032  \"usedVotingRights\" */ 0x10)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _56)\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:12519:12534  \"proposalOptions\" */ 0x0d)\n                        /// @src 34:13408:13447  \"proposalOptions[_proposalId][_optionId]\"\n                        let _57, _58 := storage_array_index_access_struct_Option__dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:13408:13447  \"proposalOptions[_proposalId][_optionId]\" */ value_14)\n                        /// @src 34:13408:13457  \"proposalOptions[_proposalId][_optionId].voteCount\"\n                        let _59 := add(_57, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        sstore(_59, /** @src 34:13408:13468  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:13408:13468  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ _59), value_15))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13479:13492  \"votingRecords\" */ 0x11)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        mstore(0, value_13)\n                        mstore(_50, dataSlot_7)\n                        let dataSlot_8 := keccak256(0, 64)\n                        sstore(dataSlot_8, /** @src 34:13479:13528  \"votingRecords[msg.sender][_proposalId] += _amount\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:13479:13528  \"votingRecords[msg.sender][_proposalId] += _amount\" */ dataSlot_8), value_15))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13573:13579  \"voters\" */ 0x0e)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        mstore(0, value_13)\n                        mstore(_50, dataSlot_9)\n                        let dataSlot_10 := keccak256(0, 64)\n                        sstore(dataSlot_10, or(and(sload(dataSlot_10), not(255)), 1))\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:13659:13676  \"userVotingHistory\" */ 0x0b)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        let memPtr_8 := mload(64)\n                        let newFreePtr := add(memPtr_8, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_8))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, _48)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_8, value_13)\n                        /// @src 34:13708:13751  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _60 := add(memPtr_8, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _50)\n                        mstore(_60, value_14)\n                        /// @src 34:13708:13751  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _61 := add(memPtr_8, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64)\n                        mstore(_61, value_15)\n                        let oldLen := sload(dataSlot_11)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, _48)\n                        }\n                        sstore(dataSlot_11, add(oldLen, 1))\n                        let slot_4, offset_6 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_11, oldLen)\n                        if offset_6\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, _48)\n                        }\n                        sstore(slot_4, mload(memPtr_8))\n                        sstore(add(slot_4, 1), mload(_60))\n                        sstore(add(slot_4, 2), mload(_61))\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:13807:13821  \"proposalVoters\" */ 0x0a)\n                        /// @src 34:13807:13851  \"proposalVoters[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:13921:13945  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 34:13921:13975  \"voterAddressesByProposal[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:13986:14005  \"optionIdsByProposal\" */ 0x14)\n                        /// @src 34:13986:14034  \"optionIdsByProposal[_proposalId].push(_optionId)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:13986:14034  \"optionIdsByProposal[_proposalId].push(_optionId)\" */ value_14)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:14045:14065  \"voteCountsByProposal\" */ 0x15)\n                        /// @src 34:14045:14092  \"voteCountsByProposal[_proposalId].push(_amount)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:14045:14092  \"voteCountsByProposal[_proposalId].push(_amount)\" */ value_15)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_13)\n                        mstore(_50, /** @src 34:13921:13945  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_2 := sload(keccak256(0, 64))\n                        let diff := add(length_2, not(0))\n                        if gt(diff, length_2)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, /** @src 34:13479:13492  \"votingRecords\" */ 0x11)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            revert(0, _48)\n                        }\n                        mstore(0, /** @src 34:12989:12999  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_50, /** @src 34:14154:14174  \"voterIndexInProposal\" */ 0x16)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_12 := keccak256(0, 64)\n                        mstore(0, value_13)\n                        mstore(_50, dataSlot_12)\n                        sstore(keccak256(0, 64), diff)\n                        /// @src 34:14294:14344  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        let _62 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_62, value_15)\n                        /// @src 34:14294:14344  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        log4(_62, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _50, /** @src 34:14294:14344  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ 0xc32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3, /** @src 34:12989:12999  \"msg.sender\" */ caller(), /** @src 34:14294:14344  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ value_13, value_14)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_16 := and(shr(8, sload(/** @src 0:1710:1716  \"_owner\" */ 0x01)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, value_16)\n                        return(memPos_20, 32)\n                    }\n                    case 0x9d678da1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_17 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:20709:20776  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 34:20717:20747  \"_proposalId < proposals.length\" */ lt(value_17, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:20731:20740  \"proposals\" */ 0x07)))\n                        /// @src 34:20815:20837  \"proposals[_proposalId]\"\n                        let _63, _64 := storage_array_index_access_struct_Proposal__dyn(value_17)\n                        /// @src 34:20856:20871  \"proposal.active\"\n                        let _65 := add(_63, 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _66 := sload(/** @src 34:20856:20871  \"proposal.active\" */ _65)\n                        /// @src 34:20848:20901  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_66, 0xff))\n                        /// @src 34:20912:20965  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 34:20920:20939  \"!proposal.isSettled\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _66), 0xff)))\n                        /// @src 34:20995:21006  \"_proposalId\"\n                        fun_deactivateProposal(value_17)\n                        /// @src 34:21080:21100  \"proposal.stakeAmount\"\n                        let _67 := add(_63, 2)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _68 := sload(/** @src 34:21080:21100  \"proposal.stakeAmount\" */ _67)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _69 := sload(/** @src 34:21115:21133  \"proposal.isWagered\" */ _65)\n                        /// @src 34:21111:21459  \"if (proposal.isWagered) {...\"\n                        switch /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _69), 0xff)\n                        case /** @src 34:21111:21459  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_65, or(and(_69, not(65280)), 256))\n                        }\n                        default /// @src 34:21111:21459  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_18 := and(sload(/** @src 34:21197:21214  \"proposal.proposer\" */ _63), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_18)\n                            mstore(32, /** @src 34:21175:21196  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _70 := sload(keccak256(0, 64))\n                            /// @src 34:21273:21389  \"stakedAmount >...\"\n                            let expr_4 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 34:21273:21389  \"stakedAmount >...\"\n                            switch /** @src 34:21273:21319  \"stakedAmount >...\" */ gt(_68, _70)\n                            case /** @src 34:21273:21389  \"stakedAmount >...\" */ 0 {\n                                expr_4 := /** @src 34:21360:21389  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_70, _68)\n                            }\n                            default /// @src 34:21273:21389  \"stakedAmount >...\"\n                            {\n                                expr_4 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_18)\n                            mstore(32, /** @src 34:21175:21196  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_4)\n                        }\n                        let _71 := sload(/** @src 34:21491:21511  \"proposal.stakeAmount\" */ _67)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_1 := mul(_71, /** @src 34:20856:20871  \"proposal.active\" */ 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _72 := iszero(_71)\n                        if iszero(or(_72, eq(/** @src 34:20856:20871  \"proposal.active\" */ 3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_1, _71))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let product_2 := mul(_71, /** @src 34:21604:21605  \"5\" */ 0x05)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(_72, eq(/** @src 34:21604:21605  \"5\" */ 0x05, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_2, _71))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 34:21665:21684  \"reward - serviceFee\"\n                        let expr_5 := checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_2, /** @src 34:21519:21522  \"100\" */ 0x64), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_1, /** @src 34:21519:21522  \"100\" */ 0x64))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _73 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 34:21706:21723  \"proposal.proposer\" */ _63), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _73))\n                        mstore(32, /** @src 34:21697:21705  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_13 := keccak256(0, 64)\n                        sstore(dataSlot_13, /** @src 34:21697:21734  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:21697:21734  \"balances[proposal.proposer] += profit\" */ dataSlot_13), expr_5))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_19 := and(sload(/** @src 34:21866:21883  \"proposal.proposer\" */ _63), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _73)\n                        /// @src 34:21796:21915  \"FundsSettledForAverageQuality(...\"\n                        let _74 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_74, expr_5)\n                        /// @src 34:21796:21915  \"FundsSettledForAverageQuality(...\"\n                        log3(_74, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 34:21796:21915  \"FundsSettledForAverageQuality(...\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_17, value_19)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xa24f8bd5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_20 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:22037:22104  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 34:22045:22075  \"_proposalId < proposals.length\" */ lt(value_20, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:22059:22068  \"proposals\" */ 0x07)))\n                        /// @src 34:22143:22165  \"proposals[_proposalId]\"\n                        let _75, _76 := storage_array_index_access_struct_Proposal__dyn(value_20)\n                        /// @src 34:22184:22199  \"proposal.active\"\n                        let _77 := add(_75, 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _78 := sload(/** @src 34:22184:22199  \"proposal.active\" */ _77)\n                        /// @src 34:22176:22229  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_78, 0xff))\n                        /// @src 34:22240:22293  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 34:22248:22267  \"!proposal.isSettled\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _78), 0xff)))\n                        /// @src 34:22323:22334  \"_proposalId\"\n                        fun_deactivateProposal(value_20)\n                        /// @src 34:22406:22426  \"proposal.stakeAmount\"\n                        let _79 := add(_75, 2)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _80 := sload(/** @src 34:22406:22426  \"proposal.stakeAmount\" */ _79)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _81 := sload(/** @src 34:22441:22459  \"proposal.isWagered\" */ _77)\n                        /// @src 34:22437:22826  \"if (proposal.isWagered) {...\"\n                        switch /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _81), 0xff)\n                        case /** @src 34:22437:22826  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_77, or(and(_81, not(65280)), 256))\n                        }\n                        default /// @src 34:22437:22826  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_21 := and(sload(/** @src 34:22564:22581  \"proposal.proposer\" */ _75), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_21)\n                            mstore(32, /** @src 34:22542:22563  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _82 := sload(keccak256(0, 64))\n                            /// @src 34:22640:22756  \"stakedAmount >...\"\n                            let expr_6 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 34:22640:22756  \"stakedAmount >...\"\n                            switch /** @src 34:22640:22686  \"stakedAmount >...\" */ gt(_80, _82)\n                            case /** @src 34:22640:22756  \"stakedAmount >...\" */ 0 {\n                                expr_6 := /** @src 34:22727:22756  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_82, _80)\n                            }\n                            default /// @src 34:22640:22756  \"stakedAmount >...\"\n                            {\n                                expr_6 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_21)\n                            mstore(32, /** @src 34:22542:22563  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_6)\n                        }\n                        let _83 := sload(/** @src 34:22858:22878  \"proposal.stakeAmount\" */ _79)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_3 := mul(_83, /** @src 34:22184:22199  \"proposal.active\" */ 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _84 := iszero(_83)\n                        if iszero(or(_84, eq(/** @src 34:22184:22199  \"proposal.active\" */ 3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_3, _83))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let product_4 := mul(_83, /** @src 34:22971:22973  \"10\" */ 0x0a)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(_84, eq(/** @src 34:22971:22973  \"10\" */ 0x0a, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_4, _83))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 34:23034:23053  \"reward - serviceFee\"\n                        let expr_7 := checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_4, /** @src 34:22886:22889  \"100\" */ 0x64), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_3, /** @src 34:22886:22889  \"100\" */ 0x64))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _85 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 34:23075:23092  \"proposal.proposer\" */ _75), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _85))\n                        mstore(32, /** @src 34:23066:23074  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_14 := keccak256(0, 64)\n                        sstore(dataSlot_14, /** @src 34:23066:23103  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:23066:23103  \"balances[proposal.proposer] += profit\" */ dataSlot_14), expr_7))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_22 := and(sload(/** @src 34:23235:23252  \"proposal.proposer\" */ _75), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _85)\n                        /// @src 34:23165:23284  \"FundsSettledForAverageQuality(...\"\n                        let _86 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_86, expr_7)\n                        /// @src 34:23165:23284  \"FundsSettledForAverageQuality(...\"\n                        log3(_86, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 34:23165:23284  \"FundsSettledForAverageQuality(...\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_20, value_22)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xa46188ad {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let offset_7 := calldataload(36)\n                        let _87 := 0xffffffffffffffff\n                        if gt(offset_7, _87) { revert(0, 0) }\n                        let value1_1 := abi_decode_string(add(4, offset_7), calldatasize())\n                        let value_23 := calldataload(68)\n                        let offset_8 := calldataload(100)\n                        if gt(offset_8, _87) { revert(0, 0) }\n                        let value3 := abi_decode_array_string_dyn(add(4, offset_8), calldatasize())\n                        let value_24 := calldataload(132)\n                        let value_25 := calldataload(164)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:9371:9402  \"UserStakerAddresses[stakeIndex]\"\n                        let _88, _89 := storage_array_index_access_address_dyn_37049(value_24)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _90 := sub(shl(160, 1), 1)\n                        let _91 := sload(/** @src 34:9371:9402  \"UserStakerAddresses[stakeIndex]\" */ _88)\n                        /// @src 34:9434:9463  \"UserSstakeAmounts[stakeIndex]\"\n                        let _92, _93 := storage_array_index_access_address_dyn_37061(value_24)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_26 := shr(shl(3, _93), sload(/** @src 34:9434:9463  \"UserSstakeAmounts[stakeIndex]\" */ _92))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _94 := and(/** @src 34:9482:9508  \"UserAddress == userAddress\" */ value0_3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _90)\n                        if iszero(/** @src 34:9482:9508  \"UserAddress == userAddress\" */ eq(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(shl(3, _89), _91), _90), _94))\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 23)\n                            mstore(add(memPtr_9, 68), \"the address is not same\")\n                            revert(memPtr_9, 100)\n                        }\n                        if iszero(/** @src 34:9569:9594  \"stakeAmount == UserAmount\" */ eq(value_23, value_26))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 44)\n                            mstore(add(memPtr_10, 68), \"Staked amount does not match or \")\n                            mstore(add(memPtr_10, 100), \"insufficient\")\n                            revert(memPtr_10, 132)\n                        }\n                        /// @src 34:9729:9735  \"1 days\"\n                        let _95 := 0x015180\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_5 := mul(value_25, /** @src 34:9729:9735  \"1 days\" */ _95)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(value_25), eq(/** @src 34:9729:9735  \"1 days\" */ _95, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_5, value_25))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 34:9700:9736  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_8 := checked_add_uint256(/** @src 34:9700:9715  \"block.timestamp\" */ timestamp(), /** @src 34:9719:9735  \"endtime * 1 days\" */ product_5)\n                        /// @src 34:9781:9795  \"bool isWagered\"\n                        let var_isWagered := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:9806:9920  \"if (stakeAmount > 0) {...\"\n                        switch /** @src 34:9810:9825  \"stakeAmount > 0\" */ iszero(iszero(value_23))\n                        case /** @src 34:9806:9920  \"if (stakeAmount > 0) {...\" */ 0 {\n                            /// @src 34:9891:9908  \"isWagered = false\"\n                            var_isWagered := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        }\n                        default /// @src 34:9806:9920  \"if (stakeAmount > 0) {...\"\n                        {\n                            /// @src 34:9842:9858  \"isWagered = true\"\n                            var_isWagered := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                        }\n                        let memPtr_11 := mload(64)\n                        finalize_allocation_37042(memPtr_11)\n                        mstore(memPtr_11, _94)\n                        let _96 := 32\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32), value1_1)\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64), value_23)\n                        let _97 := 1\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96), 1)\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 128), 0)\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 160), iszero(iszero(var_isWagered)))\n                        mstore(/** @src 34:9959:10261  \"Proposal({...\" */ add(memPtr_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 192), expr_8)\n                        /// @src 34:9930:10272  \"proposals.push(...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_11)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _98 := sload(3)\n                        sstore(3, add(_98, 1))\n                        /// @src 34:10423:10436  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:10418:10625  \"for (uint256 i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _97\n                        /// @src 34:10423:10436  \"uint256 i = 0\"\n                        {\n                            /// @src 34:10469:10472  \"i++\"\n                            var_i_2 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 34:10469:10472  \"i++\" */ var_i_2, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _97)\n                        }\n                        /// @src 34:10469:10472  \"i++\"\n                        {\n                            /// @src 34:10438:10467  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_2, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(/** @src 34:10442:10467  \"optionDescriptions.length\" */ value3)))\n                            /// @src 34:10438:10467  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _98)\n                            mstore(_96, /** @src 34:10489:10504  \"proposalOptions\" */ 0x0d)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_15 := keccak256(0, 64)\n                            /// @src 34:10561:10582  \"optionDescriptions[i]\"\n                            let _mpos_1 := mload(memory_array_index_access_uint256_dyn(value3, var_i_2))\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let memPtr_12 := mload(64)\n                            finalize_allocation_37044(memPtr_12)\n                            mstore(memPtr_12, _mpos_1)\n                            mstore(/** @src 34:10540:10598  \"Option({description: optionDescriptions[i], voteCount: 0})\" */ add(memPtr_12, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _96), 0)\n                            /// @src 34:10489:10613  \"proposalOptions[proposalId].push(...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_15, memPtr_12)\n                        }\n                        /// @src 34:10640:10835  \"ProposalForUser(...\"\n                        let _99 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_99, 128)\n                        let tail_5 := abi_encode_string(value1_1, add(_99, 128))\n                        mstore(add(_99, 32), value_23)\n                        mstore(add(_99, 64), sub(tail_5, _99))\n                        let tail_6 := abi_encode_array_string_dyn(value3, tail_5)\n                        mstore(add(_99, 96), expr_8)\n                        /// @src 34:10640:10835  \"ProposalForUser(...\"\n                        log3(_99, sub(tail_6, _99), 0x66f49d52069f7740a610f503527e90cfb04b8d7218d20d9fe7a5d3e246ea8653, _94, _98)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, _98)\n                        return(memPos_21, 32)\n                    }\n                    case 0xa93b4ba1 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_2)\n                        mstore(0x20, /** @src 34:2638:2689  \"mapping(uint256 => Option[]) public proposalOptions\" */ 13)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_16 := keccak256(0, 64)\n                        /// @src 34:2638:2689  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        if iszero(lt(param_3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2638:2689  \"mapping(uint256 => Option[]) public proposalOptions\" */ dataSlot_16)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2638:2689  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        let slot_5, offset_9 := storage_array_index_access_struct_Option__dyn(dataSlot_16, param_3)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(slot_5)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _100 := sload(/** @src 34:2638:2689  \"mapping(uint256 => Option[]) public proposalOptions\" */ add(slot_5, 1))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, 64)\n                        let tail_7 := abi_encode_string(ret_mpos_1, add(memPos_22, 64))\n                        mstore(add(memPos_22, 0x20), _100)\n                        return(memPos_22, sub(tail_7, memPos_22))\n                    }\n                    case 0xa9bc3711 {\n                        if callvalue() { revert(0, 0) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_4)\n                        mstore(0x20, /** @src 34:3269:3326  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ 21)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        /// @src 34:3269:3326  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        if iszero(lt(param_5, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:3269:3326  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ dataSlot_17)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:3269:3326  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        let slot_6, offset_10 := storage_array_index_access_address_dyn(dataSlot_17, param_5)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _101 := sload(/** @src 34:3269:3326  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ slot_6)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_23 := mload(64)\n                        mstore(memPos_23, shr(shl(3, offset_10), _101))\n                        return(memPos_23, 0x20)\n                    }\n                    case 0xab89437c {\n                        if callvalue() { revert(0, 0) }\n                        let param_6, param_7 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_6)\n                        mstore(0x20, /** @src 34:2424:2475  \"mapping(uint256 => address[]) public proposalVoters\" */ 10)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_18 := keccak256(0, 64)\n                        /// @src 34:2424:2475  \"mapping(uint256 => address[]) public proposalVoters\"\n                        if iszero(lt(param_7, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2424:2475  \"mapping(uint256 => address[]) public proposalVoters\" */ dataSlot_18)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2424:2475  \"mapping(uint256 => address[]) public proposalVoters\"\n                        let slot_7, offset_11 := storage_array_index_access_address_dyn(dataSlot_18, param_7)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _102 := sload(/** @src 34:2424:2475  \"mapping(uint256 => address[]) public proposalVoters\" */ slot_7)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_24 := mload(64)\n                        mstore(memPos_24, and(shr(shl(3, offset_11), _102), sub(shl(160, 1), 1)))\n                        return(memPos_24, 0x20)\n                    }\n                    case 0xb6b55f25 {\n                        if callvalue() { revert(0, 0) }\n                        let _103 := 32\n                        if slt(add(calldatasize(), not(3)), _103) { revert(0, 0) }\n                        let value_27 := calldataload(4)\n                        let value_28 := and(sload(/** @src 34:6280:6287  \"myToken\" */ 0x02), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _104 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ add(_104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 34:6302:6312  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36), /** @src 34:6322:6326  \"this\" */ address())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 68), value_27)\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _105 := call(gas(), value_28, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, /** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 100, /** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _104, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _103)\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_105)\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let expr_9 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if _105\n                        {\n                            let _106 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _103\n                            /// @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _103, /** @src 34:6273:6336  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _106 := returndatasize() }\n                            finalize_allocation(_104, _106)\n                            expr_9 := abi_decode_bool_fromMemory(_104, add(_104, _106))\n                        }\n                        /// @src 34:6251:6379  \"require(...\"\n                        require_helper_stringliteral_25ad(expr_9)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:6302:6312  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_103, /** @src 34:6413:6421  \"balances\" */ 0x09)\n                        /// @src 34:6413:6442  \"balances[msg.sender] + amount\"\n                        let _107 := checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 34:6413:6442  \"balances[msg.sender] + amount\" */ value_27)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:6302:6312  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_103, /** @src 34:6413:6421  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _107)\n                        /// @src 34:6458:6487  \"Deposited(msg.sender, amount)\"\n                        let _108 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_108, value_27)\n                        /// @src 34:6458:6487  \"Deposited(msg.sender, amount)\"\n                        log2(_108, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _103, /** @src 34:6458:6487  \"Deposited(msg.sender, amount)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 34:6302:6312  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xb8fcf937 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_29 := and(sload(/** @src 34:1898:1920  \"address public myToken\" */ 2), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_25 := mload(64)\n                        mstore(memPos_25, value_29)\n                        return(memPos_25, 32)\n                    }\n                    case 0xbbebdd25 {\n                        if callvalue() { revert(0, 0) }\n                        let _109 := 32\n                        if slt(add(calldatasize(), not(3)), _109) { revert(0, 0) }\n                        let value_30 := calldataload(4)\n                        mstore(0, /** @src 34:6605:6615  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_109, /** @src 34:6596:6604  \"balances\" */ 0x09)\n                        /// @src 34:6588:6651  \"require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 34:6596:6626  \"balances[msg.sender] >= amount\" */ iszero(lt(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 34:6596:6626  \"balances[msg.sender] >= amount\" */ value_30)))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 34:6605:6615  \"msg.sender\" */ caller())\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_109, /** @src 34:6596:6604  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _110 := sload(keccak256(0, 64))\n                        mstore(_109, /** @src 34:6707:6723  \"usedVotingRights\" */ 0x10)\n                        /// @src 34:6662:6793  \"require(...\"\n                        require_helper_stringliteral(/** @src 34:6684:6745  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ iszero(lt(/** @src 34:6684:6735  \"balances[msg.sender] - usedVotingRights[msg.sender]\" */ checked_sub_uint256(_110, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))), /** @src 34:6684:6745  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ value_30)))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let sum := add(/** @src 34:6825:6840  \"block.timestamp\" */ timestamp(), /** @src 34:6843:6849  \"7 days\" */ 0x093a80)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if gt(/** @src 34:6825:6840  \"block.timestamp\" */ timestamp(), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let _111 := sload(4)\n                        sstore(4, add(_111, 1))\n                        /// @src 34:7072:7086  \"bool isWagered\"\n                        let var_isWagered_1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:7097:7264  \"if (amount > 0) {...\"\n                        switch /** @src 34:7101:7111  \"amount > 0\" */ iszero(iszero(value_30))\n                        case /** @src 34:7097:7264  \"if (amount > 0) {...\" */ 0 {\n                            /// @src 34:7235:7252  \"isWagered = false\"\n                            var_isWagered_1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        }\n                        default /// @src 34:7097:7264  \"if (amount > 0) {...\"\n                        {\n                            /// @src 34:7128:7144  \"isWagered = true\"\n                            var_isWagered_1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                            mstore(0, /** @src 34:6605:6615  \"msg.sender\" */ caller())\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(_109, /** @src 34:7159:7180  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_19 := keccak256(0, 64)\n                            sstore(dataSlot_19, /** @src 34:7159:7202  \"proposalTokenDeposits[msg.sender] += amount\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:7159:7202  \"proposalTokenDeposits[msg.sender] += amount\" */ dataSlot_19), value_30))\n                        }\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let oldLen_1 := sload(/** @src 34:7276:7295  \"UserStakerAddresses\" */ 0x05)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _112 := 18446744073709551616\n                        if iszero(lt(oldLen_1, _112))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 34:7276:7295  \"UserStakerAddresses\" */ 0x05, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen_1, 1))\n                        let slot_8, offset_12 := storage_array_index_access_address_dyn_37049(oldLen_1)\n                        let _113 := sload(slot_8)\n                        let shiftBits := shl(3, offset_12)\n                        sstore(slot_8, or(and(_113, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 34:6605:6615  \"msg.sender\" */ caller())))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let oldLen_2 := sload(/** @src 34:7323:7340  \"UserSstakeAmounts\" */ 0x06)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(lt(oldLen_2, _112))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 34:7323:7340  \"UserSstakeAmounts\" */ 0x06, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen_2, 1))\n                        let slot_9, offset_13 := storage_array_index_access_address_dyn_37061(oldLen_2)\n                        update_storage_value_uint256_to_uint256(slot_9, offset_13, value_30)\n                        /// @src 34:7369:7523  \"DepositForProposal(...\"\n                        let _114 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 34:7369:7523  \"DepositForProposal(...\"\n                        log3(_114, sub(abi_encode_uint256_bool_uint256(_114, value_30, var_isWagered_1, sum), _114), 0x5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085, /** @src 34:6605:6615  \"msg.sender\" */ caller(), /** @src 34:7369:7523  \"DepositForProposal(...\" */ _111)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_26 := mload(64)\n                        mstore(memPos_26, _111)\n                        return(memPos_26, _109)\n                    }\n                    case 0xbcfc4429 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getAvailableWithdrawBalance(abi_decode_address())\n                        let memPos_27 := mload(64)\n                        mstore(memPos_27, ret_1)\n                        return(memPos_27, 32)\n                    }\n                    case 0xcc4d6345 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        let value_31 := calldataload(36)\n                        let value_32 := calldataload(68)\n                        if iszero(eq(value_32, iszero(iszero(value_32)))) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 34:16834:16871  \"stakeIndex < UserSstakeAmounts.length\" */ lt(value_31, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:16847:16864  \"UserSstakeAmounts\" */ 0x06)))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, 36), 25)\n                            mstore(add(memPtr_13, 68), \"Stake index out of bounds\")\n                            revert(memPtr_13, 100)\n                        }\n                        /// @src 34:16961:16990  \"UserSstakeAmounts[stakeIndex]\"\n                        let _115, _116 := storage_array_index_access_address_dyn_37061(value_31)\n                        /// @src 34:16935:16990  \"uint256 amountToRelease = UserSstakeAmounts[stakeIndex]\"\n                        let var_amountToRelease := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shr(shl(3, _116), sload(/** @src 34:16961:16990  \"UserSstakeAmounts[stakeIndex]\" */ _115))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _117 := and(value0_4, sub(shl(160, 1), 1))\n                        mstore(0, _117)\n                        mstore(32, /** @src 34:17001:17022  \"proposalTokenDeposits\" */ 0x0f)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_20 := keccak256(0, 64)\n                        sstore(dataSlot_20, /** @src 34:17001:17047  \"proposalTokenDeposits[user] -= amountToRelease\" */ checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:17001:17047  \"proposalTokenDeposits[user] -= amountToRelease\" */ dataSlot_20), var_amountToRelease))\n                        /// @src 34:17118:17375  \"if (penalizeStake) {...\"\n                        if value_32\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let product_6 := mul(var_amountToRelease, /** @src 34:17195:17197  \"10\" */ 0x0a)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if iszero(or(iszero(var_amountToRelease), eq(/** @src 34:17195:17197  \"10\" */ 0x0a, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_6, var_amountToRelease))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            let r := div(product_6, /** @src 34:17201:17204  \"100\" */ 0x64)\n                            /// @src 34:17238:17270  \"amountToRelease -= penaltyAmount\"\n                            var_amountToRelease := checked_sub_uint256(var_amountToRelease, r)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _117)\n                            mstore(32, /** @src 34:17301:17309  \"balances\" */ 0x09)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_21 := keccak256(0, 64)\n                            sstore(dataSlot_21, /** @src 34:17301:17332  \"balances[user] -= penaltyAmount\" */ checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:17301:17332  \"balances[user] -= penaltyAmount\" */ dataSlot_21), r))\n                        }\n                        /// @src 34:17428:17457  \"UserSstakeAmounts[stakeIndex]\"\n                        let _118, _119 := storage_array_index_access_address_dyn_37061(value_31)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _120 := sload(_118)\n                        sstore(_118, and(_120, not(shl(shl(3, _119), not(0)))))\n                        /// @src 34:17531:17594  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        let _121 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 34:17531:17594  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        log2(_121, sub(abi_encode_uint256_bool_uint256(_121, value_31, value_32, var_amountToRelease), _121), 0xa793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab, _117)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd5c0da2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:2836:2892  \"mapping(address => uint256) public proposalTokenDeposits\" */ 15)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _122 := sload(keccak256(0, 64))\n                        let memPos_28 := mload(64)\n                        mstore(memPos_28, _122)\n                        return(memPos_28, 32)\n                    }\n                    case 0xdf63ba91 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_33 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:23414:23481  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 34:23422:23452  \"_proposalId < proposals.length\" */ lt(value_33, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:23436:23445  \"proposals\" */ 0x07)))\n                        /// @src 34:23520:23542  \"proposals[_proposalId]\"\n                        let _123, _124 := storage_array_index_access_struct_Proposal__dyn(value_33)\n                        /// @src 34:23561:23576  \"proposal.active\"\n                        let _125 := add(_123, 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _126 := sload(/** @src 34:23561:23576  \"proposal.active\" */ _125)\n                        /// @src 34:23553:23606  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_126, 0xff))\n                        /// @src 34:23617:23670  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 34:23625:23644  \"!proposal.isSettled\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _126), 0xff)))\n                        /// @src 34:23700:23711  \"_proposalId\"\n                        fun_deactivateProposal(value_33)\n                        /// @src 34:23785:23805  \"proposal.stakeAmount\"\n                        let _127 := add(_123, 2)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _128 := sload(/** @src 34:23785:23805  \"proposal.stakeAmount\" */ _127)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _129 := sload(/** @src 34:23820:23838  \"proposal.isWagered\" */ _125)\n                        /// @src 34:23816:24205  \"if (proposal.isWagered) {...\"\n                        switch /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _129), 0xff)\n                        case /** @src 34:23816:24205  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_125, or(and(_129, not(65280)), 256))\n                        }\n                        default /// @src 34:23816:24205  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_34 := and(sload(/** @src 34:23943:23960  \"proposal.proposer\" */ _123), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_34)\n                            mstore(32, /** @src 34:23921:23942  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _130 := sload(keccak256(0, 64))\n                            /// @src 34:24019:24135  \"stakedAmount >...\"\n                            let expr_10 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 34:24019:24135  \"stakedAmount >...\"\n                            switch /** @src 34:24019:24065  \"stakedAmount >...\" */ gt(_128, _130)\n                            case /** @src 34:24019:24135  \"stakedAmount >...\" */ 0 {\n                                expr_10 := /** @src 34:24106:24135  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_130, _128)\n                            }\n                            default /// @src 34:24019:24135  \"stakedAmount >...\"\n                            {\n                                expr_10 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_34)\n                            mstore(32, /** @src 34:23921:23942  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_10)\n                        }\n                        let _131 := sload(/** @src 34:24237:24257  \"proposal.stakeAmount\" */ _127)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_7 := mul(_131, /** @src 34:24260:24261  \"5\" */ 0x05)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(_131), eq(/** @src 34:24260:24261  \"5\" */ 0x05, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_7, _131))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let r_1 := div(product_7, /** @src 34:24265:24268  \"100\" */ 0x64)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _132 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 34:24319:24336  \"proposal.proposer\" */ _123), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _132))\n                        mstore(32, /** @src 34:24310:24318  \"balances\" */ 0x09)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_22 := keccak256(0, 64)\n                        sstore(dataSlot_22, /** @src 34:24310:24351  \"balances[proposal.proposer] -= punishment\" */ checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:24310:24351  \"balances[proposal.proposer] -= punishment\" */ dataSlot_22), r_1))\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_35 := and(sload(/** @src 34:24484:24501  \"proposal.proposer\" */ _123), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _132)\n                        /// @src 34:24413:24537  \"FundsPenalizedForNonCompliance(...\"\n                        let _133 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_133, r_1)\n                        /// @src 34:24413:24537  \"FundsPenalizedForNonCompliance(...\"\n                        log3(_133, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 34:24413:24537  \"FundsPenalizedForNonCompliance(...\" */ 0xddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368, value_33, value_35)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xe13b7b31 {\n                        if callvalue() { revert(0, 0) }\n                        let param_8, param_9 := abi_decode_uint256t_uint256(calldatasize())\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 20:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 34:17744:17763  \"uint totalStake = 0\"\n                        let var_totalStake := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:17802:17823  \"proposals[proposalId]\"\n                        let _134, _135 := storage_array_index_access_struct_Proposal__dyn(param_8)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, param_8)\n                        mstore(0x20, /** @src 34:15593:15608  \"proposalOptions\" */ 0x0d)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_3 := sload(keccak256(0, 64))\n                        /// @src 34:17956:17966  \"uint i = 0\"\n                        let var_i_3 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:17951:18064  \"for (uint i = 0; i < optionCount; i++) {...\"\n                        for { }\n                        /** @src 34:17968:17983  \"i < optionCount\" */ lt(var_i_3, length_3)\n                        /// @src 34:17956:17966  \"uint i = 0\"\n                        {\n                            /// @src 34:17985:17988  \"i++\"\n                            var_i_3 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 34:17985:17988  \"i++\" */ var_i_3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 34:17985:17988  \"i++\"\n                        {\n                            /// @src 34:18005:18052  \"totalStake += getOptionVoteCount(proposalId, i)\"\n                            var_totalStake := checked_add_uint256(var_totalStake, /** @src 34:18019:18052  \"getOptionVoteCount(proposalId, i)\" */ fun_getOptionVoteCount(param_8, var_i_3))\n                        }\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_8 := mul(var_totalStake, /** @src 34:18395:18397  \"80\" */ 0x50)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(var_totalStake), eq(/** @src 34:18395:18397  \"80\" */ 0x50, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, var_totalStake))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        mstore(0, param_8)\n                        mstore(0x20, /** @src 34:15593:15608  \"proposalOptions\" */ 0x0d)\n                        /// @src 34:18449:18517  \"proposalOptions[proposalId][...\"\n                        let _136, _137 := storage_array_index_access_struct_Option__dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:18449:18517  \"proposalOptions[proposalId][...\" */ param_9)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _138 := sload(/** @src 34:18449:18527  \"proposalOptions[proposalId][...\" */ add(_136, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        /// @src 34:18571:18623  \"totalStake -...\"\n                        let expr_11 := checked_sub_uint256(var_totalStake, _138)\n                        /// @src 34:18659:18674  \"proposal.active\"\n                        let _139 := add(_134, 3)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _140 := sload(/** @src 34:18659:18674  \"proposal.active\" */ _139)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 34:18658:18674  \"!proposal.active\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_140, 0xff)))\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 0x20)\n                            mstore(add(memPtr_14, 36), 44)\n                            mstore(add(memPtr_14, 68), \"Proposal must be inactive to set\")\n                            mstore(add(memPtr_14, /** @src 34:18401:18404  \"100\" */ 0x64), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ \"tle rewards.\")\n                            revert(memPtr_14, 132)\n                        }\n                        if iszero(/** @src 34:18765:18784  \"!proposal.isSettled\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _140), 0xff)))\n                        {\n                            let memPtr_15 := mload(64)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, 4), 0x20)\n                            mstore(add(memPtr_15, 36), 23)\n                            mstore(add(memPtr_15, 68), \"Rewards already settled\")\n                            revert(memPtr_15, /** @src 34:18401:18404  \"100\" */ 0x64)\n                        }\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 34:18833:18863  \"totalVotesForWinningOption > 0\" */ iszero(_138)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_16 := mload(64)\n                            mstore(memPtr_16, shl(229, 4594637))\n                            mstore(add(memPtr_16, 4), 0x20)\n                            mstore(add(memPtr_16, 36), 27)\n                            mstore(add(memPtr_16, 68), \"No votes for winning option\")\n                            revert(memPtr_16, /** @src 34:18401:18404  \"100\" */ 0x64)\n                        }\n                        /// @src 34:18985:18998  \"uint256 i = 0\"\n                        let var_i_4 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 34:18966:20497  \"for (...\"\n                        for { }\n                        /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                        /// @src 34:18985:18998  \"uint256 i = 0\"\n                        {\n                            /// @src 34:19075:19078  \"i++\"\n                            var_i_4 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 34:19075:19078  \"i++\" */ var_i_4, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 34:19075:19078  \"i++\"\n                        {\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 34:19017:19041  \"voterAddressesByProposal\" */ 0x13)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_23 := keccak256(0, 64)\n                            /// @src 34:19013:19060  \"i < voterAddressesByProposal[proposalId].length\"\n                            if iszero(lt(var_i_4, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(dataSlot_23)))\n                            /// @src 34:19013:19060  \"i < voterAddressesByProposal[proposalId].length\"\n                            { break }\n                            /// @src 34:19182:19221  \"voterAddressesByProposal[proposalId][i]\"\n                            let _141, _142 := storage_array_index_access_address_dyn(/** @src 34:19182:19218  \"voterAddressesByProposal[proposalId]\" */ dataSlot_23, /** @src 34:19182:19221  \"voterAddressesByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_36 := and(shr(shl(/** @src 34:18659:18674  \"proposal.active\" */ 3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _142), sload(/** @src 34:19182:19221  \"voterAddressesByProposal[proposalId][i]\" */ _141)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 34:19255:19274  \"optionIdsByProposal\" */ 0x14)\n                            /// @src 34:19255:19289  \"optionIdsByProposal[proposalId][i]\"\n                            let _143, _144 := storage_array_index_access_address_dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:19255:19289  \"optionIdsByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_37 := shr(shl(/** @src 34:18659:18674  \"proposal.active\" */ 3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _144), sload(/** @src 34:19255:19289  \"optionIdsByProposal[proposalId][i]\" */ _143))\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 34:19324:19344  \"voteCountsByProposal\" */ 0x15)\n                            /// @src 34:19324:19359  \"voteCountsByProposal[proposalId][i]\"\n                            let _145, _146 := storage_array_index_access_address_dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 34:19324:19359  \"voteCountsByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_38 := shr(shl(/** @src 34:18659:18674  \"proposal.active\" */ 3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _146), sload(/** @src 34:19324:19359  \"voteCountsByProposal[proposalId][i]\" */ _145))\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, value_36)\n                            mstore(0x20, /** @src 34:19402:19418  \"usedVotingRights\" */ 0x10)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if /** @src 34:19402:19438  \"usedVotingRights[voter] >= voteCount\" */ lt(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 34:19402:19438  \"usedVotingRights[voter] >= voteCount\" */ value_38)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            {\n                                let memPtr_17 := mload(64)\n                                mstore(memPtr_17, shl(229, 4594637))\n                                mstore(add(memPtr_17, 4), 0x20)\n                                mstore(add(memPtr_17, 36), 31)\n                                mstore(add(memPtr_17, 68), \"Not enough locked voting rights\")\n                                revert(memPtr_17, /** @src 34:18401:18404  \"100\" */ 0x64)\n                            }\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, value_36)\n                            mstore(0x20, /** @src 34:19402:19418  \"usedVotingRights\" */ 0x10)\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_24 := keccak256(0, 64)\n                            sstore(dataSlot_24, /** @src 34:19522:19558  \"usedVotingRights[voter] -= voteCount\" */ checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:19522:19558  \"usedVotingRights[voter] -= voteCount\" */ dataSlot_24), value_38))\n                            /// @src 34:19575:20486  \"if (optionId == winningOptionId) {...\"\n                            switch /** @src 34:19579:19606  \"optionId == winningOptionId\" */ eq(value_37, param_9)\n                            case /** @src 34:19575:20486  \"if (optionId == winningOptionId) {...\" */ 0 {\n                                /// @src 34:20295:20319  \"voterPunish -= voteCount\"\n                                let expr_12 := checked_sub_uint256(/** @src 34:20148:20231  \"(voteCount * totalStakeExtractFee) /...\" */ checked_div_uint256(/** @src 34:20149:20181  \"voteCount * totalStakeExtractFee\" */ checked_mul_uint256(value_38, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, /** @src 34:18401:18404  \"100\" */ 0x64)), /** @src 34:20148:20231  \"(voteCount * totalStakeExtractFee) /...\" */ expr_11), /** @src 34:20295:20319  \"voterPunish -= voteCount\" */ value_38)\n                                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                mstore(0, value_36)\n                                mstore(0x20, /** @src 34:20338:20346  \"balances\" */ 0x09)\n                                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                let dataSlot_25 := keccak256(0, 64)\n                                sstore(dataSlot_25, /** @src 34:20338:20368  \"balances[voter] -= voterPunish\" */ checked_sub_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:20338:20368  \"balances[voter] -= voterPunish\" */ dataSlot_25), expr_12))\n                                /// @src 34:20414:20470  \"RewardDistributed(voter, proposalId, voterPunish, false)\"\n                                let _147 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                                mstore(_147, param_8)\n                                mstore(add(_147, 0x20), expr_12)\n                                mstore(add(_147, 64), 0)\n                                /// @src 34:20414:20470  \"RewardDistributed(voter, proposalId, voterPunish, false)\"\n                                log2(_147, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96, /** @src 34:20414:20470  \"RewardDistributed(voter, proposalId, voterPunish, false)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_36)\n                            }\n                            default /// @src 34:19575:20486  \"if (optionId == winningOptionId) {...\"\n                            {\n                                /// @src 34:19860:19884  \"voterReward -= voteCount\"\n                                let expr_13 := checked_sub_uint256(/** @src 34:19712:19796  \"(voteCount * totalStakeExtractFee) /...\" */ checked_div_uint256(/** @src 34:19713:19745  \"voteCount * totalStakeExtractFee\" */ checked_mul_uint256(value_38, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, /** @src 34:18401:18404  \"100\" */ 0x64)), /** @src 34:19712:19796  \"(voteCount * totalStakeExtractFee) /...\" */ _138), /** @src 34:19860:19884  \"voterReward -= voteCount\" */ value_38)\n                                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                mstore(0, value_36)\n                                mstore(0x20, /** @src 34:19954:19962  \"balances\" */ 0x09)\n                                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                let dataSlot_26 := keccak256(0, 64)\n                                sstore(dataSlot_26, /** @src 34:19954:19984  \"balances[voter] += voterReward\" */ checked_add_uint256(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:19954:19984  \"balances[voter] += voterReward\" */ dataSlot_26), expr_13))\n                                /// @src 34:20030:20085  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                let _148 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                                mstore(_148, param_8)\n                                mstore(add(_148, 0x20), expr_13)\n                                mstore(add(_148, 64), 1)\n                                /// @src 34:20030:20085  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                log2(_148, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96, /** @src 34:20030:20085  \"RewardDistributed(voter, proposalId, voterReward, true)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_36)\n                            }\n                        }\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(_139, or(and(sload(_139), not(65280)), 256))\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                    case 0xe2b239c8 {\n                        if callvalue() { revert(0, 0) }\n                        let param_10, param_11 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_10)\n                        mstore(0x20, /** @src 34:3206:3262  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ 20)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_27 := keccak256(0, 64)\n                        /// @src 34:3206:3262  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        if iszero(lt(param_11, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:3206:3262  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ dataSlot_27)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:3206:3262  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        let slot_10, offset_14 := storage_array_index_access_address_dyn(dataSlot_27, param_11)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _149 := sload(/** @src 34:3206:3262  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ slot_10)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_29 := mload(64)\n                        mstore(memPos_29, shr(shl(3, offset_14), _149))\n                        return(memPos_29, 0x20)\n                    }\n                    case 0xed4516c9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_39 := calldataload(4)\n                        /// @src 34:2203:2237  \"uint256[] public UserSstakeAmounts\"\n                        if iszero(lt(value_39, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:2203:2237  \"uint256[] public UserSstakeAmounts\" */ 6)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:2203:2237  \"uint256[] public UserSstakeAmounts\"\n                        let slot_11, offset_15 := storage_array_index_access_address_dyn_37061(value_39)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _150 := sload(/** @src 34:2203:2237  \"uint256[] public UserSstakeAmounts\" */ slot_11)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_30 := mload(64)\n                        mstore(memPos_30, shr(shl(3, offset_15), _150))\n                        return(memPos_30, 32)\n                    }\n                    case 0xeda0b804 {\n                        if callvalue() { revert(0, 0) }\n                        let param_12, param_13 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_12)\n                        mstore(0x20, /** @src 34:3138:3199  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ 19)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_28 := keccak256(0, 64)\n                        /// @src 34:3138:3199  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        if iszero(lt(param_13, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:3138:3199  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ dataSlot_28)))\n                        {\n                            revert(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 34:3138:3199  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        let slot_12, offset_16 := storage_array_index_access_address_dyn(dataSlot_28, param_13)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _151 := sload(/** @src 34:3138:3199  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ slot_12)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_31 := mload(64)\n                        mstore(memPos_31, and(shr(shl(3, offset_16), _151), sub(shl(160, 1), 1)))\n                        return(memPos_31, 0x20)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _152 := sub(shl(160, 1), 1)\n                        let _153 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _152)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _153)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _154 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_154, shl(224, 0x1e4fbdf7))\n                            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_154, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_154, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n                        }\n                        let _155 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x01)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x01, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(_155, not(sub(shl(168, 1), 256))), and(shl(8, value0_5), sub(shl(168, 1), 256))))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _155), _152), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _153)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xf496baa0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 34:3333:3408  \"mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal\" */ 22)\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_29 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_29)\n                        let _156 := sload(keccak256(0, 64))\n                        let memPos_32 := mload(64)\n                        mstore(memPos_32, _156)\n                        return(memPos_32, 32)\n                    }\n                    case 0xfe10226d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret_2 := fun_getCurrentProposalId()\n                        let memPos_33 := mload(64)\n                        mstore(memPos_33, ret_2)\n                        return(memPos_33, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_struct_Proposal__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 34:2244:2271  \"Proposal[] public proposals\" */ 7)))\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:2244:2271  \"Proposal[] public proposals\" */ 7)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(75276140696391174450305814049576319106646922510300487059720162673006384432776, mul(index, 5))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_37042(memPtr)\n            {\n                let newFreePtr := add(memPtr, 224)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_37044(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function storage_array_index_access_struct_VoteRecord__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                array := memPtr\n            }\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_string_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_string_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let innerOffset := calldataload(src)\n                    if gt(innerOffset, 0xffffffffffffffff)\n                    {\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ _4, _4)\n                    }\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function storage_array_index_access_address_dyn_37049(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 34:2135:2171  \"address[] public UserStakerAddresses\" */ 5)))\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:2135:2171  \"address[] public UserStakerAddresses\" */ 5)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(1546678032441257452667456735582814959992782782816731922691272282333561699760, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function storage_array_index_access_address_dyn_37061(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 34:9434:9451  \"UserSstakeAmounts\" */ 0x06)))\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:9434:9451  \"UserSstakeAmounts\" */ 0x06)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(111414077815863400510004064629973595961579173665589224203503662149373724986687, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function storage_array_index_access_struct_Option__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_string_dyn(length), not(31)))\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                value0 := value\n            }\n            function require_helper_stringliteral_25ad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n            }\n            function array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(value0)\n            {\n                let oldLen := sload(/** @src 34:8174:8183  \"proposals\" */ 0x07)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(/** @src 34:8174:8183  \"proposals\" */ 0x07, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Proposal__dyn(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(value0), sub(shl(160, 1), 1))))\n                let memberSlot := add(slot, _1)\n                let _2 := 32\n                let _3 := mload(add(value0, _2))\n                let newLen := mload(_3)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                }\n                let _4 := extract_byte_array_length(sload(memberSlot))\n                if gt(_4, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _5 := 0\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ memberSlot)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _2)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, _2) { deleteStart := data }\n                    let _6 := add(data, shr(5, add(_4, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _6) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _5)\n                    }\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                srcOffset := _2\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ memberSlot)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _2)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _2) }\n                    {\n                        sstore(dstPtr, mload(add(_3, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_3, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(memberSlot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    if newLen\n                    {\n                        value := mload(add(_3, srcOffset))\n                    }\n                    sstore(memberSlot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, 2), mload(add(value0, 64)))\n                let memberSlot_1 := add(slot, 3)\n                let _7 := iszero(iszero(mload(add(value0, 96))))\n                let _8 := sload(memberSlot_1)\n                let _9 := and(shl(8, iszero(iszero(mload(add(value0, 128))))), 65280)\n                sstore(memberSlot_1, or(or(_9, or(and(_8, not(16777215)), and(_7, 255))), and(shl(16, iszero(iszero(mload(add(value0, 160))))), 16711680)))\n                sstore(add(slot, 4), mload(add(value0, 192)))\n            }\n            function array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(array, add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Option__dyn(array, oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                let _2 := mload(value0)\n                let newLen := mload(_2)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _3 := extract_byte_array_length(sload(slot))\n                if gt(_3, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _4 := 0\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ slot)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, 0x20) { deleteStart := data }\n                    let _5 := add(data, shr(5, add(_3, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _5) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _4)\n                    }\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(0, slot)\n                    let dstPtr := keccak256(0, srcOffset)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(_2, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, 0x20)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_2, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(_2, srcOffset))\n                    }\n                    sstore(slot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, _1), mload(add(value0, 0x20)))\n            }\n            function abi_encode_array_string_dyn(value, pos) -> end\n            {\n                let pos_1 := pos\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let tail := add(add(pos_1, shl(5, length)), 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail, pos_1), not(31)))\n                    tail := abi_encode_string(mload(srcPtr), tail)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                end := tail\n            }\n            function require_helper_stringliteral_ad61(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"Proposal does not exist.\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 9981 @src 34:15643:16052  \"function getOptionVoteCount(...\"\n            function fun_getOptionVoteCount(var_proposalId, var_optionIndex) -> var\n            {\n                /// @src 34:15778:15845  \"require(proposalId < proposalsLength(), \\\"Proposal does not exist.\\\")\"\n                require_helper_stringliteral_ad61(/** @src 34:15786:15816  \"proposalId < proposalsLength()\" */ lt(var_proposalId, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:15468:15477  \"proposals\" */ 0x07)))\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ var_proposalId)\n                mstore(0x20, /** @src 34:15892:15907  \"proposalOptions\" */ 0x0d)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                if iszero(/** @src 34:15878:15926  \"optionIndex < proposalOptions[proposalId].length\" */ lt(var_optionIndex, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))))\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Option does not exist.\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ var_proposalId)\n                mstore(0x20, /** @src 34:15892:15907  \"proposalOptions\" */ 0x0d)\n                /// @src 34:15994:16034  \"proposalOptions[proposalId][optionIndex]\"\n                let _1, _2 := storage_array_index_access_struct_Option__dyn(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40), /** @src 34:15994:16034  \"proposalOptions[proposalId][optionIndex]\" */ var_optionIndex)\n                /// @src 34:15987:16044  \"return proposalOptions[proposalId][optionIndex].voteCount\"\n                var := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:15994:16044  \"proposalOptions[proposalId][optionIndex].voteCount\" */ add(_1, 1))\n            }\n            /// @ast-id 10657 @src 34:24553:24858  \"function deactivateProposal(uint256 _proposalId) public {...\"\n            function fun_deactivateProposal(var_proposalId)\n            {\n                /// @src 34:24648:24670  \"proposals[_proposalId]\"\n                let _1, _2 := storage_array_index_access_struct_Proposal__dyn(var_proposalId)\n                /// @src 34:24685:24738  \"block.timestamp > proposal.endTime || proposal.active\"\n                let expr := /** @src 34:24685:24719  \"block.timestamp > proposal.endTime\" */ gt(/** @src 34:24685:24700  \"block.timestamp\" */ timestamp(), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:24703:24719  \"proposal.endTime\" */ add(_1, 4)))\n                /// @src 34:24685:24738  \"block.timestamp > proposal.endTime || proposal.active\"\n                if iszero(expr)\n                {\n                    expr := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(sload(/** @src 34:24723:24738  \"proposal.active\" */ add(_1, 3)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                }\n                /// @src 34:24681:24851  \"if (block.timestamp > proposal.endTime || proposal.active) {...\"\n                if expr\n                {\n                    /// @src 34:24755:24770  \"proposal.active\"\n                    let _3 := add(_1, 3)\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    sstore(_3, and(sload(_3), not(255)))\n                    /// @src 34:24798:24839  \"ProposalStatusChanged(_proposalId, false)\"\n                    let _4 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    mstore(_4, var_proposalId)\n                    mstore(add(_4, 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 34:24798:24839  \"ProposalStatusChanged(_proposalId, false)\"\n                    log1(_4, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64, /** @src 34:24798:24839  \"ProposalStatusChanged(_proposalId, false)\" */ 0x68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f)\n                }\n            }\n            /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function array_push_from_address_to_array_address_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_2, not(shl(shiftBits, _1))), shl(shiftBits, and(value0, _1))))\n            }\n            function array_push_from_uint256_to_array_uint256_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                update_storage_value_uint256_to_uint256(slot, offset, value0)\n            }\n            function require_helper_stringliteral_dd70(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Proposal is still active.\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_5ac8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"Funds already settled\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Insufficient balance\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_bool_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 9605 @src 34:11576:12059  \"function getAvailableWithdrawBalance(...\"\n            function fun_getAvailableWithdrawBalance(var_user) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(var_user, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 34:11707:11715  \"balances\" */ 0x09)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))\n                mstore(0x20, /** @src 34:11758:11774  \"usedVotingRights\" */ 0x10)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _3 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))\n                mstore(0x20, /** @src 34:11819:11840  \"proposalTokenDeposits\" */ 0x0f)\n                /// @src 34:11939:11974  \"lockedForVoting + lockedInProposals\"\n                let expr := checked_add_uint256(_3, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40)))\n                /// @src 34:11992:12051  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                let expr_1 := /** @src -1:-1:-1 */ _1\n                /// @src 34:11992:12051  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                switch /** @src 34:11992:12018  \"totalBalance > totalLocked\" */ gt(_2, expr)\n                case /** @src 34:11992:12051  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\" */ 0 {\n                    expr_1 := /** @src -1:-1:-1 */ _1\n                }\n                default /// @src 34:11992:12051  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                {\n                    expr_1 := /** @src 34:12021:12047  \"totalBalance - totalLocked\" */ checked_sub_uint256(_2, expr)\n                }\n                /// @src 34:11985:12051  \"return totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                var := expr_1\n            }\n            /// @ast-id 10010 @src 34:16060:16623  \"function getCurrentProposalId() public view returns (uint256) {...\"\n            function fun_getCurrentProposalId() -> var\n            {\n                /// @src 34:16163:16179  \"proposals.length\"\n                let expr := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 34:16163:16172  \"proposals\" */ 0x07)\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _1 := sload(/** @src 34:16220:16232  \"_proposalIds\" */ 0x03)\n                /// @src 34:16255:16616  \"if (proposalArrayLength == currentCounterValue) {...\"\n                switch /** @src 34:16259:16301  \"proposalArrayLength == currentCounterValue\" */ eq(expr, _1)\n                case /** @src 34:16255:16616  \"if (proposalArrayLength == currentCounterValue) {...\" */ 0 {\n                    /// @src 34:16543:16561  \"return MAX_UINT256\"\n                    var := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(0)\n                    /// @src 34:16543:16561  \"return MAX_UINT256\"\n                    leave\n                }\n                default /// @src 34:16255:16616  \"if (proposalArrayLength == currentCounterValue) {...\"\n                {\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    let diff := add(_1, not(0))\n                    if gt(diff, _1)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 34:16403:16433  \"return currentCounterValue - 1\"\n                    var := diff\n                    leave\n                }\n            }\n            /// @ast-id 2519 @src 20:2431:2738  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 20:2554:2640  \"if (_status == ENTERED) {...\"\n                if /** @src 20:2558:2576  \"_status == ENTERED\" */ eq(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 20:2558:2565  \"_status\" */ 0x00), /** @src 20:1755:1756  \"2\" */ 0x02)\n                /// @src 20:2554:2640  \"if (_status == ENTERED) {...\"\n                {\n                    /// @src 20:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    let _1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 20:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    mstore(_1, shl(224, 0x3ee5aeb5))\n                    revert(_1, 4)\n                }\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                sstore(/** @src 20:2558:2565  \"_status\" */ 0x00, /** @src 20:1755:1756  \"2\" */ 0x02)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let value := and(shr(8, sload(/** @src 0:1710:1716  \"_owner\" */ 0x01)), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ value, /** @src 17:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 17:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n                }\n            }\n            /// @ast-id 2424 @src 19:2002:2130  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 19:2063:2124  \"if (paused()) {...\"\n                if /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(sload(/** @src 19:1920:1927  \"_paused\" */ 0x01), /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                /// @src 19:2063:2124  \"if (paused()) {...\"\n                {\n                    /// @src 19:2098:2113  \"EnforcedPause()\"\n                    let _1 := /** @src 34:812:24861  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 19:2098:2113  \"EnforcedPause()\"\n                    mstore(_1, shl(224, 0xd93c0665))\n                    revert(_1, 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220bdffd17bdf307504884a4d53b034cc341e4f64e4dca20c50afdd39b47321f1e864736f6c63430008180033\"\n    }\n}\n","hash":"010006155579f08f548bf0816231754a0154cf656728550af3d8b28b1cc803a9","factoryDependencies":{}}}}}}