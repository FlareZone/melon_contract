{"id":"76c5449907d63fadba3f5ffff5dd6e48","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/FlareToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\n\r\n\r\n\r\ncontract FlareToken is ERC20Permit, Ownable, ERC20Pausable{\r\n    constructor()ERC20(\"FlareToken\", \"FLR\")  ERC20Permit(\"flare\") Ownable(msg.sender){}\r\n\r\n    // 在这里覆盖另一个基类的 _update 函数\r\n    function _update(address from, address to, uint256 value) internal override(ERC20, ERC20Pausable) {\r\n        // 调用 ERC20 的 _update 函数\r\n        super._update(from, to, value);\r\n    }\r\n\r\n    // 铸造代币\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n    // 暂停代币转账\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n    // 恢复代币转账\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n}\r\n"},"contracts/IProposalLogic.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\ninterface  IProposalLogic {\r\n    // 类型声明\r\n    // 提案\r\n    struct Proposal {\r\n        address proposer; // 提案发起人\r\n        string description; // 提案描述\r\n        uint256 stakeAmount; // 质押代币数量\r\n        bool active; // 提案是否活跃\r\n        bool isSettled; // 添加属性以跟踪提案是否已结算\r\n        bool isWagered;\r\n        uint256 endTime;\r\n    }\r\n    // 提议选项\r\n    struct Option {\r\n        string description; // 选项描述\r\n        uint256 voteCount; // 投票计数\r\n    }\r\n    // 质押\r\n    struct Stake {\r\n        uint256 amount; // 质押的金额\r\n        uint256 unlockTime; // 资金解锁的时间\r\n        address staker; // 质押者地址\r\n        bool isWagered; //是否对赌\r\n    }\r\n    // 投票记录\r\n    struct VoteRecord {\r\n        uint256 proposalId; // 提案ID\r\n        uint256 optionId; // 用户选择的选项ID\r\n        uint256 amount; // 投票数量\r\n    }\r\n    //事件\r\n    event Received(address caller, uint amount, string message);\r\n    event Deposited(address indexed user, uint amount);\r\n    event Withdrawn(address indexed user, uint amount);\r\n    event Voted(\r\n        address indexed _address,\r\n        uint256 indexed _proposalId,\r\n        uint256 indexed _optionId,\r\n        uint256 _amount\r\n    );\r\n    event ProposalAndOptionsSubmitted(\r\n        address indexed user,\r\n        uint256 indexed proposalIndex,\r\n        string proposalDescription,\r\n        string[] optionDescriptions,\r\n        uint256 endtime\r\n    );\r\n    event DepositForProposal(\r\n        address indexed staker,\r\n        uint256 amount,\r\n        bool staked,\r\n        uint256 unlockTime,\r\n        uint256 indexed stakeIndex\r\n    );\r\n    event TokensStaked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        bool isForProposal\r\n    );\r\n    event FundsSettledForAverageQuality(\r\n        uint256 indexed proposalId,\r\n        address indexed proposer,\r\n        uint256 amountToReturn\r\n    );\r\n    event WithdrawalDetailed(\r\n        address indexed user,\r\n        uint256 amountWithdrawn,\r\n        uint256 balanceAfterWithdrawal\r\n    );\r\n    event UnlockTimeUpdated(\r\n        address indexed staker,\r\n        uint256 indexed stakeIndex,\r\n        uint256 newUnlockTime\r\n    );\r\n    event FundsPenalizedForNonCompliance(\r\n        uint256 indexed proposalId,\r\n        address indexed proposer,\r\n        uint256 penalty\r\n    );\r\n    event ProposalStatusChanged(uint256 proposalId, bool isActive);\r\n    event ProposalEndTime(uint256 _proposalId, uint256 endTime);\r\n    event ProposalForUser(\r\n        address indexed userAddress,\r\n        uint256 indexed proposalId,\r\n        string proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] optionDescriptions,\r\n        uint256 endtime\r\n    );\r\n    event StakeReleased(\r\n        address indexed user,\r\n        uint256 stakeIndex,\r\n        bool penalized,\r\n        uint256 amountReleased\r\n    );\r\n    event ProposalEnded(uint256 indexed proposalId, bool isActive);\r\n    event ProposalConcluded(uint256 indexed proposalId, bool isActive);\r\n    event RewardDistributed(\r\n        address indexed voter,\r\n        uint256 proposalId,\r\n        uint256 amount,\r\n        bool isWinner\r\n    );\r\n    event ExchangePoints(address indexed user, uint256 points);\r\n    // 错误\r\n\r\n    // 积分兑换\r\n    function exchangePoints(uint256 amount) external;\r\n\r\n    function getUserBalance(address) external view returns (uint256);\r\n\r\n    function getUserVotingRights(address userAddress) external view returns (uint256);\r\n    \r\n    function deposit(uint256 amount) external;\r\n\r\n    // Submit a proposal for review\r\n    function submitProposalForReview(uint256 amount) external returns (uint256);\r\n\r\n    // Create a proposal with multiple options\r\n    function createProposalWithOptions(\r\n        string memory proposalDescription,\r\n        string[] memory optionDescriptions,\r\n        uint amount,\r\n        uint256 endtime\r\n    ) external returns (uint256);\r\n\r\n    // Process a user's stake in a proposal\r\n    function processUserStakedProposal(\r\n        address userAddress,\r\n        string memory proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] memory optionDescriptions,\r\n        uint256 stakeIndex,\r\n        uint256 endtime\r\n    ) external returns (uint256);\r\n\r\n    // Withdraw from the contract\r\n    function withdraw(uint256 _amount) external;\r\n\r\n    // Get the available balance that can be withdrawn\r\n    function getAvailableWithdrawBalance(\r\n        address user\r\n    ) external view returns (uint256);\r\n\r\n    // Check the status of a proposal\r\n    function getProposalStatus(\r\n        uint256 _proposalId\r\n    ) external view returns (bool);\r\n\r\n    // Vote on a proposal's option\r\n    function vote(\r\n        uint256 _proposalId,\r\n        uint256 _optionId,\r\n        uint256 _amount\r\n    ) external;\r\n\r\n    // Get the contract's balance\r\n    function getContractBalance() external view returns (uint);\r\n\r\n    // Pause the contract\r\n    function pause() external;\r\n\r\n    // Unpause the contract\r\n    function unpause() external;\r\n\r\n    // Get a user's voting history\r\n    function getUserVotingHistory(\r\n        address _user\r\n    )\r\n        external\r\n        view\r\n        returns (uint256[] memory, uint256[] memory, uint256[] memory);\r\n\r\n    // Get the length of the proposals array\r\n    function proposalsLength() external view returns (uint256);\r\n\r\n    // Get the number of options for a proposal\r\n    function getOptionsCount(\r\n        uint256 proposalId\r\n    ) external view returns (uint256);\r\n\r\n    // Get the vote count for an option in a proposal\r\n    function getOptionVoteCount(\r\n        uint256 proposalId,\r\n        uint256 optionIndex\r\n    ) external view returns (uint256);\r\n\r\n    // Get the ID of the current proposal\r\n    function getCurrentProposalId() external view returns (uint256);\r\n\r\n    // Process a stake release\r\n    function handleStakeRelease(\r\n        address user,\r\n        uint256 stakeIndex,\r\n        bool penalizeStake\r\n    ) external;\r\n\r\n    // Settle rewards\r\n    function settleRewards(\r\n        uint256 proposalId,\r\n        uint256 winningOptionId\r\n    ) external;\r\n\r\n    // Settle funds for the average quality\r\n    function settleFundsForAverageQuality(uint256 _proposalId) external;\r\n\r\n    // Verify compliance and expectations\r\n    function verifyComplianceAndExpectations(\r\n        uint256 _proposalId\r\n    ) external;\r\n\r\n    // Check if the quality compliance is below expectations\r\n    function checkQualityComplianceBelowExpectations(\r\n        uint256 _proposalId\r\n    ) external;\r\n\r\n    // Deactivate a proposal\r\n    function deactivateProposal(uint256 _proposalId) external;\r\n}\r\n"},"contracts/ProposalLogic.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"./IProposalLogic.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./Counters.sol\";\r\n\r\ncontract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {\r\n    \r\n    // 状态变量\r\n    uint256 constant MAX_UINT256 = type(uint256).max;\r\n    address public myToken; // 用于投票的代币地址\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _proposalIds;\r\n    Counters.Counter private _UserStakeIdCounter; // 用于跟踪每次质押的计数器\r\n    address[] public UserStakerAddresses; // 质押者地址数组\r\n    uint256[] public UserSstakeAmounts;\r\n    Proposal[] public proposals; // 提案数组\r\n\r\n    mapping(uint256 => uint256) public votingEndTimes; // 投票结束时间\r\n    mapping(address => uint256) public balances;\r\n    mapping(uint256 => address[]) public proposalVoters;\r\n    mapping(address => VoteRecord[]) public userVotingHistory; // 用户的投票历史记录映射\r\n    mapping(address => Stake[]) public stakesForUser;\r\n    mapping(uint256 => Option[]) public proposalOptions; // 提案ID到选项数组的映射\r\n    mapping(address => mapping(uint256 => bool)) public voters;\r\n    // 用户发起提案时的金额\r\n    mapping(address => uint256) public proposalTokenDeposits;\r\n    // 用户投票的金额\r\n    mapping(address => uint256) public usedVotingRights;\r\n    mapping(address => mapping(uint256 => uint256)) public votingRecords;\r\n    mapping(address => mapping(uint256 => uint256)) public added_proposal;\r\n    mapping(uint256 => address[]) public voterAddressesByProposal;\r\n    mapping(uint256 => uint256[]) public optionIdsByProposal;\r\n    mapping(uint256 => uint256[]) public voteCountsByProposal;\r\n    mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal;\r\n    // 修饰符\r\n\r\n    // 函数\r\n    constructor(address _myToken) Ownable(msg.sender) {\r\n        myToken = _myToken;\r\n    }\r\n\r\n    // 获取用户余额\r\n    function getUserBalance(address userAddress) public view returns (uint256) {\r\n        return balances[userAddress];\r\n    }\r\n\r\n    // 获取用户投票的金额\r\n    function getUserVotingRights(address userAddress) public view returns (uint256) {\r\n        return usedVotingRights[userAddress];\r\n    }\r\n\r\n    // 常规质押代币\r\n    function deposit(uint256 amount) public {\r\n        require(\r\n            IERC20(myToken).transferFrom(msg.sender, address(this), amount),\r\n            \"Transfer failed\"\r\n        );\r\n        balances[msg.sender] = balances[msg.sender] + amount;\r\n        emit Deposited(msg.sender, amount);\r\n    }\r\n\r\n    function submitProposalForReview(uint256 amount) public returns (uint256) {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        require(\r\n            balances[msg.sender] - usedVotingRights[msg.sender] >= amount,\r\n            \"Insufficient balance\"\r\n        );\r\n        uint256 unlockTime = block.timestamp + 7 days; // 假设7天后解锁\r\n\r\n        uint256 User_stakeIndex = _UserStakeIdCounter.current();\r\n        _UserStakeIdCounter.increment(); // 自动增加质押计数器\r\n\r\n        // 根据amount的值设置isWagered\r\n        bool isWagered;\r\n        if (amount > 0) {\r\n            isWagered = true;\r\n            proposalTokenDeposits[msg.sender] += amount;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n\r\n        UserStakerAddresses.push(msg.sender);\r\n        UserSstakeAmounts.push(amount);\r\n        emit DepositForProposal(\r\n            msg.sender,\r\n            amount,\r\n            isWagered,\r\n            unlockTime,\r\n            User_stakeIndex\r\n        );\r\n        return User_stakeIndex; // 返回新创建的质押索引， 用于标记。。。 不等于提案id\r\n    }\r\n\r\n    function createProposalWithOptions(\r\n        string memory proposalDescription,\r\n        string[] memory optionDescriptions,\r\n        uint amount,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256) {\r\n        // 创建提案\r\n        uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        bool isWagered = amount > 0;\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        proposals.push(\r\n            Proposal({\r\n                proposer: msg.sender,\r\n                description: proposalDescription,\r\n                stakeAmount: amount,\r\n                active: true,\r\n                isSettled: false,\r\n                isWagered: isWagered,\r\n                endTime: unlockTime\r\n            })\r\n        );\r\n\r\n        // 为提案添加选项\r\n        for (uint i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(\r\n                Option({description: optionDescriptions[i], voteCount: 0})\r\n            );\r\n        }\r\n        // 触发事件\r\n        emit ProposalAndOptionsSubmitted(\r\n            msg.sender,\r\n            proposalId,\r\n            proposalDescription,\r\n            optionDescriptions,\r\n            unlockTime\r\n        );\r\n\r\n        return proposalId; // 返回新创建的提案ID\r\n    }\r\n\r\n    function processUserStakedProposal(\r\n        address userAddress,\r\n        string memory proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] memory optionDescriptions,\r\n        uint256 stakeIndex,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256) {\r\n        address UserAddress = UserStakerAddresses[stakeIndex];\r\n        uint256 UserAmount = UserSstakeAmounts[stakeIndex];\r\n        require(UserAddress == userAddress, \"the address is not same\");\r\n        require(\r\n            stakeAmount == UserAmount,\r\n            \"Staked amount does not match or insufficient\"\r\n        );\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        bool isWagered;\r\n        if (stakeAmount > 0) {\r\n            isWagered = true;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n        proposals.push(\r\n            Proposal({\r\n                proposer: userAddress,\r\n                description: proposalDescription,\r\n                stakeAmount: stakeAmount,\r\n                active: true,\r\n                isSettled: false,\r\n                isWagered: isWagered,\r\n                endTime: unlockTime\r\n            })\r\n        );\r\n\r\n        uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        for (uint256 i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(\r\n                Option({description: optionDescriptions[i], voteCount: 0})\r\n            );\r\n        }\r\n        emit ProposalForUser(\r\n            userAddress,\r\n            proposalId,\r\n            proposalDescription,\r\n            stakeAmount,\r\n            optionDescriptions,\r\n            unlockTime\r\n        );\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    function exchangePoints(uint256 points) public{\r\n        require(points > 0, \"Points must be greater than zero\");\r\n        // 执行兑换逻辑\r\n        balances[msg.sender] +=  points;\r\n        emit ExchangePoints(msg.sender, points);\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public nonReentrant {\r\n        // 确保用户有足够的余额来提取\r\n        uint256 availableBalance = getAvailableWithdrawBalance(msg.sender);\r\n        require(\r\n            availableBalance >= _amount,\r\n            \"Not enough available balance to withdraw\"\r\n        );\r\n\r\n        // 在余额更新前执行转账\r\n        require(\r\n            IERC20(myToken).transfer(msg.sender, _amount),\r\n            \"Transfer failed\"\r\n        );\r\n\r\n        // 更新余额\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n\r\n        // 触发提款事件\r\n        emit WithdrawalDetailed(msg.sender, _amount, balances[msg.sender]);\r\n    }\r\n\r\n    function getAvailableWithdrawBalance(\r\n        address user\r\n    ) public view returns (uint256) {\r\n        uint256 totalBalance = balances[user];\r\n        uint256 lockedForVoting = usedVotingRights[user];\r\n        uint256 lockedInProposals = proposalTokenDeposits[user];\r\n\r\n        // 计算因提案和投票锁定的代币总量\r\n        uint256 totalLocked = lockedForVoting + lockedInProposals;\r\n        return totalBalance > totalLocked ? totalBalance - totalLocked : 0;\r\n    }\r\n\r\n    function getProposalStatus(uint256 _proposalId) public view returns (bool) {\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        return proposal.active;\r\n    }\r\n\r\n    // 投票\r\n    function vote(\r\n        uint256 _proposalId,\r\n        uint256 _optionId,\r\n        uint256 _amount\r\n    ) public whenNotPaused {\r\n        require(_proposalId < proposals.length, \"The proposal does not exist\");\r\n        require(\r\n            _optionId < proposalOptions[_proposalId].length,\r\n            \"The option does not exist\"\r\n        );\r\n        require(\r\n            block.timestamp < proposals[_proposalId].endTime,\r\n            \"The voting period for this proposal has ended\"\r\n        );\r\n        require(proposals[_proposalId].active, \"The proposal is not active\");\r\n        // 余额减去投票锁定的代币数量和自己发起的提案锁定的代币数量\r\n        uint256 remainingVotingRights = balances[msg.sender] -\r\n            usedVotingRights[msg.sender] -\r\n            proposalTokenDeposits[msg.sender];\r\n        require(remainingVotingRights >= _amount, \"Insufficient voting rights\");\r\n        //  更新用户投票金额\r\n        usedVotingRights[msg.sender] = usedVotingRights[msg.sender] + _amount;\r\n        // 更新被选中提案选项的票数\r\n        // 更新用户对应的提案的投票金额\r\n        proposalOptions[_proposalId][_optionId].voteCount += _amount;\r\n        votingRecords[msg.sender][_proposalId] += _amount;\r\n        // 记录已经投票过\r\n        voters[msg.sender][_proposalId] = true;\r\n        // 记录用户投票历史\r\n        userVotingHistory[msg.sender].push(\r\n            VoteRecord(_proposalId, _optionId, _amount)\r\n        );\r\n        // 记录当前投票者\r\n        proposalVoters[_proposalId].push(msg.sender);\r\n\r\n        // 记录投票者地址、选项ID和投票数\r\n        voterAddressesByProposal[_proposalId].push(msg.sender);\r\n        optionIdsByProposal[_proposalId].push(_optionId);\r\n        voteCountsByProposal[_proposalId].push(_amount);\r\n\r\n        // 记录投票者在提案中的索引\r\n        voterIndexInProposal[msg.sender][_proposalId] =\r\n            voterAddressesByProposal[_proposalId].length -\r\n            1;\r\n\r\n        emit Voted(msg.sender, _proposalId, _optionId, _amount);\r\n    }\r\n\r\n    // Get the balance of the contract itself in MyToken\r\n    function getContractBalance() public view returns (uint) {\r\n        return IERC20(myToken).balanceOf(address(this));\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function getUserVotingHistory(\r\n        address _user\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory proposalIds,\r\n            uint256[] memory optionIds,\r\n            uint256[] memory amounts\r\n        )\r\n    {\r\n        VoteRecord[] storage records = userVotingHistory[_user];\r\n        proposalIds = new uint256[](records.length);\r\n        optionIds = new uint256[](records.length);\r\n        amounts = new uint256[](records.length);\r\n\r\n        for (uint256 i = 0; i < records.length; i++) {\r\n            proposalIds[i] = records[i].proposalId;\r\n            optionIds[i] = records[i].optionId;\r\n            amounts[i] = records[i].amount;\r\n        }\r\n    }\r\n\r\n    function proposalsLength() public view returns (uint256) {\r\n        return proposals.length;\r\n    }\r\n\r\n    function getOptionsCount(uint256 proposalId) public view returns (uint256) {\r\n        return proposalOptions[proposalId].length;\r\n    }\r\n\r\n    function getOptionVoteCount(\r\n        uint256 proposalId,\r\n        uint256 optionIndex\r\n    ) public view returns (uint256) {\r\n        require(proposalId < proposalsLength(), \"Proposal does not exist.\");\r\n        require(\r\n            optionIndex < proposalOptions[proposalId].length,\r\n            \"Option does not exist.\"\r\n        );\r\n        return proposalOptions[proposalId][optionIndex].voteCount;\r\n    }\r\n\r\n    function getCurrentProposalId() public view returns (uint256) {\r\n        uint256 proposalArrayLength = proposals.length;\r\n        uint256 currentCounterValue = _proposalIds.current();\r\n\r\n        if (proposalArrayLength == currentCounterValue) {\r\n            // 如果数组长度和计数器的值相等，返回当前的提案ID\r\n            return currentCounterValue - 1;\r\n        } else {\r\n            // 如果不相等，可以返回一个错误标识或默认值\r\n            return MAX_UINT256; // 例如返回一个最大值表示错误\r\n        }\r\n    }\r\n\r\n    function handleStakeRelease(\r\n        address user,\r\n        uint256 stakeIndex,\r\n        bool penalizeStake\r\n    ) public onlyOwner {\r\n        // 确保索引在范围内\r\n        require(\r\n            stakeIndex < UserSstakeAmounts.length,\r\n            \"Stake index out of bounds\"\r\n        );\r\n        uint256 amountToRelease = UserSstakeAmounts[stakeIndex];\r\n        proposalTokenDeposits[user] -= amountToRelease;\r\n\r\n        // 如果需要罚款，则计算并扣除罚款\r\n        if (penalizeStake) {\r\n            uint256 penaltyAmount = (amountToRelease * 10) / 100; // 计算10%罚款\r\n            amountToRelease -= penaltyAmount; // 减去罚款\r\n            balances[user] -= penaltyAmount; // 从用户余额扣除罚款\r\n        }\r\n        // 清除处理过的质押金额\r\n        UserSstakeAmounts[stakeIndex] = 0;\r\n\r\n        // 触发事件，通知质押已被释放\r\n        emit StakeReleased(user, stakeIndex, penalizeStake, amountToRelease);\r\n    }\r\n\r\n    function settleRewards(\r\n        uint256 proposalId,\r\n        uint256 winningOptionId\r\n    ) public onlyOwner nonReentrant {\r\n        uint totalStake = 0;\r\n        Proposal storage proposal = proposals[proposalId];\r\n        // 计算该提案所有选项质押的总金额\r\n        uint optionCount = getOptionsCount(proposalId);\r\n\r\n        for (uint i = 0; i < optionCount; i++) {\r\n            totalStake += getOptionVoteCount(proposalId, i);\r\n        }\r\n        // 计算抽取5%平台手续费和5%提案发起人奖励后的提案代币数量\r\n        // uint platformFee = (totalStake * 5) / 100;\r\n        // uint proposalPromoterReward = (totalStake * 5) / 100;\r\n        // uint totalFee = platformFee + proposalPromoterReward;\r\n        uint totalStakeExtractFee = (totalStake * 80) / 100;\r\n        uint totalVotesForWinningOption = proposalOptions[proposalId][\r\n            winningOptionId\r\n        ].voteCount;\r\n        uint totalVotesForFailedOption = totalStake -\r\n            totalVotesForWinningOption;\r\n\r\n        require(\r\n            !proposal.active,\r\n            \"Proposal must be inactive to settle rewards.\"\r\n        );\r\n        require(!proposal.isSettled, \"Rewards already settled\");\r\n\r\n        require(totalVotesForWinningOption > 0, \"No votes for winning option\");\r\n        // 假设的奖池总金额和平台收取比例\r\n\r\n        for (\r\n            uint256 i = 0;\r\n            i < voterAddressesByProposal[proposalId].length;\r\n            i++\r\n        ) {\r\n            // 获取投票者地址、选项ID和投票数\r\n            address voter = voterAddressesByProposal[proposalId][i];\r\n            uint256 optionId = optionIdsByProposal[proposalId][i];\r\n            uint256 voteCount = voteCountsByProposal[proposalId][i];\r\n\r\n            require(\r\n                usedVotingRights[voter] >= voteCount,\r\n                \"Not enough locked voting rights\"\r\n            );\r\n\r\n            usedVotingRights[voter] -= voteCount;\r\n\r\n            if (optionId == winningOptionId) {\r\n                // 按照投票人质押的比例分配奖励\r\n                uint256 voterReward = (voteCount * totalStakeExtractFee) /\r\n                    totalVotesForWinningOption;\r\n                // 计算获利部分金额\r\n                voterReward -= voteCount;\r\n                // 计算并分配奖励给赢家\r\n                balances[voter] += voterReward; // 更新赢家余额\r\n                emit RewardDistributed(voter, proposalId, voterReward, true);\r\n            } else {\r\n                uint256 voterPunish = (voteCount * totalStakeExtractFee) /\r\n                    totalVotesForFailedOption;\r\n                // 计算惩罚部分金额\r\n                voterPunish -= voteCount;\r\n                balances[voter] -= voterPunish; // 更新输家余额\r\n                emit RewardDistributed(voter, proposalId, voterPunish, false);\r\n            }\r\n        }\r\n        // 更新提案状态\r\n        proposal.isSettled = true;\r\n    }\r\n\r\n    // 评价一般提案\r\n    function settleFundsForAverageQuality(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 5) / 100; // Calculating 5% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        emit FundsSettledForAverageQuality(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            profit\r\n        );\r\n    }\r\n\r\n    function verifyComplianceAndExpectations(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 10) / 100; // Calculating 10% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        emit FundsSettledForAverageQuality(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            profit\r\n        );\r\n    }\r\n\r\n    function checkQualityComplianceBelowExpectations(\r\n        uint256 _proposalId\r\n    ) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId); // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if (proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount >\r\n                currentDeposit\r\n                ? 0\r\n                : currentDeposit - stakedAmount;\r\n        } else {\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 punishment = (proposal.stakeAmount * 5) / 100; // Calculating 5% punishment\r\n\r\n        balances[proposal.proposer] -= punishment; // Updating balance without actual transfer\r\n\r\n        emit FundsPenalizedForNonCompliance(\r\n            _proposalId,\r\n            proposal.proposer,\r\n            punishment\r\n        );\r\n    }\r\n\r\n    function deactivateProposal(uint256 _proposalId) public {\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        if (block.timestamp > proposal.endTime || proposal.active) {\r\n            proposal.active = false;\r\n            emit ProposalStatusChanged(_proposalId, false);\r\n        }\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"16","start":6457,"end":6481},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/ProposalLogic.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"24","start":7899,"end":7944},"type":"Warning"}],"version":"0.8.24","long_version":"0.8.24+commit.e11b9ed9.Windows.msvc","zk_version":"1.4.0","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1182],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1183,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1182],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":184,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":184,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":184,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":189,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":310,"src":"278:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":234,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":310,"src":"2186:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":310,"src":"4424:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6420:2"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1182],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1116]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1117,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1183,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"1428:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1437:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"1445:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1461:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1116,902,1182],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":824,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":369,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":824,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1109],"body":{"id":378,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":824,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1115],"body":{"id":387,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":824,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":824,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":824,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":824,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":824,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":824,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":506,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":507,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":507,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":507,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":824,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":824,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7125:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6928:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":824,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":824,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":697,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":824,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":715,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":824,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":740,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":755,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":775,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":824,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":820,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":824,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1401:9741:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:11038:3"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":836,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":836,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":836,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":845,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":845,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":845,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":902,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":859,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":902,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":902,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":902,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":902,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":902,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"203:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2673:4"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[824],"ERC20Pausable":[936],"Pausable":[1367]},"id":937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":937,"sourceUnit":825,"src":"150:35:5","symbolAliases":[{"foreign":{"id":905,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"158:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":937,"sourceUnit":1368,"src":"186:53:5","symbolAliases":[{"foreign":{"id":907,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"194:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":910,"name":"ERC20","nameLocations":["964:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"964:5:5"},"id":911,"nodeType":"InheritanceSpecifier","src":"964:5:5"},{"baseName":{"id":912,"name":"Pausable","nameLocations":["971:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"971:8:5"},"id":913,"nodeType":"InheritanceSpecifier","src":"971:8:5"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"241:687:5","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":936,"linearizedBaseContracts":[936,1367,824,214,1116,902,1182],"name":"ERC20Pausable","nameLocation":"947:13:5","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[631],"body":{"id":934,"nodeType":"Block","src":"1210:47:5","statements":[{"expression":{"arguments":[{"id":929,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1234:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"1240:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1244:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":926,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1220:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$936_$","typeString":"type(contract super ERC20Pausable)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1226:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1220:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"1220:30:5"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"986:121:5","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":935,"implemented":true,"kind":"function","modifiers":[{"id":924,"kind":"modifierInvocation","modifierName":{"id":923,"name":"whenNotPaused","nameLocations":["1196:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1292,"src":"1196:13:5"},"nodeType":"ModifierInvocation","src":"1196:13:5"}],"name":"_update","nameLocation":"1121:7:5","nodeType":"FunctionDefinition","overrides":{"id":922,"nodeType":"OverrideSpecifier","overrides":[],"src":"1187:8:5"},"parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"from","nameLocation":"1137:4:5","nodeType":"VariableDeclaration","scope":935,"src":"1129:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"to","nameLocation":"1151:2:5","nodeType":"VariableDeclaration","scope":935,"src":"1143:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"1163:5:5","nodeType":"VariableDeclaration","scope":935,"src":"1155:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1128:41:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"1210:0:5"},"scope":936,"src":"1112:145:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":937,"src":"929:330:5","usedErrors":[184,189,194,203,208,213,1272,1275],"usedEvents":[836,845,1264,1269]}],"src":"124:1136:5"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2366],"EIP712":[2593],"ERC20":[824],"ERC20Permit":[1090],"IERC20Permit":[1152],"Nonces":[1250]},"id":1091,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":938,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1091,"sourceUnit":1153,"src":"148:48:6","symbolAliases":[{"foreign":{"id":939,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1091,"sourceUnit":825,"src":"197:35:6","symbolAliases":[{"foreign":{"id":941,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1091,"sourceUnit":2367,"src":"233:60:6","symbolAliases":[{"foreign":{"id":943,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"241:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1091,"sourceUnit":2594,"src":"294:62:6","symbolAliases":[{"foreign":{"id":945,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"302:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1091,"sourceUnit":1251,"src":"357:49:6","symbolAliases":[{"foreign":{"id":947,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"365:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":950,"name":"ERC20","nameLocations":["929:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"929:5:6"},"id":951,"nodeType":"InheritanceSpecifier","src":"929:5:6"},{"baseName":{"id":952,"name":"IERC20Permit","nameLocations":["936:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"936:12:6"},"id":953,"nodeType":"InheritanceSpecifier","src":"936:12:6"},{"baseName":{"id":954,"name":"EIP712","nameLocations":["950:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"950:6:6"},"id":955,"nodeType":"InheritanceSpecifier","src":"950:6:6"},{"baseName":{"id":956,"name":"Nonces","nameLocations":["958:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"958:6:6"},"id":957,"nodeType":"InheritanceSpecifier","src":"958:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"408:487:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1090,"linearizedBaseContracts":[1090,1250,2593,172,1152,824,214,1116,902,1182],"name":"ERC20Permit","nameLocation":"914:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":962,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:6","nodeType":"VariableDeclaration","scope":1090,"src":"971:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"1124:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":967,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:6","nodeType":"ErrorDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:6","nodeType":"VariableDeclaration","scope":967,"src":"1211:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:6"},"src":"1181:48:6"},{"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"1235:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":974,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:6","nodeType":"ErrorDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"signer","nameLocation":"1320:6:6","nodeType":"VariableDeclaration","scope":974,"src":"1312:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"owner","nameLocation":"1336:5:6","nodeType":"VariableDeclaration","scope":974,"src":"1328:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:6"},"src":"1285:58:6"},{"body":{"id":984,"nodeType":"Block","src":"1624:2:6","statements":[]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"1349:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":985,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":980,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1613:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":982,"kind":"baseConstructorSpecifier","modifierName":{"id":979,"name":"EIP712","nameLocations":["1606:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"1606:6:6"},"nodeType":"ModifierInvocation","src":"1606:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"name","nameLocation":"1600:4:6","nodeType":"VariableDeclaration","scope":985,"src":"1586:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":976,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:6"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"1624:0:6"},"scope":1090,"src":"1574:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1137],"body":{"id":1061,"nodeType":"Block","src":"1869:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1003,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1005,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1901:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"1879:97:6","trueBody":{"id":1011,"nodeType":"Block","src":"1911:65:6","statements":[{"errorCall":{"arguments":[{"id":1008,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1956:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1932:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"RevertStatement","src":"1925:40:6"}]}},{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:6","nodeType":"VariableDeclaration","scope":1061,"src":"1986:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1028,"initialValue":{"arguments":[{"arguments":[{"id":1018,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2028:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2045:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2052:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2061:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1023,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2078:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1022,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"2068:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1025,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2086:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1016,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1015,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:6"},{"assignments":[1030],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"hash","nameLocation":"2115:4:6","nodeType":"VariableDeclaration","scope":1061,"src":"2107:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"id":1032,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2139:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1031,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2122:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:6"},{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"signer","nameLocation":"2169:6:6","nodeType":"VariableDeclaration","scope":1061,"src":"2161:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1044,"initialValue":{"arguments":[{"id":1039,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1040,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2198:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1041,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2201:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1042,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2204:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1037,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2178:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2366_$","typeString":"type(library ECDSA)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2316,"src":"2178:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2220:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1046,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2230:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"2216:88:6","trueBody":{"id":1053,"nodeType":"Block","src":"2237:67:6","statements":[{"errorCall":{"arguments":[{"id":1049,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2279:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2287:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1048,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2258:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"RevertStatement","src":"2251:42:6"}]}},{"expression":{"arguments":[{"id":1056,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2323:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2330:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1055,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2314:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"2314:31:6"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"1632:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:6","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"owner","nameLocation":"1713:5:6","nodeType":"VariableDeclaration","scope":1062,"src":"1705:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"spender","nameLocation":"1736:7:6","nodeType":"VariableDeclaration","scope":1062,"src":"1728:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"value","nameLocation":"1761:5:6","nodeType":"VariableDeclaration","scope":1062,"src":"1753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:6","nodeType":"VariableDeclaration","scope":1062,"src":"1776:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"v","nameLocation":"1808:1:6","nodeType":"VariableDeclaration","scope":1062,"src":"1802:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":995,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"r","nameLocation":"1827:1:6","nodeType":"VariableDeclaration","scope":1062,"src":"1819:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"s","nameLocation":"1846:1:6","nodeType":"VariableDeclaration","scope":1062,"src":"1838:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:6"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"1869:0:6"},"scope":1090,"src":"1680:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1145,1209],"body":{"id":1078,"nodeType":"Block","src":"2506:43:6","statements":[{"expression":{"arguments":[{"id":1075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2536:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1073,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1090_$","typeString":"type(contract super ERC20Permit)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1209,"src":"2523:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1072,"id":1077,"nodeType":"Return","src":"2516:26:6"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"2358:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:6","nodeType":"FunctionDefinition","overrides":{"id":1069,"nodeType":"OverrideSpecifier","overrides":[{"id":1067,"name":"IERC20Permit","nameLocations":["2466:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"2466:12:6"},{"id":1068,"name":"Nonces","nameLocations":["2480:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"2480:6:6"}],"src":"2457:30:6"},"parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"owner","nameLocation":"2430:5:6","nodeType":"VariableDeclaration","scope":1079,"src":"2422:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:6"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1079,"src":"2497:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:6"},"scope":1090,"src":"2406:143:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1151],"body":{"id":1088,"nodeType":"Block","src":"2724:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1085,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2741:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1084,"id":1087,"nodeType":"Return","src":"2734:27:6"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"2555:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:6","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"2681:2:6"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"2715:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:6"},"scope":1090,"src":"2656:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1091,"src":"896:1874:6","usedErrors":[184,189,194,203,208,213,967,974,1192,1450,1452,2029,2034,2039],"usedEvents":[152,836,845]}],"src":"122:2649:6"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1116]},"id":1117,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1092,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1117,"sourceUnit":903,"src":"151:37:7","symbolAliases":[{"foreign":{"id":1093,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1096,"name":"IERC20","nameLocations":["305:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"305:6:7"},"id":1097,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"190:86:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1116,"linearizedBaseContracts":[1116,902],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1116,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1109,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1109,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1106,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1116,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1112,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1116,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1117,"src":"277:405:7","usedErrors":[],"usedEvents":[836,845]}],"src":"125:558:7"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1152]},"id":1153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1118,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"149:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1152,"linearizedBaseContracts":[1152],"name":"IERC20Permit","nameLocation":"2123:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"2142:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1137,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:8","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"owner","nameLocation":"3030:5:8","nodeType":"VariableDeclaration","scope":1137,"src":"3022:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"spender","nameLocation":"3053:7:8","nodeType":"VariableDeclaration","scope":1137,"src":"3045:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"3078:5:8","nodeType":"VariableDeclaration","scope":1137,"src":"3070:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:8","nodeType":"VariableDeclaration","scope":1137,"src":"3093:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"v","nameLocation":"3125:1:8","nodeType":"VariableDeclaration","scope":1137,"src":"3119:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1129,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"r","nameLocation":"3144:1:8","nodeType":"VariableDeclaration","scope":1137,"src":"3136:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"s","nameLocation":"3163:1:8","nodeType":"VariableDeclaration","scope":1137,"src":"3155:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:8"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"3179:0:8"},"scope":1152,"src":"2997:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"3186:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1145,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:8","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"owner","nameLocation":"3509:5:8","nodeType":"VariableDeclaration","scope":1145,"src":"3501:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:8"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"3539:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:8"},"scope":1152,"src":"3485:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"3554:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1151,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:8","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"3765:2:8"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"3791:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:8"},"scope":1152,"src":"3740:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1153,"src":"2113:1689:8","usedErrors":[],"usedEvents":[]}],"src":"123:3680:8"}},"@openzeppelin/contracts/utils/Context.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1182]},"id":1183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1154,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1182,"linearizedBaseContracts":[1182],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1163,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1159,"id":1162,"nodeType":"Return","src":"728:17:9"}]},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1182,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1168,"id":1171,"nodeType":"Return","src":"835:15:9"}]},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1182,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1177,"id":1179,"nodeType":"Return","src":"945:8:9"}]},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1182,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1183,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"}},"@openzeppelin/contracts/utils/Nonces.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1250]},"id":1251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"125:83:10","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1250,"linearizedBaseContracts":[1250],"name":"Nonces","nameLocation":"227:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"240:90:10","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1192,"name":"InvalidAccountNonce","nameLocation":"341:19:10","nodeType":"ErrorDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"account","nameLocation":"369:7:10","nodeType":"VariableDeclaration","scope":1192,"src":"361:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:10","nodeType":"VariableDeclaration","scope":1192,"src":"378:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:10"},"src":"335:65:10"},{"constant":false,"id":1196,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:10","nodeType":"VariableDeclaration","scope":1250,"src":"406:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1195,"keyName":"account","keyNameLocation":"422:7:10","keyType":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1208,"nodeType":"Block","src":"607:38:10","statements":[{"expression":{"baseExpression":{"id":1204,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"624:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1206,"indexExpression":{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"632:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1203,"id":1207,"nodeType":"Return","src":"617:21:10"}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"464:69:10","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:10","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"owner","nameLocation":"562:5:10","nodeType":"VariableDeclaration","scope":1209,"src":"554:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:10"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"598:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:10"},"scope":1250,"src":"538:107:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1223,"nodeType":"Block","src":"828:326:10","statements":[{"id":1222,"nodeType":"UncheckedBlock","src":"1031:117:10","statements":[{"expression":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:10","subExpression":{"baseExpression":{"id":1217,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1121:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1219,"indexExpression":{"id":1218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"1129:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1216,"id":1221,"nodeType":"Return","src":"1114:23:10"}]}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"651:103:10","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:10","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"owner","nameLocation":"786:5:10","nodeType":"VariableDeclaration","scope":1224,"src":"778:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:10"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"819:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:10"},"scope":1250,"src":"759:395:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"1338:149:10","statements":[{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"current","nameLocation":"1356:7:10","nodeType":"VariableDeclaration","scope":1248,"src":"1348:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1237,"initialValue":{"arguments":[{"id":1235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1376:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1234,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1366:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1396:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1239,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"1392:89:10","trueBody":{"id":1246,"nodeType":"Block","src":"1414:67:10","statements":[{"errorCall":{"arguments":[{"id":1242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1241,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1435:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"RevertStatement","src":"1428:42:10"}]}}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"1160:100:10","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:10","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"owner","nameLocation":"1299:5:10","nodeType":"VariableDeclaration","scope":1249,"src":"1291:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:10","nodeType":"VariableDeclaration","scope":1249,"src":"1306:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:10"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1338:0:10"},"scope":1250,"src":"1265:222:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1251,"src":"209:1280:10","usedErrors":[1192],"usedEvents":[]}],"src":"99:1391:10"}},"@openzeppelin/contracts/utils/Pausable.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1182],"Pausable":[1367]},"id":1368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":1183,"src":"128:45:11","symbolAliases":[{"foreign":{"id":1253,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"136:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1256,"name":"Context","nameLocations":["645:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"645:7:11"},"id":1257,"nodeType":"InheritanceSpecifier","src":"645:7:11"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"175:439:11","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1367,"linearizedBaseContracts":[1367,1182],"name":"Pausable","nameLocation":"633:8:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1259,"mutability":"mutable","name":"_paused","nameLocation":"672:7:11","nodeType":"VariableDeclaration","scope":1367,"src":"659:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"686:73:11","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1264,"name":"Paused","nameLocation":"770:6:11","nodeType":"EventDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:11","nodeType":"VariableDeclaration","scope":1264,"src":"777:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:11"},"src":"764:30:11"},{"anonymous":false,"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"800:70:11","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1269,"name":"Unpaused","nameLocation":"881:8:11","nodeType":"EventDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:11","nodeType":"VariableDeclaration","scope":1269,"src":"890:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:11"},"src":"875:32:11"},{"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"913:76:11","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1272,"name":"EnforcedPause","nameLocation":"1000:13:11","nodeType":"ErrorDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[],"src":"1013:2:11"},"src":"994:22:11"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1022:80:11","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1275,"name":"ExpectedPause","nameLocation":"1113:13:11","nodeType":"ErrorDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"1126:2:11"},"src":"1107:22:11"},{"body":{"id":1283,"nodeType":"Block","src":"1221:32:11","statements":[{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1279,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1231:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1282,"nodeType":"ExpressionStatement","src":"1231:15:11"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"1135:67:11","text":" @dev Initializes the contract in unpaused state."},"id":1284,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"1218:2:11"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"1221:0:11"},"scope":1367,"src":"1207:46:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1464:47:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1287,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"1474:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"1474:19:11"},{"id":1290,"nodeType":"PlaceholderStatement","src":"1503:1:11"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1259:175:11","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1292,"name":"whenNotPaused","nameLocation":"1448:13:11","nodeType":"ModifierDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"1461:2:11"},"src":"1439:72:11","virtual":false,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"1711:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1295,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"1721:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"1721:16:11"},{"id":1298,"nodeType":"PlaceholderStatement","src":"1747:1:11"}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"1517:167:11","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1300,"name":"whenPaused","nameLocation":"1698:10:11","nodeType":"ModifierDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"1708:2:11"},"src":"1689:66:11","virtual":false,"visibility":"internal"},{"body":{"id":1308,"nodeType":"Block","src":"1903:31:11","statements":[{"expression":{"id":1306,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1920:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1305,"id":1307,"nodeType":"Return","src":"1913:14:11"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1761:84:11","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:11","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1865:2:11"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1309,"src":"1897:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1303,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:11"},"scope":1367,"src":"1850:84:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1320,"nodeType":"Block","src":"2053:77:11","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1313,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2067:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1319,"nodeType":"IfStatement","src":"2063:61:11","trueBody":{"id":1318,"nodeType":"Block","src":"2077:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1315,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2098:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"RevertStatement","src":"2091:22:11"}]}}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"1940:57:11","text":" @dev Throws if the contract is paused."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:11","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"2028:2:11"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2053:0:11"},"scope":1367,"src":"2002:128:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1333,"nodeType":"Block","src":"2250:78:11","statements":[{"condition":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1325,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2265:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"IfStatement","src":"2260:62:11","trueBody":{"id":1331,"nodeType":"Block","src":"2275:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1328,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2296:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"RevertStatement","src":"2289:22:11"}]}}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"2136:61:11","text":" @dev Throws if the contract is not paused."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:11","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"2225:2:11"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"2250:0:11"},"scope":1367,"src":"2202:126:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"2512:66:11","statements":[{"expression":{"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1340,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2522:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"ExpressionStatement","src":"2522:14:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"2558:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1344,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2551:6:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"EmitStatement","src":"2546:25:11"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2334:124:11","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1350,"implemented":true,"kind":"function","modifiers":[{"id":1338,"kind":"modifierInvocation","modifierName":{"id":1337,"name":"whenNotPaused","nameLocations":["2498:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":1292,"src":"2498:13:11"},"nodeType":"ModifierInvocation","src":"2498:13:11"}],"name":"_pause","nameLocation":"2472:6:11","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"2478:2:11"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"2512:0:11"},"scope":1367,"src":"2463:115:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1365,"nodeType":"Block","src":"2758:69:11","statements":[{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1356,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2768:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1359,"nodeType":"ExpressionStatement","src":"2768:15:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1361,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"2807:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2798:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1364,"nodeType":"EmitStatement","src":"2793:27:11"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"2584:121:11","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1366,"implemented":true,"kind":"function","modifiers":[{"id":1354,"kind":"modifierInvocation","modifierName":{"id":1353,"name":"whenPaused","nameLocations":["2747:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"2747:10:11"},"nodeType":"ModifierInvocation","src":"2747:10:11"}],"name":"_unpause","nameLocation":"2719:8:11","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"2727:2:11"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"2758:0:11"},"scope":1367,"src":"2710:117:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1368,"src":"615:2214:11","usedErrors":[1272,1275],"usedEvents":[1264,1269]}],"src":"102:2728:11"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1436]},"id":1437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"135:750:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1436,"linearizedBaseContracts":[1436],"name":"ReentrancyGuard","nameLocation":"904:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1373,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:12","nodeType":"VariableDeclaration","scope":1436,"src":"1674:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1376,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:12","nodeType":"VariableDeclaration","scope":1436,"src":"1720:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1378,"mutability":"mutable","name":"_status","nameLocation":"1779:7:12","nodeType":"VariableDeclaration","scope":1436,"src":"1763:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1793:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1381,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:12","nodeType":"ErrorDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"1884:2:12"},"src":"1850:37:12"},{"body":{"id":1388,"nodeType":"Block","src":"1907:38:12","statements":[{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"1917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1385,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1927:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1387,"nodeType":"ExpressionStatement","src":"1917:21:12"}]},"id":1389,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"1904:2:12"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"1907:0:12"},"scope":1436,"src":"1893:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"2346:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1392,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2356:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"ExpressionStatement","src":"2356:21:12"},{"id":1395,"nodeType":"PlaceholderStatement","src":"2387:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1396,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2398:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"2398:20:12"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"1951:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1400,"name":"nonReentrant","nameLocation":"2331:12:12","nodeType":"ModifierDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"2343:2:12"},"src":"2322:103:12","virtual":false,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"2470:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2558:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1404,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"2554:86:12","trueBody":{"id":1409,"nodeType":"Block","src":"2578:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1406,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2599:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"RevertStatement","src":"2592:37:12"}]}},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1412,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"2714:17:12"}]},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:12","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[],"src":"2459:2:12"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[],"src":"2470:0:12"},"scope":1436,"src":"2431:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1423,"nodeType":"Block","src":"2782:170:12","statements":[{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1419,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1420,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2934:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"nodeType":"ExpressionStatement","src":"2924:21:12"}]},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:12","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"2771:2:12"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"2782:0:12"},"scope":1436,"src":"2744:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1434,"nodeType":"Block","src":"3195:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1431,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1429,"id":1433,"nodeType":"Return","src":"3205:25:12"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"2958:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:12","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"3163:2:12"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"3189:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1427,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:12"},"scope":1436,"src":"3131:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1437,"src":"886:2353:12","usedErrors":[1381],"usedEvents":[]}],"src":"109:3131:12"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1442],"ShortStrings":[1653],"StorageSlot":[1763]},"id":1654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1438,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":1764,"src":"132:46:13","symbolAliases":[{"foreign":{"id":1439,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"140:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1442,"name":"ShortString","nameLocation":"353:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:13","underlyingType":{"id":1441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"378:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1653,"linearizedBaseContracts":[1653],"name":"ShortStrings","nameLocation":"1263:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1446,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:13","nodeType":"VariableDeclaration","scope":1653,"src":"1345:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1450,"name":"StringTooLong","nameLocation":"1469:13:13","nodeType":"ErrorDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"str","nameLocation":"1490:3:13","nodeType":"VariableDeclaration","scope":1450,"src":"1483:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1447,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:13"},"src":"1463:32:13"},{"errorSelector":"b3512b0c","id":1452,"name":"InvalidShortString","nameLocation":"1506:18:13","nodeType":"ErrorDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[],"src":"1524:2:13"},"src":"1500:27:13"},{"body":{"id":1495,"nodeType":"Block","src":"1786:208:13","statements":[{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:13","nodeType":"VariableDeclaration","scope":1495,"src":"1796:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1461,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1467,"initialValue":{"arguments":[{"id":1465,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1822:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1463,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:13","typeDescriptions":{}}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1840:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:13","memberName":"length","nodeType":"MemberAccess","src":"1840:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"IfStatement","src":"1836:72:13","trueBody":{"id":1476,"nodeType":"Block","src":"1858:50:13","statements":[{"errorCall":{"arguments":[{"id":1473,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1893:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1472,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1879:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"RevertStatement","src":"1872:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1486,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1965:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:13","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{}}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1489,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1974:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:13","memberName":"length","nodeType":"MemberAccess","src":"1974:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1478,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1924:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"type(ShortString)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"functionReturnParameters":1460,"id":1494,"nodeType":"Return","src":"1917:70:13"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"1533:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1496,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:13","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"str","nameLocation":"1745:3:13","nodeType":"VariableDeclaration","scope":1496,"src":"1731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1454,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:13"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"1773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1458,"nodeType":"UserDefinedTypeName","pathNode":{"id":1457,"name":"ShortString","nameLocations":["1773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"1773:11:13"},"referencedDeclaration":1442,"src":"1773:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:13"},"scope":1653,"src":"1708:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"2152:331:13","statements":[{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"len","nameLocation":"2170:3:13","nodeType":"VariableDeclaration","scope":1521,"src":"2162:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1510,"initialValue":{"arguments":[{"id":1508,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2187:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"id":1507,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:13"},{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"str","nameLocation":"2294:3:13","nodeType":"VariableDeclaration","scope":1521,"src":"2280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1511,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1517,"initialValue":{"arguments":[{"hexValue":"3332","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1513,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:13"},{"AST":{"nativeSrc":"2376:81:13","nodeType":"YulBlock","src":"2376:81:13","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:13","nodeType":"YulIdentifier","src":"2397:3:13"},{"name":"len","nativeSrc":"2402:3:13","nodeType":"YulIdentifier","src":"2402:3:13"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:13","nodeType":"YulIdentifier","src":"2390:6:13"},"nativeSrc":"2390:16:13","nodeType":"YulFunctionCall","src":"2390:16:13"},"nativeSrc":"2390:16:13","nodeType":"YulExpressionStatement","src":"2390:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:13","nodeType":"YulIdentifier","src":"2430:3:13"},{"kind":"number","nativeSrc":"2435:4:13","nodeType":"YulLiteral","src":"2435:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:13","nodeType":"YulIdentifier","src":"2426:3:13"},"nativeSrc":"2426:14:13","nodeType":"YulFunctionCall","src":"2426:14:13"},{"name":"sstr","nativeSrc":"2442:4:13","nodeType":"YulIdentifier","src":"2442:4:13"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:13","nodeType":"YulIdentifier","src":"2419:6:13"},"nativeSrc":"2419:28:13","nodeType":"YulFunctionCall","src":"2419:28:13"},"nativeSrc":"2419:28:13","nodeType":"YulExpressionStatement","src":"2419:28:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1506,"isOffset":false,"isSlot":false,"src":"2402:3:13","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"2442:4:13","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"2397:3:13","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"2430:3:13","valueSize":1}],"id":1518,"nodeType":"InlineAssembly","src":"2367:90:13"},{"expression":{"id":1519,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2473:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1504,"id":1520,"nodeType":"Return","src":"2466:10:13"}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"2000:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:13","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:13","nodeType":"VariableDeclaration","scope":1522,"src":"2096:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1499,"nodeType":"UserDefinedTypeName","pathNode":{"id":1498,"name":"ShortString","nameLocations":["2096:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2096:11:13"},"referencedDeclaration":1442,"src":"2096:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:13"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"2137:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:13"},"scope":1653,"src":"2078:405:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"2625:175:13","statements":[{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"result","nameLocation":"2643:6:13","nodeType":"VariableDeclaration","scope":1553,"src":"2635:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1542,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1537,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2679:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"expression":{"id":1535,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2660:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"type(ShortString)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:13","typeDescriptions":{}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2706:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"2702:69:13","trueBody":{"id":1549,"nodeType":"Block","src":"2719:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1546,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"2740:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"RevertStatement","src":"2733:27:13"}]}},{"expression":{"id":1551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2787:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1530,"id":1552,"nodeType":"Return","src":"2780:13:13"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"2489:61:13","text":" @dev Return the length of a `ShortString`."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:13","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:13","nodeType":"VariableDeclaration","scope":1554,"src":"2575:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1525,"nodeType":"UserDefinedTypeName","pathNode":{"id":1524,"name":"ShortString","nameLocations":["2575:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2575:11:13"},"referencedDeclaration":1442,"src":"2575:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:13"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1554,"src":"2616:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:13"},"scope":1653,"src":"2555:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"3023:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3043:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1565,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:13","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:13","memberName":"length","nodeType":"MemberAccess","src":"3037:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1591,"nodeType":"Block","src":"3121:127:13","statements":[{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1580,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3161:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1577,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3135:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1763_$","typeString":"type(library StorageSlot)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1740,"src":"3135:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1671_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1671_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1670,"src":"3135:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3176:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1585,"nodeType":"ExpressionStatement","src":"3135:46:13"},{"expression":{"arguments":[{"id":1588,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"3219:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1586,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3202:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"type(ShortString)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"functionReturnParameters":1564,"id":1590,"nodeType":"Return","src":"3195:42:13"}]},"id":1592,"nodeType":"IfStatement","src":"3033:215:13","trueBody":{"id":1576,"nodeType":"Block","src":"3063:52:13","statements":[{"expression":{"arguments":[{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3098:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1572,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3084:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"functionReturnParameters":1564,"id":1575,"nodeType":"Return","src":"3077:27:13"}]}}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"2806:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:13","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"value","nameLocation":"2963:5:13","nodeType":"VariableDeclaration","scope":1594,"src":"2949:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1556,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"store","nameLocation":"2985:5:13","nodeType":"VariableDeclaration","scope":1594,"src":"2970:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:13"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"3010:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1562,"nodeType":"UserDefinedTypeName","pathNode":{"id":1561,"name":"ShortString","nameLocations":["3010:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"3010:11:13"},"referencedDeclaration":1442,"src":"3010:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:13"},"scope":1653,"src":"2914:340:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"3494:158:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3527:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"expression":{"id":1605,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3508:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"type(ShortString)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1609,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"3537:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1618,"nodeType":"Block","src":"3609:37:13","statements":[{"expression":{"id":1616,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3630:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1604,"id":1617,"nodeType":"Return","src":"3623:12:13"}]},"id":1619,"nodeType":"IfStatement","src":"3504:142:13","trueBody":{"id":1615,"nodeType":"Block","src":"3556:47:13","statements":[{"expression":{"arguments":[{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3586:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"id":1611,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3577:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1604,"id":1614,"nodeType":"Return","src":"3570:22:13"}]}}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"3260:120:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:13","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"value","nameLocation":"3427:5:13","nodeType":"VariableDeclaration","scope":1621,"src":"3415:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1597,"nodeType":"UserDefinedTypeName","pathNode":{"id":1596,"name":"ShortString","nameLocations":["3415:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"3415:11:13"},"referencedDeclaration":1442,"src":"3415:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"store","nameLocation":"3449:5:13","nodeType":"VariableDeclaration","scope":1621,"src":"3434:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1599,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:13"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"3479:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1602,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:13"},"scope":1653,"src":"3385:267:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"4132:174:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4165:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"expression":{"id":1632,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4146:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"type(ShortString)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1636,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"4175:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1649,"nodeType":"Block","src":"4249:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":1645,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"4276:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1643,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:13","typeDescriptions":{}}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:13","memberName":"length","nodeType":"MemberAccess","src":"4270:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1631,"id":1648,"nodeType":"Return","src":"4263:26:13"}]},"id":1650,"nodeType":"IfStatement","src":"4142:158:13","trueBody":{"id":1642,"nodeType":"Block","src":"4194:49:13","statements":[{"expression":{"arguments":[{"id":1639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4226:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}],"id":1638,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4215:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1442_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1631,"id":1641,"nodeType":"Return","src":"4208:24:13"}]}}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"3658:364:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:13","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"value","nameLocation":"4071:5:13","nodeType":"VariableDeclaration","scope":1652,"src":"4059:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":1624,"nodeType":"UserDefinedTypeName","pathNode":{"id":1623,"name":"ShortString","nameLocations":["4059:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"4059:11:13"},"referencedDeclaration":1442,"src":"4059:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"store","nameLocation":"4093:5:13","nodeType":"VariableDeclaration","scope":1652,"src":"4078:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1626,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:13"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"4123:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:13"},"scope":1653,"src":"4027:279:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1654,"src":"1255:3053:13","usedErrors":[1450,1452],"usedEvents":[]}],"src":"106:4203:13"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1763]},"id":1764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1655,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1763,"linearizedBaseContracts":[1763],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1659,"members":[{"constant":false,"id":1658,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":1659,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":1763,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1662,"members":[{"constant":false,"id":1661,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":1662,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":1763,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1665,"members":[{"constant":false,"id":1664,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":1665,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":1763,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1668,"members":[{"constant":false,"id":1667,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":1668,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":1763,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1671,"members":[{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":1671,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1669,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":1763,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1674,"members":[{"constant":false,"id":1673,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":1674,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":1763,"src":"1541:45:14","visibility":"public"},{"body":{"id":1684,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1681,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":1677,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":1683,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":1685,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":1685,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1659_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1680,"nodeType":"UserDefinedTypeName","pathNode":{"id":1679,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"1745:11:14"},"referencedDeclaration":1659,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1659_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":1763,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1692,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":1694,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":1696,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":1696,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1662_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1662,"src":"2033:11:14"},"referencedDeclaration":1662,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1662_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":1763,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1703,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":1705,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":1707,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":1707,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1665_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1702,"nodeType":"UserDefinedTypeName","pathNode":{"id":1701,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1665,"src":"2321:11:14"},"referencedDeclaration":1665,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1665_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":1763,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1714,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":1716,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":1718,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":1718,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1668_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1668,"src":"2609:11:14"},"referencedDeclaration":1668,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1668_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":1763,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1725,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":1727,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":1729,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":1729,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1671_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1724,"nodeType":"UserDefinedTypeName","pathNode":{"id":1723,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1671,"src":"2895:10:14"},"referencedDeclaration":1671,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1671_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":1763,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1736,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":1732,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":1738,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":1740,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1731,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":1740,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1671_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1735,"nodeType":"UserDefinedTypeName","pathNode":{"id":1734,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1671,"src":"3203:10:14"},"referencedDeclaration":1671,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1671_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":1763,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1747,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":1743,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":1749,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":1751,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":1751,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1674_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1746,"nodeType":"UserDefinedTypeName","pathNode":{"id":1745,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"3492:9:14"},"referencedDeclaration":1674,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1674_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":1763,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1761,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1758,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":1760,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":1762,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":1762,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1674_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1757,"nodeType":"UserDefinedTypeName","pathNode":{"id":1756,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"3795:9:14"},"referencedDeclaration":1674,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1674_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":1763,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1764,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3721],"SignedMath":[3826],"Strings":[2018]},"id":2019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1765,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":3722,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1766,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":3827,"src":"165:49:15","symbolAliases":[{"foreign":{"id":1768,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"173:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"216:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2018,"linearizedBaseContracts":[2018],"name":"Strings","nameLocation":"259:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1773,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:15","nodeType":"VariableDeclaration","scope":2018,"src":"273:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1771,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1776,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:15","nodeType":"VariableDeclaration","scope":2018,"src":"335:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1774,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"384:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1783,"name":"StringsInsufficientHexLength","nameLocation":"476:28:15","nodeType":"ErrorDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"513:5:15","nodeType":"VariableDeclaration","scope":1783,"src":"505:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"length","nameLocation":"528:6:15","nodeType":"VariableDeclaration","scope":1783,"src":"520:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:15"},"src":"470:66:15"},{"body":{"id":1830,"nodeType":"Block","src":"708:627:15","statements":[{"id":1829,"nodeType":"UncheckedBlock","src":"718:611:15","statements":[{"assignments":[1792],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"length","nameLocation":"750:6:15","nodeType":"VariableDeclaration","scope":1829,"src":"742:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1793,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"759:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3721_$","typeString":"type(library Math)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"759:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:15"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"buffer","nameLocation":"808:6:15","nodeType":"VariableDeclaration","scope":1829,"src":"794:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1806,"initialValue":{"arguments":[{"id":1804,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"828:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1802,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:15"},{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"ptr","nameLocation":"857:3:15","nodeType":"VariableDeclaration","scope":1829,"src":"849:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"nodeType":"VariableDeclarationStatement","src":"849:11:15"},{"AST":{"nativeSrc":"930:67:15","nodeType":"YulBlock","src":"930:67:15","statements":[{"nativeSrc":"948:35:15","nodeType":"YulAssignment","src":"948:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:15","nodeType":"YulIdentifier","src":"959:6:15"},{"arguments":[{"kind":"number","nativeSrc":"971:2:15","nodeType":"YulLiteral","src":"971:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:15","nodeType":"YulIdentifier","src":"975:6:15"}],"functionName":{"name":"add","nativeSrc":"967:3:15","nodeType":"YulIdentifier","src":"967:3:15"},"nativeSrc":"967:15:15","nodeType":"YulFunctionCall","src":"967:15:15"}],"functionName":{"name":"add","nativeSrc":"955:3:15","nodeType":"YulIdentifier","src":"955:3:15"},"nativeSrc":"955:28:15","nodeType":"YulFunctionCall","src":"955:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:15","nodeType":"YulIdentifier","src":"948:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1801,"isOffset":false,"isSlot":false,"src":"959:6:15","valueSize":1},{"declaration":1792,"isOffset":false,"isSlot":false,"src":"975:6:15","valueSize":1},{"declaration":1808,"isOffset":false,"isSlot":false,"src":"948:3:15","valueSize":1}],"id":1810,"nodeType":"InlineAssembly","src":"921:76:15"},{"body":{"id":1825,"nodeType":"Block","src":"1023:269:15","statements":[{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:15","subExpression":{"id":1812,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1041:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"nodeType":"ExpressionStatement","src":"1041:5:15"},{"AST":{"nativeSrc":"1124:86:15","nodeType":"YulBlock","src":"1124:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:15","nodeType":"YulIdentifier","src":"1154:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:15","nodeType":"YulIdentifier","src":"1168:5:15"},{"kind":"number","nativeSrc":"1175:2:15","nodeType":"YulLiteral","src":"1175:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:15","nodeType":"YulIdentifier","src":"1164:3:15"},"nativeSrc":"1164:14:15","nodeType":"YulFunctionCall","src":"1164:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:15","nodeType":"YulIdentifier","src":"1180:10:15"}],"functionName":{"name":"byte","nativeSrc":"1159:4:15","nodeType":"YulIdentifier","src":"1159:4:15"},"nativeSrc":"1159:32:15","nodeType":"YulFunctionCall","src":"1159:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:15","nodeType":"YulIdentifier","src":"1146:7:15"},"nativeSrc":"1146:46:15","nodeType":"YulFunctionCall","src":"1146:46:15"},"nativeSrc":"1146:46:15","nodeType":"YulExpressionStatement","src":"1146:46:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1773,"isOffset":false,"isSlot":false,"src":"1180:10:15","valueSize":1},{"declaration":1808,"isOffset":false,"isSlot":false,"src":"1154:3:15","valueSize":1},{"declaration":1786,"isOffset":false,"isSlot":false,"src":"1168:5:15","valueSize":1}],"id":1815,"nodeType":"InlineAssembly","src":"1115:95:15"},{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1227:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"1227:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1260:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1824,"nodeType":"IfStatement","src":"1256:21:15","trueBody":{"id":1823,"nodeType":"Break","src":"1272:5:15"}}]},"condition":{"hexValue":"74727565","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1826,"nodeType":"WhileStatement","src":"1010:282:15"},{"expression":{"id":1827,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1312:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1790,"id":1828,"nodeType":"Return","src":"1305:13:15"}]}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"542:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:15","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"value","nameLocation":"663:5:15","nodeType":"VariableDeclaration","scope":1831,"src":"655:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:15"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"693:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1788,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:15"},"scope":2018,"src":"637:698:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"1511:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1542:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:15","trueExpression":{"hexValue":"2d","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1588:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1849,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"1573:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3826_$","typeString":"type(library SignedMath)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"1573:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"1564:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1839,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:15","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:15","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1838,"id":1855,"nodeType":"Return","src":"1521:75:15"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"1341:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:15","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"value","nameLocation":"1466:5:15","nodeType":"VariableDeclaration","scope":1857,"src":"1459:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1833,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:15"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"1496:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:15"},"scope":2018,"src":"1435:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"1782:100:15","statements":[{"id":1875,"nodeType":"UncheckedBlock","src":"1792:84:15","statements":[{"expression":{"arguments":[{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"1835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"1854:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1867,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1842:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3721_$","typeString":"type(library Math)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3663,"src":"1842:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1865,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1877,1960,1980],"referencedDeclaration":1960,"src":"1823:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1864,"id":1874,"nodeType":"Return","src":"1816:49:15"}]}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"1609:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:15","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"value","nameLocation":"1737:5:15","nodeType":"VariableDeclaration","scope":1877,"src":"1729:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:15"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"1767:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1862,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:15"},"scope":2018,"src":"1708:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1959,"nodeType":"Block","src":"2095:435:15","statements":[{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:15","nodeType":"VariableDeclaration","scope":1959,"src":"2105:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1890,"initialValue":{"id":1889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2126:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:15"},{"assignments":[1892],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:15","nodeType":"VariableDeclaration","scope":1959,"src":"2141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1891,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1901,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1896,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"2177:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1893,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:15"},{"expression":{"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1902,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2198:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1904,"indexExpression":{"hexValue":"30","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1907,"nodeType":"ExpressionStatement","src":"2198:15:15"},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1908,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2223:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1910,"indexExpression":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1913,"nodeType":"ExpressionStatement","src":"2223:15:15"},{"body":{"id":1942,"nodeType":"Block","src":"2293:95:15","statements":[{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1928,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2307:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1930,"indexExpression":{"id":1929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2314:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1931,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2319:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1935,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2330:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1937,"nodeType":"ExpressionStatement","src":"2307:40:15"},{"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1938,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2361:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1941,"nodeType":"ExpressionStatement","src":"2361:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2281:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"initializationExpression":{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"i","nameLocation":"2261:1:15","nodeType":"VariableDeclaration","scope":1943,"src":"2253:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1917,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"2269:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:15","subExpression":{"id":1925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1927,"nodeType":"ExpressionStatement","src":"2288:3:15"},"nodeType":"ForStatement","src":"2248:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2401:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"nodeType":"IfStatement","src":"2397:96:15","trueBody":{"id":1952,"nodeType":"Block","src":"2418:75:15","statements":[{"errorCall":{"arguments":[{"id":1948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2468:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1949,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"2475:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1947,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2439:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"RevertStatement","src":"2432:50:15"}]}},{"expression":{"arguments":[{"id":1956,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2516:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:15","typeDescriptions":{}}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1886,"id":1958,"nodeType":"Return","src":"2502:21:15"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"1888:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:15","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"value","nameLocation":"2034:5:15","nodeType":"VariableDeclaration","scope":1960,"src":"2026:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"length","nameLocation":"2049:6:15","nodeType":"VariableDeclaration","scope":1960,"src":"2041:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:15"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"2080:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1884,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:15"},"scope":2018,"src":"2005:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1979,"nodeType":"Block","src":"2762:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1973,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2807:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1971,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:15","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:15","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2815:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1968,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1877,1960,1980],"referencedDeclaration":1960,"src":"2779:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1967,"id":1978,"nodeType":"Return","src":"2772:58:15"}]},"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"2536:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:15","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"addr","nameLocation":"2718:4:15","nodeType":"VariableDeclaration","scope":1980,"src":"2710:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:15"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1980,"src":"2747:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1965,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:15"},"scope":2018,"src":"2689:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"2992:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3015:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1990,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:15","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:15","memberName":"length","nodeType":"MemberAccess","src":"3009:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3034:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1995,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:15","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:15","memberName":"length","nodeType":"MemberAccess","src":"3028:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3063:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:15","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2001,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3086:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:15","typeDescriptions":{}}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2007,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1989,"id":2015,"nodeType":"Return","src":"3002:87:15"}]},"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"2843:66:15","text":" @dev Returns true if the two strings are equal."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:15","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"a","nameLocation":"2943:1:15","nodeType":"VariableDeclaration","scope":2017,"src":"2929:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1982,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"b","nameLocation":"2960:1:15","nodeType":"VariableDeclaration","scope":2017,"src":"2946:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1984,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:15"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"2986:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1987,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:15"},"scope":2018,"src":"2914:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2019,"src":"251:2847:15","usedErrors":[1783],"usedEvents":[]}],"src":"101:2998:15"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2366]},"id":2367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2020,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2366,"linearizedBaseContracts":[2366],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2026,"members":[{"id":2022,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":2023,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":2024,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":2025,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2029,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2034,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":2034,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2039,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":2039,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":2091,"nodeType":"Block","src":"2242:653:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2054,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2256:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:16","memberName":"length","nodeType":"MemberAccess","src":"2256:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2089,"nodeType":"Block","src":"2781:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:16","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2080,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2815:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2024,"src":"2815:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2084,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2860:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:16","memberName":"length","nodeType":"MemberAccess","src":"2860:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:16","typeDescriptions":{}}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2053,"id":2088,"nodeType":"Return","src":"2795:83:16"}]},"id":2090,"nodeType":"IfStatement","src":"2252:637:16","trueBody":{"id":2075,"nodeType":"Block","src":"2280:495:16","statements":[{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"r","nameLocation":"2302:1:16","nodeType":"VariableDeclaration","scope":2075,"src":"2294:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2060,"nodeType":"VariableDeclarationStatement","src":"2294:9:16"},{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"s","nameLocation":"2325:1:16","nodeType":"VariableDeclaration","scope":2075,"src":"2317:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2063,"nodeType":"VariableDeclarationStatement","src":"2317:9:16"},{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"v","nameLocation":"2346:1:16","nodeType":"VariableDeclaration","scope":2075,"src":"2340:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2064,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2066,"nodeType":"VariableDeclarationStatement","src":"2340:7:16"},{"AST":{"nativeSrc":"2548:171:16","nodeType":"YulBlock","src":"2548:171:16","statements":[{"nativeSrc":"2566:32:16","nodeType":"YulAssignment","src":"2566:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:16","nodeType":"YulIdentifier","src":"2581:9:16"},{"kind":"number","nativeSrc":"2592:4:16","nodeType":"YulLiteral","src":"2592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:16","nodeType":"YulIdentifier","src":"2577:3:16"},"nativeSrc":"2577:20:16","nodeType":"YulFunctionCall","src":"2577:20:16"}],"functionName":{"name":"mload","nativeSrc":"2571:5:16","nodeType":"YulIdentifier","src":"2571:5:16"},"nativeSrc":"2571:27:16","nodeType":"YulFunctionCall","src":"2571:27:16"},"variableNames":[{"name":"r","nativeSrc":"2566:1:16","nodeType":"YulIdentifier","src":"2566:1:16"}]},{"nativeSrc":"2615:32:16","nodeType":"YulAssignment","src":"2615:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:16","nodeType":"YulIdentifier","src":"2630:9:16"},{"kind":"number","nativeSrc":"2641:4:16","nodeType":"YulLiteral","src":"2641:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:16","nodeType":"YulIdentifier","src":"2626:3:16"},"nativeSrc":"2626:20:16","nodeType":"YulFunctionCall","src":"2626:20:16"}],"functionName":{"name":"mload","nativeSrc":"2620:5:16","nodeType":"YulIdentifier","src":"2620:5:16"},"nativeSrc":"2620:27:16","nodeType":"YulFunctionCall","src":"2620:27:16"},"variableNames":[{"name":"s","nativeSrc":"2615:1:16","nodeType":"YulIdentifier","src":"2615:1:16"}]},{"nativeSrc":"2664:41:16","nodeType":"YulAssignment","src":"2664:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:16","nodeType":"YulLiteral","src":"2674:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:16","nodeType":"YulIdentifier","src":"2687:9:16"},{"kind":"number","nativeSrc":"2698:4:16","nodeType":"YulLiteral","src":"2698:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:16","nodeType":"YulIdentifier","src":"2683:3:16"},"nativeSrc":"2683:20:16","nodeType":"YulFunctionCall","src":"2683:20:16"}],"functionName":{"name":"mload","nativeSrc":"2677:5:16","nodeType":"YulIdentifier","src":"2677:5:16"},"nativeSrc":"2677:27:16","nodeType":"YulFunctionCall","src":"2677:27:16"}],"functionName":{"name":"byte","nativeSrc":"2669:4:16","nodeType":"YulIdentifier","src":"2669:4:16"},"nativeSrc":"2669:36:16","nodeType":"YulFunctionCall","src":"2669:36:16"},"variableNames":[{"name":"v","nativeSrc":"2664:1:16","nodeType":"YulIdentifier","src":"2664:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2059,"isOffset":false,"isSlot":false,"src":"2566:1:16","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"2615:1:16","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"2581:9:16","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"2630:9:16","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"2687:9:16","valueSize":1},{"declaration":2065,"isOffset":false,"isSlot":false,"src":"2664:1:16","valueSize":1}],"id":2067,"nodeType":"InlineAssembly","src":"2539:180:16"},{"expression":{"arguments":[{"id":2069,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"2750:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2070,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2756:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2071,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2759:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2072,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2762:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2068,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2092,2172,2280],"referencedDeclaration":2280,"src":"2739:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2053,"id":2074,"nodeType":"Return","src":"2732:32:16"}]}}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"hash","nameLocation":"2157:4:16","nodeType":"VariableDeclaration","scope":2092,"src":"2149:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"signature","nameLocation":"2176:9:16","nodeType":"VariableDeclaration","scope":2092,"src":"2163:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2043,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:16"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"2210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"2219:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2049,"nodeType":"UserDefinedTypeName","pathNode":{"id":2048,"name":"RecoverError","nameLocations":["2219:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"2219:12:16"},"referencedDeclaration":2026,"src":"2219:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"2233:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:16"},"scope":2366,"src":"2129:766:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"3789:168:16","statements":[{"assignments":[2103,2106,2108],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:16","nodeType":"VariableDeclaration","scope":2121,"src":"3800:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"error","nameLocation":"3832:5:16","nodeType":"VariableDeclaration","scope":2121,"src":"3819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2105,"nodeType":"UserDefinedTypeName","pathNode":{"id":2104,"name":"RecoverError","nameLocations":["3819:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"3819:12:16"},"referencedDeclaration":2026,"src":"3819:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:16","nodeType":"VariableDeclaration","scope":2121,"src":"3839:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2113,"initialValue":{"arguments":[{"id":2110,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3870:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2111,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3876:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2109,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2092,2172,2280],"referencedDeclaration":2092,"src":"3859:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:16"},{"expression":{"arguments":[{"id":2115,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3908:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"id":2116,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3915:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2114,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3896:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2026_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"ExpressionStatement","src":"3896:28:16"},{"expression":{"id":2119,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"3941:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2101,"id":2120,"nodeType":"Return","src":"3934:16:16"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"2901:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:16","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"hash","nameLocation":"3727:4:16","nodeType":"VariableDeclaration","scope":2122,"src":"3719:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"signature","nameLocation":"3746:9:16","nodeType":"VariableDeclaration","scope":2122,"src":"3733:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:16"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2122,"src":"3780:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:16"},"scope":2366,"src":"3702:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"4285:342:16","statements":[{"id":2170,"nodeType":"UncheckedBlock","src":"4295:326:16","statements":[{"assignments":[2140],"declarations":[{"constant":false,"id":2140,"mutability":"mutable","name":"s","nameLocation":"4327:1:16","nodeType":"VariableDeclaration","scope":2170,"src":"4319:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2147,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"4331:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:16","typeDescriptions":{}}},"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:16"},{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"v","nameLocation":"4528:1:16","nodeType":"VariableDeclaration","scope":2170,"src":"4522:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2148,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2162,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2154,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"4547:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:16","typeDescriptions":{}}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2150,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:16"},{"expression":{"arguments":[{"id":2164,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4596:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2165,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"4602:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2166,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"4605:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2167,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4608:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2163,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2092,2172,2280],"referencedDeclaration":2280,"src":"4585:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2138,"id":2169,"nodeType":"Return","src":"4578:32:16"}]}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"3963:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:16","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"hash","nameLocation":"4201:4:16","nodeType":"VariableDeclaration","scope":2172,"src":"4193:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"r","nameLocation":"4215:1:16","nodeType":"VariableDeclaration","scope":2172,"src":"4207:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"vs","nameLocation":"4226:2:16","nodeType":"VariableDeclaration","scope":2172,"src":"4218:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:16"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"4253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"4262:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"RecoverError","nameLocations":["4262:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"4262:12:16"},"referencedDeclaration":2026,"src":"4262:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"4276:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:16"},"scope":2366,"src":"4173:454:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"4840:164:16","statements":[{"assignments":[2185,2188,2190],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:16","nodeType":"VariableDeclaration","scope":2204,"src":"4851:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"error","nameLocation":"4883:5:16","nodeType":"VariableDeclaration","scope":2204,"src":"4870:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2187,"nodeType":"UserDefinedTypeName","pathNode":{"id":2186,"name":"RecoverError","nameLocations":["4870:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"4870:12:16"},"referencedDeclaration":2026,"src":"4870:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:16","nodeType":"VariableDeclaration","scope":2204,"src":"4890:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2192,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4921:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2193,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"4927:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2194,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"4930:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2191,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2092,2172,2280],"referencedDeclaration":2172,"src":"4910:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:16"},{"expression":{"arguments":[{"id":2198,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"4955:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"id":2199,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"4962:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2197,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"4943:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2026_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2201,"nodeType":"ExpressionStatement","src":"4943:28:16"},{"expression":{"id":2202,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4988:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2183,"id":2203,"nodeType":"Return","src":"4981:16:16"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"4633:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:16","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"hash","nameLocation":"4779:4:16","nodeType":"VariableDeclaration","scope":2205,"src":"4771:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"r","nameLocation":"4793:1:16","nodeType":"VariableDeclaration","scope":2205,"src":"4785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"vs","nameLocation":"4804:2:16","nodeType":"VariableDeclaration","scope":2205,"src":"4796:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:16"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"4831:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:16"},"scope":2366,"src":"4754:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"5298:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2226,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6194:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:16","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2240,"nodeType":"IfStatement","src":"6182:164:16","trueBody":{"id":2239,"nodeType":"Block","src":"6267:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:16","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2234,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6301:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"6301:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"id":2236,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6333:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2223,"id":2238,"nodeType":"Return","src":"6281:54:16"}]}},{"assignments":[2242],"declarations":[{"constant":false,"id":2242,"mutability":"mutable","name":"signer","nameLocation":"6448:6:16","nodeType":"VariableDeclaration","scope":2279,"src":"6440:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2249,"initialValue":{"arguments":[{"id":2244,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"6467:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2245,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"6473:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2246,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"6476:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2247,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6479:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2243,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2250,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"6495:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:16","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"nodeType":"IfStatement","src":"6491:113:16","trueBody":{"id":2268,"nodeType":"Block","src":"6517:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:16","typeDescriptions":{}}},"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2260,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6551:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"6551:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:16","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2223,"id":2267,"nodeType":"Return","src":"6531:62:16"}]}},{"expression":{"components":[{"id":2270,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"6622:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2271,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6630:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2022,"src":"6630:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:16","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2223,"id":2278,"nodeType":"Return","src":"6614:49:16"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"5010:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:16","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"hash","nameLocation":"5177:4:16","nodeType":"VariableDeclaration","scope":2280,"src":"5169:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"v","nameLocation":"5197:1:16","nodeType":"VariableDeclaration","scope":2280,"src":"5191:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2209,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"5216:1:16","nodeType":"VariableDeclaration","scope":2280,"src":"5208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"s","nameLocation":"5235:1:16","nodeType":"VariableDeclaration","scope":2280,"src":"5227:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:16"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"5266:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"5275:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2219,"nodeType":"UserDefinedTypeName","pathNode":{"id":2218,"name":"RecoverError","nameLocations":["5275:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"5275:12:16"},"referencedDeclaration":2026,"src":"5275:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"5289:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:16"},"scope":2366,"src":"5140:1530:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"6897:166:16","statements":[{"assignments":[2295,2298,2300],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:16","nodeType":"VariableDeclaration","scope":2315,"src":"6908:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"error","nameLocation":"6940:5:16","nodeType":"VariableDeclaration","scope":2315,"src":"6927:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2297,"nodeType":"UserDefinedTypeName","pathNode":{"id":2296,"name":"RecoverError","nameLocations":["6927:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"6927:12:16"},"referencedDeclaration":2026,"src":"6927:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:16","nodeType":"VariableDeclaration","scope":2315,"src":"6947:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2307,"initialValue":{"arguments":[{"id":2302,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"6978:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2303,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"6984:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2304,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2305,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2301,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2092,2172,2280],"referencedDeclaration":2280,"src":"6967:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2026_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:16"},{"expression":{"arguments":[{"id":2309,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"7014:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},{"id":2310,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"7021:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2308,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"7002:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2026_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2312,"nodeType":"ExpressionStatement","src":"7002:28:16"},{"expression":{"id":2313,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"7047:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2293,"id":2314,"nodeType":"Return","src":"7040:16:16"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"6676:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:16","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"hash","nameLocation":"6828:4:16","nodeType":"VariableDeclaration","scope":2316,"src":"6820:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"v","nameLocation":"6840:1:16","nodeType":"VariableDeclaration","scope":2316,"src":"6834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2284,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"r","nameLocation":"6851:1:16","nodeType":"VariableDeclaration","scope":2316,"src":"6843:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"s","nameLocation":"6862:1:16","nodeType":"VariableDeclaration","scope":2316,"src":"6854:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:16"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"6888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:16"},"scope":2366,"src":"6803:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"7268:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7282:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2326,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7291:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2022,"src":"7291:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7378:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2332,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7387:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"7387:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7483:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2340,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7492:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2024,"src":"7492:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7617:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2352,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7626:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2026_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"7626:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2360,"nodeType":"IfStatement","src":"7613:109:16","trueBody":{"id":2359,"nodeType":"Block","src":"7658:64:16","statements":[{"errorCall":{"arguments":[{"id":2356,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7702:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2355,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"7679:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"RevertStatement","src":"7672:39:16"}]}},"id":2361,"nodeType":"IfStatement","src":"7479:243:16","trueBody":{"id":2350,"nodeType":"Block","src":"7529:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2346,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7586:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:16","typeDescriptions":{}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7550:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"RevertStatement","src":"7543:53:16"}]}},"id":2362,"nodeType":"IfStatement","src":"7374:348:16","trueBody":{"id":2338,"nodeType":"Block","src":"7418:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2335,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7439:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2337,"nodeType":"RevertStatement","src":"7432:30:16"}]}},"id":2363,"nodeType":"IfStatement","src":"7278:444:16","trueBody":{"id":2330,"nodeType":"Block","src":"7313:55:16","statements":[{"functionReturnParameters":2324,"id":2329,"nodeType":"Return","src":"7327:7:16"}]}}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"7069:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:16","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"error","nameLocation":"7230:5:16","nodeType":"VariableDeclaration","scope":2365,"src":"7217:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"RecoverError","nameLocations":["7217:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"7217:12:16"},"referencedDeclaration":2026,"src":"7217:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2026","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:16","nodeType":"VariableDeclaration","scope":2365,"src":"7237:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:16"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"7268:0:16"},"scope":2366,"src":"7196:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2367,"src":"344:7386:16","usedErrors":[2029,2034,2039],"usedEvents":[]}],"src":"112:7619:16"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2593],"IERC5267":[172],"MessageHashUtils":[2667],"ShortString":[1442],"ShortStrings":[1653]},"id":2594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2594,"sourceUnit":2668,"src":"139:56:17","symbolAliases":[{"foreign":{"id":2369,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"147:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2594,"sourceUnit":1654,"src":"196:62:17","symbolAliases":[{"foreign":{"id":2371,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"204:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2372,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"218:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2594,"sourceUnit":173,"src":"259:55:17","symbolAliases":[{"foreign":{"id":2374,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2377,"name":"IERC5267","nameLocations":["1988:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:17"},"id":2378,"nodeType":"InheritanceSpecifier","src":"1988:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"316:1643:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2593,"linearizedBaseContracts":[2593,172],"name":"EIP712","nameLocation":"1978:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2380,"libraryName":{"id":2379,"name":"ShortStrings","nameLocations":["2009:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2009:12:17"},"nodeType":"UsingForDirective","src":"2003:25:17"},{"constant":true,"id":2385,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:17","nodeType":"VariableDeclaration","scope":2593,"src":"2034:140:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2382,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2387,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:17","nodeType":"VariableDeclaration","scope":2593,"src":"2373:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2389,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:17","nodeType":"VariableDeclaration","scope":2593,"src":"2427:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2391,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:17","nodeType":"VariableDeclaration","scope":2593,"src":"2473:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2393,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:17","nodeType":"VariableDeclaration","scope":2593,"src":"2517:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2395,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:17","nodeType":"VariableDeclaration","scope":2593,"src":"2560:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2398,"mutability":"immutable","name":"_name","nameLocation":"2637:5:17","nodeType":"VariableDeclaration","scope":2593,"src":"2607:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":2397,"nodeType":"UserDefinedTypeName","pathNode":{"id":2396,"name":"ShortString","nameLocations":["2607:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2607:11:17"},"referencedDeclaration":1442,"src":"2607:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2401,"mutability":"immutable","name":"_version","nameLocation":"2678:8:17","nodeType":"VariableDeclaration","scope":2593,"src":"2648:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"},"typeName":{"id":2400,"nodeType":"UserDefinedTypeName","pathNode":{"id":2399,"name":"ShortString","nameLocations":["2648:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2648:11:17"},"referencedDeclaration":1442,"src":"2648:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2403,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:17","nodeType":"VariableDeclaration","scope":2593,"src":"2692:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2405,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:17","nodeType":"VariableDeclaration","scope":2593,"src":"2726:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2404,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2462,"nodeType":"Block","src":"3383:376:17","statements":[{"expression":{"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2413,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3393:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2416,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"3432:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2414,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3401:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"3401:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1442_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"src":"3393:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"id":2419,"nodeType":"ExpressionStatement","src":"3393:53:17"},{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2420,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"3456:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2423,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"3501:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2421,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"3467:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"3467:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1442_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"src":"3456:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"id":2426,"nodeType":"ExpressionStatement","src":"3456:62:17"},{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2427,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"3528:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2431,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3558:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2429,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:17","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2428,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2435,"nodeType":"ExpressionStatement","src":"3528:36:17"},{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2436,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3574:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2440,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"3607:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:17","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2444,"nodeType":"ExpressionStatement","src":"3574:42:17"},{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3627:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2446,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"3627:30:17"},{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"3667:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2451,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"3692:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2454,"nodeType":"ExpressionStatement","src":"3667:48:17"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2455,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"3725:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2458,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:17","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2461,"nodeType":"ExpressionStatement","src":"3725:27:17"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"2764:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2463,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"name","nameLocation":"3354:4:17","nodeType":"VariableDeclaration","scope":2463,"src":"3340:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"version","nameLocation":"3374:7:17","nodeType":"VariableDeclaration","scope":2463,"src":"3360:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2409,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:17"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[],"src":"3383:0:17"},"scope":2593,"src":"3328:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2488,"nodeType":"Block","src":"3907:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2471,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}],"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:17","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2473,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"3938:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2475,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2477,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3970:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2486,"nodeType":"Block","src":"4046:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2483,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"4067:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2468,"id":2485,"nodeType":"Return","src":"4060:30:17"}]},"id":2487,"nodeType":"IfStatement","src":"3917:184:17","trueBody":{"id":2482,"nodeType":"Block","src":"3986:54:17","statements":[{"expression":{"id":2480,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"4007:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2468,"id":2481,"nodeType":"Return","src":"4000:29:17"}]}}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"3765:75:17","text":" @dev Returns the domain separator for the current chain."},"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:17","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"3872:2:17"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"3898:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:17"},"scope":2593,"src":"3845:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2509,"nodeType":"Block","src":"4177:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2497,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"4215:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2498,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"4226:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2499,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4239:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2500,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2504,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}],"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:17","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2495,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2494,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2493,"id":2508,"nodeType":"Return","src":"4187:98:17"}]},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:17","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"4143:2:17"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"4168:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:17"},"scope":2593,"src":"4113:179:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2525,"nodeType":"Block","src":"5003:90:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2520,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"5053:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2522,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"5075:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2518,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"5020:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2667_$","typeString":"type(library MessageHashUtils)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"5020:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2517,"id":2524,"nodeType":"Return","src":"5013:73:17"}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"4298:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:17","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:17","nodeType":"VariableDeclaration","scope":2526,"src":"4943:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:17"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"4994:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:17"},"scope":2593,"src":"4917:176:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":2567,"nodeType":"Block","src":"5472:229:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2546,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5533:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2548,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5560:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2550,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2593","typeString":"contract EIP712"}],"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:17","typeDescriptions":{}}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:17","typeDescriptions":{}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ArrayTypeName","src":"5672:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2544,"id":2566,"nodeType":"Return","src":"5482:212:17"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"5099:40:17","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:17","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"5165:2:17"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"fields","nameLocation":"5249:6:17","nodeType":"VariableDeclaration","scope":2568,"src":"5242:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2529,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"name","nameLocation":"5283:4:17","nodeType":"VariableDeclaration","scope":2568,"src":"5269:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2531,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"version","nameLocation":"5315:7:17","nodeType":"VariableDeclaration","scope":2568,"src":"5301:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:17","nodeType":"VariableDeclaration","scope":2568,"src":"5336:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:17","nodeType":"VariableDeclaration","scope":2568,"src":"5365:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"salt","nameLocation":"5412:4:17","nodeType":"VariableDeclaration","scope":2568,"src":"5404:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:17","nodeType":"VariableDeclaration","scope":2568,"src":"5430:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ArrayTypeName","src":"5430:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:17"},"scope":2593,"src":"5144:557:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2579,"nodeType":"Block","src":"6082:65:17","statements":[{"expression":{"arguments":[{"id":2576,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"6126:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2574,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6099:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6099:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1442_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2573,"id":2578,"nodeType":"Return","src":"6092:48:17"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"5707:256:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:17","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"6041:2:17"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"6067:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:17"},"scope":2593,"src":"6021:126:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"6537:71:17","statements":[{"expression":{"arguments":[{"id":2588,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"6584:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2586,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"6554:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1442","typeString":"ShortString"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6554:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1442_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1442_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2585,"id":2590,"nodeType":"Return","src":"6547:54:17"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"6153:262:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:17","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"6496:2:17"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"6522:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2583,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:17"},"scope":2593,"src":"6473:135:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2594,"src":"1960:4650:17","usedErrors":[1450,1452],"usedEvents":[152]}],"src":"113:6498:17"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2667],"Strings":[2018]},"id":2668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2595,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":2019,"src":"149:39:18","symbolAliases":[{"foreign":{"id":2596,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2667,"linearizedBaseContracts":[2667],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2607,"nodeType":"Block","src":"1314:368:18","statements":[{"AST":{"nativeSrc":"1376:300:18","nodeType":"YulBlock","src":"1376:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:18","nodeType":"YulLiteral","src":"1397:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:18","nodeType":"YulLiteral","src":"1403:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:18","nodeType":"YulIdentifier","src":"1390:6:18"},"nativeSrc":"1390:48:18","nodeType":"YulFunctionCall","src":"1390:48:18"},"nativeSrc":"1390:48:18","nodeType":"YulExpressionStatement","src":"1390:48:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:18","nodeType":"YulLiteral","src":"1499:4:18","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:18","nodeType":"YulIdentifier","src":"1505:11:18"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:18","nodeType":"YulIdentifier","src":"1492:6:18"},"nativeSrc":"1492:25:18","nodeType":"YulFunctionCall","src":"1492:25:18"},"nativeSrc":"1492:25:18","nodeType":"YulExpressionStatement","src":"1492:25:18"},{"nativeSrc":"1571:31:18","nodeType":"YulAssignment","src":"1571:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:18","nodeType":"YulLiteral","src":"1591:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:18","nodeType":"YulLiteral","src":"1597:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:18","nodeType":"YulIdentifier","src":"1581:9:18"},"nativeSrc":"1581:21:18","nodeType":"YulFunctionCall","src":"1581:21:18"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:18","nodeType":"YulIdentifier","src":"1571:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2604,"isOffset":false,"isSlot":false,"src":"1571:6:18","valueSize":1},{"declaration":2601,"isOffset":false,"isSlot":false,"src":"1505:11:18","valueSize":1}],"id":2606,"nodeType":"InlineAssembly","src":"1367:309:18"}]},"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"552:665:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:18","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:18","nodeType":"VariableDeclaration","scope":2608,"src":"1254:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:18"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"digest","nameLocation":"1306:6:18","nodeType":"VariableDeclaration","scope":2608,"src":"1298:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:18"},"scope":2667,"src":"1222:460:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"2234:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2625,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2343:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:18","memberName":"length","nodeType":"MemberAccess","src":"2343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2623,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2326:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2018_$","typeString":"type(library Strings)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1831,"src":"2326:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:18","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2629,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:18","typeDescriptions":{}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2615,"id":2632,"nodeType":"Return","src":"2244:126:18"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"1688:455:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:18","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"message","nameLocation":"2193:7:18","nodeType":"VariableDeclaration","scope":2634,"src":"2180:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2610,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:18"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"2225:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:18"},"scope":2667,"src":"2148:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2653,"nodeType":"Block","src":"2831:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2648,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2887:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2649,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2898:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2645,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2644,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2643,"id":2652,"nodeType":"Return","src":"2841:63:18"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"2383:332:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:18","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"validator","nameLocation":"2769:9:18","nodeType":"VariableDeclaration","scope":2654,"src":"2761:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"data","nameLocation":"2793:4:18","nodeType":"VariableDeclaration","scope":2654,"src":"2780:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2638,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:18"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"2822:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:18"},"scope":2667,"src":"2720:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"3462:292:18","statements":[{"AST":{"nativeSrc":"3524:224:18","nodeType":"YulBlock","src":"3524:224:18","statements":[{"nativeSrc":"3538:22:18","nodeType":"YulVariableDeclaration","src":"3538:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:18","nodeType":"YulLiteral","src":"3555:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:18","nodeType":"YulIdentifier","src":"3549:5:18"},"nativeSrc":"3549:11:18","nodeType":"YulFunctionCall","src":"3549:11:18"},"variables":[{"name":"ptr","nativeSrc":"3542:3:18","nodeType":"YulTypedName","src":"3542:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:18","nodeType":"YulIdentifier","src":"3580:3:18"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:18","nodeType":"YulLiteral","src":"3585:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:18","nodeType":"YulIdentifier","src":"3573:6:18"},"nativeSrc":"3573:23:18","nodeType":"YulFunctionCall","src":"3573:23:18"},"nativeSrc":"3573:23:18","nodeType":"YulExpressionStatement","src":"3573:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:18","nodeType":"YulIdentifier","src":"3620:3:18"},{"kind":"number","nativeSrc":"3625:4:18","nodeType":"YulLiteral","src":"3625:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:18","nodeType":"YulIdentifier","src":"3616:3:18"},"nativeSrc":"3616:14:18","nodeType":"YulFunctionCall","src":"3616:14:18"},{"name":"domainSeparator","nativeSrc":"3632:15:18","nodeType":"YulIdentifier","src":"3632:15:18"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:18","nodeType":"YulIdentifier","src":"3609:6:18"},"nativeSrc":"3609:39:18","nodeType":"YulFunctionCall","src":"3609:39:18"},"nativeSrc":"3609:39:18","nodeType":"YulExpressionStatement","src":"3609:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:18","nodeType":"YulIdentifier","src":"3672:3:18"},{"kind":"number","nativeSrc":"3677:4:18","nodeType":"YulLiteral","src":"3677:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:18","nodeType":"YulIdentifier","src":"3668:3:18"},"nativeSrc":"3668:14:18","nodeType":"YulFunctionCall","src":"3668:14:18"},{"name":"structHash","nativeSrc":"3684:10:18","nodeType":"YulIdentifier","src":"3684:10:18"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:18","nodeType":"YulIdentifier","src":"3661:6:18"},"nativeSrc":"3661:34:18","nodeType":"YulFunctionCall","src":"3661:34:18"},"nativeSrc":"3661:34:18","nodeType":"YulExpressionStatement","src":"3661:34:18"},{"nativeSrc":"3708:30:18","nodeType":"YulAssignment","src":"3708:30:18","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:18","nodeType":"YulIdentifier","src":"3728:3:18"},{"kind":"number","nativeSrc":"3733:4:18","nodeType":"YulLiteral","src":"3733:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:18","nodeType":"YulIdentifier","src":"3718:9:18"},"nativeSrc":"3718:20:18","nodeType":"YulFunctionCall","src":"3718:20:18"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:18","nodeType":"YulIdentifier","src":"3708:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2662,"isOffset":false,"isSlot":false,"src":"3708:6:18","valueSize":1},{"declaration":2657,"isOffset":false,"isSlot":false,"src":"3632:15:18","valueSize":1},{"declaration":2659,"isOffset":false,"isSlot":false,"src":"3684:10:18","valueSize":1}],"id":2664,"nodeType":"InlineAssembly","src":"3515:233:18"}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"2917:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:18","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:18","nodeType":"VariableDeclaration","scope":2666,"src":"3378:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:18","nodeType":"VariableDeclaration","scope":2666,"src":"3403:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:18"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"digest","nameLocation":"3454:6:18","nodeType":"VariableDeclaration","scope":2666,"src":"3446:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:18"},"scope":2667,"src":"3353:401:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2668,"src":"521:3235:18","usedErrors":[],"usedEvents":[]}],"src":"123:3634:18"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3721]},"id":3722,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2669,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"129:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3721,"linearizedBaseContracts":[3721],"name":"Math","nameLocation":"211:4:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"222:50:19","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2673,"name":"MathOverflowedMulDiv","nameLocation":"283:20:19","nodeType":"ErrorDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[],"src":"303:2:19"},"src":"277:29:19"},{"canonicalName":"Math.Rounding","id":2678,"members":[{"id":2674,"name":"Floor","nameLocation":"336:5:19","nodeType":"EnumValue","src":"336:5:19"},{"id":2675,"name":"Ceil","nameLocation":"379:4:19","nodeType":"EnumValue","src":"379:4:19"},{"id":2676,"name":"Trunc","nameLocation":"421:5:19","nodeType":"EnumValue","src":"421:5:19"},{"id":2677,"name":"Expand","nameLocation":"451:6:19","nodeType":"EnumValue","src":"451:6:19"}],"name":"Rounding","nameLocation":"317:8:19","nodeType":"EnumDefinition","src":"312:169:19"},{"body":{"id":2709,"nodeType":"Block","src":"661:140:19","statements":[{"id":2708,"nodeType":"UncheckedBlock","src":"671:124:19","statements":[{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"c","nameLocation":"703:1:19","nodeType":"VariableDeclaration","scope":2708,"src":"695:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"711:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"730:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"734:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2703,"nodeType":"IfStatement","src":"726:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2689,"id":2702,"nodeType":"Return","src":"737:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2705,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"782:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2689,"id":2707,"nodeType":"Return","src":"768:16:19"}]}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"487:93:19","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:19","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":2710,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":2710,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"646:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2685,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"652:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:19"},"scope":3721,"src":"585:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2737,"nodeType":"Block","src":"984:113:19","statements":[{"id":2736,"nodeType":"UncheckedBlock","src":"994:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2723,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"1026:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2729,"nodeType":"IfStatement","src":"1018:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2721,"id":2728,"nodeType":"Return","src":"1029:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"1074:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2721,"id":2735,"nodeType":"Return","src":"1060:20:19"}]}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"807:96:19","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:19","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"a","nameLocation":"932:1:19","nodeType":"VariableDeclaration","scope":2738,"src":"924:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"b","nameLocation":"943:1:19","nodeType":"VariableDeclaration","scope":2738,"src":"935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:19"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"969:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"975:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:19"},"scope":3721,"src":"908:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"1283:417:19","statements":[{"id":2778,"nodeType":"UncheckedBlock","src":"1293:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2757,"nodeType":"IfStatement","src":"1547:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2749,"id":2756,"nodeType":"Return","src":"1559:16:19"}},{"assignments":[2759],"declarations":[{"constant":false,"id":2759,"mutability":"mutable","name":"c","nameLocation":"1597:1:19","nodeType":"VariableDeclaration","scope":2778,"src":"1589:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2763,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1605:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1624:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2765,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2767,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1633:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"1620:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2749,"id":2772,"nodeType":"Return","src":"1636:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2775,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1681:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2749,"id":2777,"nodeType":"Return","src":"1667:16:19"}]}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"1103:99:19","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:19","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"a","nameLocation":"1231:1:19","nodeType":"VariableDeclaration","scope":2780,"src":"1223:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"b","nameLocation":"1242:1:19","nodeType":"VariableDeclaration","scope":2780,"src":"1234:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:19"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"1268:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2745,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"1274:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:19"},"scope":3721,"src":"1207:493:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"1887:114:19","statements":[{"id":2806,"nodeType":"UncheckedBlock","src":"1897:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"1925:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"nodeType":"IfStatement","src":"1921:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2791,"id":2798,"nodeType":"Return","src":"1933:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1978:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"1982:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2791,"id":2805,"nodeType":"Return","src":"1964:20:19"}]}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"1706:100:19","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:19","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"a","nameLocation":"1835:1:19","nodeType":"VariableDeclaration","scope":2808,"src":"1827:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"b","nameLocation":"1846:1:19","nodeType":"VariableDeclaration","scope":2808,"src":"1838:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:19"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"1872:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2787,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"1878:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:19"},"scope":3721,"src":"1811:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"2198:114:19","statements":[{"id":2834,"nodeType":"UncheckedBlock","src":"2208:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2827,"nodeType":"IfStatement","src":"2232:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2819,"id":2826,"nodeType":"Return","src":"2244:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2289:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2830,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2293:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2819,"id":2833,"nodeType":"Return","src":"2275:20:19"}]}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"2007:110:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:19","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"a","nameLocation":"2146:1:19","nodeType":"VariableDeclaration","scope":2836,"src":"2138:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"b","nameLocation":"2157:1:19","nodeType":"VariableDeclaration","scope":2836,"src":"2149:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:19"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2836,"src":"2183:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2815,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2836,"src":"2189:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:19"},"scope":3721,"src":"2122:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"2449:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2466:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2478:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:19","trueExpression":{"id":2849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2474:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2845,"id":2852,"nodeType":"Return","src":"2459:20:19"}]},"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"2318:59:19","text":" @dev Returns the largest of two numbers."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:19","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"a","nameLocation":"2403:1:19","nodeType":"VariableDeclaration","scope":2854,"src":"2395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"b","nameLocation":"2414:1:19","nodeType":"VariableDeclaration","scope":2854,"src":"2406:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:19"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2854,"src":"2440:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:19"},"scope":3721,"src":"2382:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"2624:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"2641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2865,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"2645:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2868,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"2653:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:19","trueExpression":{"id":2867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"2649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2863,"id":2870,"nodeType":"Return","src":"2634:20:19"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"2492:60:19","text":" @dev Returns the smallest of two numbers."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:19","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"a","nameLocation":"2578:1:19","nodeType":"VariableDeclaration","scope":2872,"src":"2570:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"b","nameLocation":"2589:1:19","nodeType":"VariableDeclaration","scope":2872,"src":"2581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:19"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"2615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:19"},"scope":3721,"src":"2557:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"2845:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"2900:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2904:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"2910:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2914:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2881,"id":2893,"nodeType":"Return","src":"2892:28:19"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"2667:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:19","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"a","nameLocation":"2799:1:19","nodeType":"VariableDeclaration","scope":2895,"src":"2791:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"b","nameLocation":"2810:1:19","nodeType":"VariableDeclaration","scope":2895,"src":"2802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:19"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2895,"src":"2836:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:19"},"scope":3721,"src":"2774:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2928,"nodeType":"Block","src":"3219:260:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3233:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2913,"nodeType":"IfStatement","src":"3229:127:19","trueBody":{"id":2912,"nodeType":"Block","src":"3241:115:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"3340:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3344:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2904,"id":2911,"nodeType":"Return","src":"3333:12:19"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"3444:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"3458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:19","trueExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2904,"id":2927,"nodeType":"Return","src":"3437:35:19"}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"2933:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:19","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"a","nameLocation":"3173:1:19","nodeType":"VariableDeclaration","scope":2929,"src":"3165:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"b","nameLocation":"3184:1:19","nodeType":"VariableDeclaration","scope":2929,"src":"3176:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:19"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"3210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:19"},"scope":3721,"src":"3148:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"3901:4018:19","statements":[{"id":3053,"nodeType":"UncheckedBlock","src":"3911:4002:19","statements":[{"assignments":[2942],"declarations":[{"constant":false,"id":2942,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:19","nodeType":"VariableDeclaration","scope":3053,"src":"4232:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2946,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"4248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2944,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4252:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:19"},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:19","nodeType":"VariableDeclaration","scope":3053,"src":"4312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2949,"nodeType":"VariableDeclarationStatement","src":"4312:13:19"},{"AST":{"nativeSrc":"4392:122:19","nodeType":"YulBlock","src":"4392:122:19","statements":[{"nativeSrc":"4410:30:19","nodeType":"YulVariableDeclaration","src":"4410:30:19","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:19","nodeType":"YulIdentifier","src":"4427:1:19"},{"name":"y","nativeSrc":"4430:1:19","nodeType":"YulIdentifier","src":"4430:1:19"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:19","nodeType":"YulLiteral","src":"4437:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:19","nodeType":"YulIdentifier","src":"4433:3:19"},"nativeSrc":"4433:6:19","nodeType":"YulFunctionCall","src":"4433:6:19"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:19","nodeType":"YulIdentifier","src":"4420:6:19"},"nativeSrc":"4420:20:19","nodeType":"YulFunctionCall","src":"4420:20:19"},"variables":[{"name":"mm","nativeSrc":"4414:2:19","nodeType":"YulTypedName","src":"4414:2:19","type":""}]},{"nativeSrc":"4457:43:19","nodeType":"YulAssignment","src":"4457:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:19","nodeType":"YulIdentifier","src":"4474:2:19"},{"name":"prod0","nativeSrc":"4478:5:19","nodeType":"YulIdentifier","src":"4478:5:19"}],"functionName":{"name":"sub","nativeSrc":"4470:3:19","nodeType":"YulIdentifier","src":"4470:3:19"},"nativeSrc":"4470:14:19","nodeType":"YulFunctionCall","src":"4470:14:19"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:19","nodeType":"YulIdentifier","src":"4489:2:19"},{"name":"prod0","nativeSrc":"4493:5:19","nodeType":"YulIdentifier","src":"4493:5:19"}],"functionName":{"name":"lt","nativeSrc":"4486:2:19","nodeType":"YulIdentifier","src":"4486:2:19"},"nativeSrc":"4486:13:19","nodeType":"YulFunctionCall","src":"4486:13:19"}],"functionName":{"name":"sub","nativeSrc":"4466:3:19","nodeType":"YulIdentifier","src":"4466:3:19"},"nativeSrc":"4466:34:19","nodeType":"YulFunctionCall","src":"4466:34:19"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:19","nodeType":"YulIdentifier","src":"4457:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2942,"isOffset":false,"isSlot":false,"src":"4478:5:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"4493:5:19","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"4457:5:19","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4427:1:19","valueSize":1},{"declaration":2934,"isOffset":false,"isSlot":false,"src":"4430:1:19","valueSize":1}],"id":2950,"nodeType":"InlineAssembly","src":"4383:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"4591:368:19","trueBody":{"id":2958,"nodeType":"Block","src":"4607:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"4925:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2955,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"4933:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2940,"id":2957,"nodeType":"Return","src":"4918:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"5065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2961,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"5080:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"5061:88:19","trueBody":{"id":2966,"nodeType":"Block","src":"5087:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2963,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"5112:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"RevertStatement","src":"5105:29:19"}]}},{"assignments":[2969],"declarations":[{"constant":false,"id":2969,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:19","nodeType":"VariableDeclaration","scope":3053,"src":"5404:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2970,"nodeType":"VariableDeclarationStatement","src":"5404:17:19"},{"AST":{"nativeSrc":"5444:291:19","nodeType":"YulBlock","src":"5444:291:19","statements":[{"nativeSrc":"5513:38:19","nodeType":"YulAssignment","src":"5513:38:19","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:19","nodeType":"YulIdentifier","src":"5533:1:19"},{"name":"y","nativeSrc":"5536:1:19","nodeType":"YulIdentifier","src":"5536:1:19"},{"name":"denominator","nativeSrc":"5539:11:19","nodeType":"YulIdentifier","src":"5539:11:19"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:19","nodeType":"YulIdentifier","src":"5526:6:19"},"nativeSrc":"5526:25:19","nodeType":"YulFunctionCall","src":"5526:25:19"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:19","nodeType":"YulIdentifier","src":"5513:9:19"}]},{"nativeSrc":"5633:41:19","nodeType":"YulAssignment","src":"5633:41:19","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:19","nodeType":"YulIdentifier","src":"5646:5:19"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:19","nodeType":"YulIdentifier","src":"5656:9:19"},{"name":"prod0","nativeSrc":"5667:5:19","nodeType":"YulIdentifier","src":"5667:5:19"}],"functionName":{"name":"gt","nativeSrc":"5653:2:19","nodeType":"YulIdentifier","src":"5653:2:19"},"nativeSrc":"5653:20:19","nodeType":"YulFunctionCall","src":"5653:20:19"}],"functionName":{"name":"sub","nativeSrc":"5642:3:19","nodeType":"YulIdentifier","src":"5642:3:19"},"nativeSrc":"5642:32:19","nodeType":"YulFunctionCall","src":"5642:32:19"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:19","nodeType":"YulIdentifier","src":"5633:5:19"}]},{"nativeSrc":"5691:30:19","nodeType":"YulAssignment","src":"5691:30:19","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:19","nodeType":"YulIdentifier","src":"5704:5:19"},{"name":"remainder","nativeSrc":"5711:9:19","nodeType":"YulIdentifier","src":"5711:9:19"}],"functionName":{"name":"sub","nativeSrc":"5700:3:19","nodeType":"YulIdentifier","src":"5700:3:19"},"nativeSrc":"5700:21:19","nodeType":"YulFunctionCall","src":"5700:21:19"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:19","nodeType":"YulIdentifier","src":"5691:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2936,"isOffset":false,"isSlot":false,"src":"5539:11:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"5667:5:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"5691:5:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"5704:5:19","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"5633:5:19","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"5646:5:19","valueSize":1},{"declaration":2969,"isOffset":false,"isSlot":false,"src":"5513:9:19","valueSize":1},{"declaration":2969,"isOffset":false,"isSlot":false,"src":"5656:9:19","valueSize":1},{"declaration":2969,"isOffset":false,"isSlot":false,"src":"5711:9:19","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"5533:1:19","valueSize":1},{"declaration":2934,"isOffset":false,"isSlot":false,"src":"5536:1:19","valueSize":1}],"id":2971,"nodeType":"InlineAssembly","src":"5435:300:19"},{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"twos","nameLocation":"5947:4:19","nodeType":"VariableDeclaration","scope":3053,"src":"5939:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2980,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"5954:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2976,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"5973:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:19"},{"AST":{"nativeSrc":"6008:362:19","nodeType":"YulBlock","src":"6008:362:19","statements":[{"nativeSrc":"6073:37:19","nodeType":"YulAssignment","src":"6073:37:19","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:19","nodeType":"YulIdentifier","src":"6092:11:19"},{"name":"twos","nativeSrc":"6105:4:19","nodeType":"YulIdentifier","src":"6105:4:19"}],"functionName":{"name":"div","nativeSrc":"6088:3:19","nodeType":"YulIdentifier","src":"6088:3:19"},"nativeSrc":"6088:22:19","nodeType":"YulFunctionCall","src":"6088:22:19"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:19","nodeType":"YulIdentifier","src":"6073:11:19"}]},{"nativeSrc":"6177:25:19","nodeType":"YulAssignment","src":"6177:25:19","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:19","nodeType":"YulIdentifier","src":"6190:5:19"},{"name":"twos","nativeSrc":"6197:4:19","nodeType":"YulIdentifier","src":"6197:4:19"}],"functionName":{"name":"div","nativeSrc":"6186:3:19","nodeType":"YulIdentifier","src":"6186:3:19"},"nativeSrc":"6186:16:19","nodeType":"YulFunctionCall","src":"6186:16:19"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:19","nodeType":"YulIdentifier","src":"6177:5:19"}]},{"nativeSrc":"6317:39:19","nodeType":"YulAssignment","src":"6317:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:19","nodeType":"YulLiteral","src":"6337:1:19","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:19","nodeType":"YulIdentifier","src":"6340:4:19"}],"functionName":{"name":"sub","nativeSrc":"6333:3:19","nodeType":"YulIdentifier","src":"6333:3:19"},"nativeSrc":"6333:12:19","nodeType":"YulFunctionCall","src":"6333:12:19"},{"name":"twos","nativeSrc":"6347:4:19","nodeType":"YulIdentifier","src":"6347:4:19"}],"functionName":{"name":"div","nativeSrc":"6329:3:19","nodeType":"YulIdentifier","src":"6329:3:19"},"nativeSrc":"6329:23:19","nodeType":"YulFunctionCall","src":"6329:23:19"},{"kind":"number","nativeSrc":"6354:1:19","nodeType":"YulLiteral","src":"6354:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:19","nodeType":"YulIdentifier","src":"6325:3:19"},"nativeSrc":"6325:31:19","nodeType":"YulFunctionCall","src":"6325:31:19"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:19","nodeType":"YulIdentifier","src":"6317:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2936,"isOffset":false,"isSlot":false,"src":"6073:11:19","valueSize":1},{"declaration":2936,"isOffset":false,"isSlot":false,"src":"6092:11:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"6177:5:19","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"6190:5:19","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"6105:4:19","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"6197:4:19","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"6317:4:19","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"6340:4:19","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"6347:4:19","valueSize":1}],"id":2981,"nodeType":"InlineAssembly","src":"5999:371:19"},{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"6436:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"6445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"6453:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2987,"nodeType":"ExpressionStatement","src":"6436:21:19"},{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:19","nodeType":"VariableDeclaration","scope":3053,"src":"6775:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2991,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"6798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:19"},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3000,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"7031:36:19"},{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7100:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7115:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3008,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"7100:36:19"},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3013,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7185:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3016,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"7170:36:19"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3021,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7255:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3024,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"7240:36:19"},{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3029,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7325:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3032,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ExpressionStatement","src":"7310:36:19"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3037,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"7396:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3040,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"7381:36:19"},{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"7851:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"7860:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3047,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7868:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3050,"nodeType":"ExpressionStatement","src":"7851:24:19"},{"expression":{"id":3051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"7896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2940,"id":3052,"nodeType":"Return","src":"7889:13:19"}]}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"3485:313:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:19","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"x","nameLocation":"3827:1:19","nodeType":"VariableDeclaration","scope":3055,"src":"3819:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"y","nameLocation":"3838:1:19","nodeType":"VariableDeclaration","scope":3055,"src":"3830:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:19","nodeType":"VariableDeclaration","scope":3055,"src":"3841:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:19"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"result","nameLocation":"3893:6:19","nodeType":"VariableDeclaration","scope":3055,"src":"3885:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:19"},"scope":3721,"src":"3803:4116:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3097,"nodeType":"Block","src":"8161:192:19","statements":[{"assignments":[3071],"declarations":[{"constant":false,"id":3071,"mutability":"mutable","name":"result","nameLocation":"8179:6:19","nodeType":"VariableDeclaration","scope":3097,"src":"8171:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3073,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"8195:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3074,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"8198:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3075,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8201:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3072,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3055,3098],"referencedDeclaration":3055,"src":"8188:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3079,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"8244:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3078,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"8227:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2678_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3082,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"8264:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3083,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"8267:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"8223:101:19","trueBody":{"id":3093,"nodeType":"Block","src":"8288:36:19","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"8302:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"8302:11:19"}]}},{"expression":{"id":3095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"8340:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3069,"id":3096,"nodeType":"Return","src":"8333:13:19"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"7925:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:19","nodeType":"FunctionDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"x","nameLocation":"8075:1:19","nodeType":"VariableDeclaration","scope":3098,"src":"8067:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"y","nameLocation":"8086:1:19","nodeType":"VariableDeclaration","scope":3098,"src":"8078:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:19","nodeType":"VariableDeclaration","scope":3098,"src":"8089:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:19","nodeType":"VariableDeclaration","scope":3098,"src":"8110:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3064,"nodeType":"UserDefinedTypeName","pathNode":{"id":3063,"name":"Rounding","nameLocations":["8110:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"8110:8:19"},"referencedDeclaration":2678,"src":"8110:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:19"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3098,"src":"8152:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:19"},"scope":3721,"src":"8051:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"8644:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3112,"nodeType":"IfStatement","src":"8654:45:19","trueBody":{"id":3111,"nodeType":"Block","src":"8666:33:19","statements":[{"expression":{"hexValue":"30","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3105,"id":3110,"nodeType":"Return","src":"8680:8:19"}]}},{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"result","nameLocation":"9386:6:19","nodeType":"VariableDeclaration","scope":3209,"src":"9378:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3123,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"9406:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3377,3412],"referencedDeclaration":3377,"src":"9401:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:19"},{"id":3208,"nodeType":"UncheckedBlock","src":"9815:408:19","statements":[{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9839:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"9858:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ExpressionStatement","src":"9839:35:19"},{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9888:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9898:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"9907:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"9888:35:19"},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9947:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"9956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ExpressionStatement","src":"9937:35:19"},{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9996:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10005:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10009:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ExpressionStatement","src":"9986:35:19"},{"expression":{"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10035:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10045:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10058:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3178,"nodeType":"ExpressionStatement","src":"10035:35:19"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10084:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10094:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10103:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10107:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"10084:35:19"},{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10133:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10143:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10152:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10156:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3200,"nodeType":"ExpressionStatement","src":"10133:35:19"},{"expression":{"arguments":[{"id":3202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10193:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10201:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10189:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3105,"id":3207,"nodeType":"Return","src":"10182:30:19"}]}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"8359:223:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:19","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"a","nameLocation":"8609:1:19","nodeType":"VariableDeclaration","scope":3210,"src":"8601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:19"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3210,"src":"8635:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:19"},"scope":3721,"src":"8587:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3244,"nodeType":"Block","src":"10405:164:19","statements":[{"id":3243,"nodeType":"UncheckedBlock","src":"10415:148:19","statements":[{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"result","nameLocation":"10447:6:19","nodeType":"VariableDeclaration","scope":3243,"src":"10439:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3226,"initialValue":{"arguments":[{"id":3224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"10461:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3223,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3210,3245],"referencedDeclaration":3210,"src":"10456:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10484:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3229,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10511:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3228,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"10494:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2678_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10524:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10533:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"10542:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:19","trueExpression":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3220,"id":3242,"nodeType":"Return","src":"10477:75:19"}]}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"10235:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:19","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"a","nameLocation":"10351:1:19","nodeType":"VariableDeclaration","scope":3245,"src":"10343:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:19","nodeType":"VariableDeclaration","scope":3245,"src":"10354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3215,"nodeType":"UserDefinedTypeName","pathNode":{"id":3214,"name":"Rounding","nameLocations":["10354:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"10354:8:19"},"referencedDeclaration":2678,"src":"10354:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:19"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3245,"src":"10396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:19"},"scope":3721,"src":"10329:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"10760:922:19","statements":[{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"result","nameLocation":"10778:6:19","nodeType":"VariableDeclaration","scope":3376,"src":"10770:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3256,"initialValue":{"hexValue":"30","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:19"},{"id":3373,"nodeType":"UncheckedBlock","src":"10798:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"10826:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"10822:99:19","trueBody":{"id":3270,"nodeType":"Block","src":"10844:77:19","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"10862:13:19"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"10893:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"10893:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"10938:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"nodeType":"IfStatement","src":"10934:96:19","trueBody":{"id":3285,"nodeType":"Block","src":"10955:75:19","statements":[{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"10973:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"10973:12:19"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11003:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"11003:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11047:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3301,"nodeType":"IfStatement","src":"11043:96:19","trueBody":{"id":3300,"nodeType":"Block","src":"11064:75:19","statements":[{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11082:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"11082:12:19"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"11112:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11156:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3316,"nodeType":"IfStatement","src":"11152:96:19","trueBody":{"id":3315,"nodeType":"Block","src":"11173:75:19","statements":[{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11191:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"11191:12:19"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11221:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"11221:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11265:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"nodeType":"IfStatement","src":"11261:93:19","trueBody":{"id":3330,"nodeType":"Block","src":"11281:73:19","statements":[{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11299:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3325,"nodeType":"ExpressionStatement","src":"11299:11:19"},{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11328:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"11328:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11371:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3346,"nodeType":"IfStatement","src":"11367:93:19","trueBody":{"id":3345,"nodeType":"Block","src":"11387:73:19","statements":[{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11405:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"11405:11:19"},{"expression":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11434:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3344,"nodeType":"ExpressionStatement","src":"11434:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11477:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"IfStatement","src":"11473:93:19","trueBody":{"id":3360,"nodeType":"Block","src":"11493:73:19","statements":[{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11511:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3355,"nodeType":"ExpressionStatement","src":"11511:11:19"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11540:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"11540:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"11583:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3372,"nodeType":"IfStatement","src":"11579:64:19","trueBody":{"id":3371,"nodeType":"Block","src":"11599:44:19","statements":[{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11617:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3370,"nodeType":"ExpressionStatement","src":"11617:11:19"}]}}]},{"expression":{"id":3374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"11669:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3252,"id":3375,"nodeType":"Return","src":"11662:13:19"}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"10575:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:19","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"value","nameLocation":"10721:5:19","nodeType":"VariableDeclaration","scope":3377,"src":"10713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:19"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"10751:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:19"},"scope":3721,"src":"10699:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3411,"nodeType":"Block","src":"11915:168:19","statements":[{"id":3410,"nodeType":"UncheckedBlock","src":"11925:152:19","statements":[{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"result","nameLocation":"11957:6:19","nodeType":"VariableDeclaration","scope":3410,"src":"11949:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3393,"initialValue":{"arguments":[{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"11971:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3377,3412],"referencedDeclaration":3377,"src":"11966:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"11998:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3396,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"12025:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3395,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"12008:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2678_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12043:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"12052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:19","trueExpression":{"hexValue":"31","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3387,"id":3409,"nodeType":"Return","src":"11991:75:19"}]}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"11688:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3412,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:19","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"value","nameLocation":"11857:5:19","nodeType":"VariableDeclaration","scope":3412,"src":"11849:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:19","nodeType":"VariableDeclaration","scope":3412,"src":"11864:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3382,"nodeType":"UserDefinedTypeName","pathNode":{"id":3381,"name":"Rounding","nameLocations":["11864:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"11864:8:19"},"referencedDeclaration":2678,"src":"11864:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:19"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3412,"src":"11906:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:19"},"scope":3721,"src":"11835:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3540,"nodeType":"Block","src":"12276:854:19","statements":[{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"result","nameLocation":"12294:6:19","nodeType":"VariableDeclaration","scope":3540,"src":"12286:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3423,"initialValue":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:19"},{"id":3537,"nodeType":"UncheckedBlock","src":"12314:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12342:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"12338:103:19","trueBody":{"id":3439,"nodeType":"Block","src":"12361:80:19","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3434,"nodeType":"ExpressionStatement","src":"12379:17:19"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12414:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ExpressionStatement","src":"12414:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"IfStatement","src":"12454:103:19","trueBody":{"id":3456,"nodeType":"Block","src":"12477:80:19","statements":[{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"12495:17:19"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12530:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"12530:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12574:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3474,"nodeType":"IfStatement","src":"12570:103:19","trueBody":{"id":3473,"nodeType":"Block","src":"12593:80:19","statements":[{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"12611:17:19"},{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12646:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3472,"nodeType":"ExpressionStatement","src":"12646:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12690:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"IfStatement","src":"12686:100:19","trueBody":{"id":3490,"nodeType":"Block","src":"12708:78:19","statements":[{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12726:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"12726:16:19"},{"expression":{"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12760:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3489,"nodeType":"ExpressionStatement","src":"12760:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12803:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3508,"nodeType":"IfStatement","src":"12799:100:19","trueBody":{"id":3507,"nodeType":"Block","src":"12821:78:19","statements":[{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12839:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3502,"nodeType":"ExpressionStatement","src":"12839:16:19"},{"expression":{"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12873:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3506,"nodeType":"ExpressionStatement","src":"12873:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12916:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"12912:100:19","trueBody":{"id":3524,"nodeType":"Block","src":"12934:78:19","statements":[{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12952:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"12952:16:19"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"12986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"12986:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"13029:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3536,"nodeType":"IfStatement","src":"13025:66:19","trueBody":{"id":3535,"nodeType":"Block","src":"13047:44:19","statements":[{"expression":{"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"13065:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3534,"nodeType":"ExpressionStatement","src":"13065:11:19"}]}}]},{"expression":{"id":3538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"13117:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3419,"id":3539,"nodeType":"Return","src":"13110:13:19"}]},"documentation":{"id":3413,"nodeType":"StructuredDocumentation","src":"12089:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:19","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"value","nameLocation":"12237:5:19","nodeType":"VariableDeclaration","scope":3541,"src":"12229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:19"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"12267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:19"},"scope":3721,"src":"12214:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"13365:170:19","statements":[{"id":3574,"nodeType":"UncheckedBlock","src":"13375:154:19","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"13407:6:19","nodeType":"VariableDeclaration","scope":3574,"src":"13399:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3557,"initialValue":{"arguments":[{"id":3555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"13422:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3541,3576],"referencedDeclaration":3541,"src":"13416:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"13449:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3560,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"13476:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3559,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"13459:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2678_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"13495:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"13504:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:19","trueExpression":{"hexValue":"31","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3573,"nodeType":"Return","src":"13442:76:19"}]}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"13136:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3576,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:19","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"value","nameLocation":"13307:5:19","nodeType":"VariableDeclaration","scope":3576,"src":"13299:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:19","nodeType":"VariableDeclaration","scope":3576,"src":"13314:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3546,"nodeType":"UserDefinedTypeName","pathNode":{"id":3545,"name":"Rounding","nameLocations":["13314:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"13314:8:19"},"referencedDeclaration":2678,"src":"13314:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:19"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3576,"src":"13356:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:19"},"scope":3721,"src":"13284:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"13855:600:19","statements":[{"assignments":[3585],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"result","nameLocation":"13873:6:19","nodeType":"VariableDeclaration","scope":3662,"src":"13865:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3587,"initialValue":{"hexValue":"30","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:19"},{"id":3659,"nodeType":"UncheckedBlock","src":"13893:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"13921:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"IfStatement","src":"13917:98:19","trueBody":{"id":3601,"nodeType":"Block","src":"13939:76:19","statements":[{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"13957:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ExpressionStatement","src":"13957:13:19"},{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"13988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"13988:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14032:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3617,"nodeType":"IfStatement","src":"14028:95:19","trueBody":{"id":3616,"nodeType":"Block","src":"14049:74:19","statements":[{"expression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14067:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3611,"nodeType":"ExpressionStatement","src":"14067:12:19"},{"expression":{"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14097:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3615,"nodeType":"ExpressionStatement","src":"14097:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14140:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3632,"nodeType":"IfStatement","src":"14136:95:19","trueBody":{"id":3631,"nodeType":"Block","src":"14157:74:19","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"14175:12:19"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"14205:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3647,"nodeType":"IfStatement","src":"14244:95:19","trueBody":{"id":3646,"nodeType":"Block","src":"14265:74:19","statements":[{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14283:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ExpressionStatement","src":"14283:12:19"},{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14313:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"14313:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3658,"nodeType":"IfStatement","src":"14352:64:19","trueBody":{"id":3657,"nodeType":"Block","src":"14372:44:19","statements":[{"expression":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ExpressionStatement","src":"14390:11:19"}]}}]},{"expression":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14442:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3583,"id":3661,"nodeType":"Return","src":"14435:13:19"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"13541:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:19","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"value","nameLocation":"13816:5:19","nodeType":"VariableDeclaration","scope":3663,"src":"13808:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:19"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"13846:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:19"},"scope":3721,"src":"13792:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3700,"nodeType":"Block","src":"14692:177:19","statements":[{"id":3699,"nodeType":"UncheckedBlock","src":"14702:161:19","statements":[{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"result","nameLocation":"14734:6:19","nodeType":"VariableDeclaration","scope":3699,"src":"14726:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3679,"initialValue":{"arguments":[{"id":3677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"14750:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3663,3701],"referencedDeclaration":3663,"src":"14743:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"14777:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3682,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14804:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3681,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"14787:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2678_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"14823:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"14838:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:19","trueExpression":{"hexValue":"31","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3673,"id":3698,"nodeType":"Return","src":"14770:82:19"}]}]},"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"14461:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:19","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"value","nameLocation":"14634:5:19","nodeType":"VariableDeclaration","scope":3701,"src":"14626:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:19","nodeType":"VariableDeclaration","scope":3701,"src":"14641:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3668,"nodeType":"UserDefinedTypeName","pathNode":{"id":3667,"name":"Rounding","nameLocations":["14641:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"14641:8:19"},"referencedDeclaration":2678,"src":"14641:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:19"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"14683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:19"},"scope":3721,"src":"14610:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"15067:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3712,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"15090:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}],"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3710,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:19","typeDescriptions":{}}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3709,"id":3718,"nodeType":"Return","src":"15077:31:19"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"14875:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:19","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:19","nodeType":"VariableDeclaration","scope":3720,"src":"15019:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"},"typeName":{"id":3704,"nodeType":"UserDefinedTypeName","pathNode":{"id":3703,"name":"Rounding","nameLocations":["15019:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"15019:8:19"},"referencedDeclaration":2678,"src":"15019:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2678","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:19"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3720,"src":"15061:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3707,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:19"},"scope":3721,"src":"14993:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3722,"src":"203:14914:19","usedErrors":[2673],"usedEvents":[]}],"src":"103:15015:19"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3826]},"id":3827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3723,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3724,"nodeType":"StructuredDocumentation","src":"135:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3826,"linearizedBaseContracts":[3826],"name":"SignedMath","nameLocation":"224:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3741,"nodeType":"Block","src":"376:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"393:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"397:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"405:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:20","trueExpression":{"id":3737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"401:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3733,"id":3740,"nodeType":"Return","src":"386:20:20"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"241:66:20","text":" @dev Returns the largest of two signed numbers."},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:20","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"a","nameLocation":"332:1:20","nodeType":"VariableDeclaration","scope":3742,"src":"325:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3726,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"b","nameLocation":"342:1:20","nodeType":"VariableDeclaration","scope":3742,"src":"335:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3728,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:20"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"368:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3731,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:20"},"scope":3826,"src":"312:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3759,"nodeType":"Block","src":"555:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"572:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"584:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:20","trueExpression":{"id":3755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"580:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3751,"id":3758,"nodeType":"Return","src":"565:20:20"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"419:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:20","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"a","nameLocation":"511:1:20","nodeType":"VariableDeclaration","scope":3760,"src":"504:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3744,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"b","nameLocation":"521:1:20","nodeType":"VariableDeclaration","scope":3760,"src":"514:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3746,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:20"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"547:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3749,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:20"},"scope":3826,"src":"491:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"797:162:20","statements":[{"assignments":[3771],"declarations":[{"constant":false,"id":3771,"mutability":"mutable","name":"x","nameLocation":"866:1:20","nodeType":"VariableDeclaration","scope":3803,"src":"859:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3770,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3784,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"871:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"875:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"882:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"886:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"911:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"931:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:20","typeDescriptions":{}}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3786,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:20","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"945:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"949:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3769,"id":3802,"nodeType":"Return","src":"904:48:20"}]},"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"598:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:20","nodeType":"FunctionDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"a","nameLocation":"753:1:20","nodeType":"VariableDeclaration","scope":3804,"src":"746:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3762,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"b","nameLocation":"763:1:20","nodeType":"VariableDeclaration","scope":3804,"src":"756:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3764,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:20"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"789:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3767,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:20"},"scope":3826,"src":"729:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"1103:158:20","statements":[{"id":3823,"nodeType":"UncheckedBlock","src":"1113:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"1228:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:20","subExpression":{"id":3818,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"1242:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:20","trueExpression":{"id":3817,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"1237:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:20","typeDescriptions":{}}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3811,"id":3822,"nodeType":"Return","src":"1213:31:20"}]}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"965:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:20","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"n","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":3825,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3806,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:20"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"1094:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:20"},"scope":3826,"src":"1048:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3827,"src":"216:1047:20","usedErrors":[],"usedEvents":[]}],"src":"109:1155:20"}},"contracts/Counters.sol":{"id":21,"ast":{"absolutePath":"contracts/Counters.sol","exportedSymbols":{"Counters":[3900]},"id":3901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3828,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"112:311:21","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3900,"linearizedBaseContracts":[3900],"name":"Counters","nameLocation":"432:8:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":3832,"members":[{"constant":false,"id":3831,"mutability":"mutable","name":"_value","nameLocation":"794:6:21","nodeType":"VariableDeclaration","scope":3832,"src":"786:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:21","nodeType":"StructDefinition","scope":3900,"src":"447:374:21","visibility":"public"},{"body":{"id":3843,"nodeType":"Block","src":"901:38:21","statements":[{"expression":{"expression":{"id":3840,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"918:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:21","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"918:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3839,"id":3842,"nodeType":"Return","src":"911:21:21"}]},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:21","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"counter","nameLocation":"860:7:21","nodeType":"VariableDeclaration","scope":3844,"src":"844:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3834,"nodeType":"UserDefinedTypeName","pathNode":{"id":3833,"name":"Counter","nameLocations":["844:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"844:7:21"},"referencedDeclaration":3832,"src":"844:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:21"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"892:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:21"},"scope":3900,"src":"827:112:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3857,"nodeType":"Block","src":"998:70:21","statements":[{"id":3856,"nodeType":"UncheckedBlock","src":"1008:54:21","statements":[{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3850,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"1032:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:21","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1032:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"1032:19:21"}]}]},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:21","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"counter","nameLocation":"980:7:21","nodeType":"VariableDeclaration","scope":3858,"src":"964:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3846,"nodeType":"UserDefinedTypeName","pathNode":{"id":3845,"name":"Counter","nameLocations":["964:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"964:7:21"},"referencedDeclaration":3832,"src":"964:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:21"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[],"src":"998:0:21"},"scope":3900,"src":"945:123:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3885,"nodeType":"Block","src":"1127:176:21","statements":[{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"value","nameLocation":"1145:5:21","nodeType":"VariableDeclaration","scope":3885,"src":"1137:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3868,"initialValue":{"expression":{"id":3866,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1153:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:21","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1153:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"1185:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3875,"nodeType":"ExpressionStatement","src":"1177:49:21"},{"id":3884,"nodeType":"UncheckedBlock","src":"1236:61:21","statements":[{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3876,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1260:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:21","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1260:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"1277:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"1260:26:21"}]}]},"id":3886,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:21","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"counter","nameLocation":"1109:7:21","nodeType":"VariableDeclaration","scope":3886,"src":"1093:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3860,"nodeType":"UserDefinedTypeName","pathNode":{"id":3859,"name":"Counter","nameLocations":["1093:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"1093:7:21"},"referencedDeclaration":3832,"src":"1093:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:21"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[],"src":"1127:0:21"},"scope":3900,"src":"1074:229:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"1358:35:21","statements":[{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3892,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"1368:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:21","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"1368:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"1368:18:21"}]},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:21","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"counter","nameLocation":"1340:7:21","nodeType":"VariableDeclaration","scope":3899,"src":"1324:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3888,"nodeType":"UserDefinedTypeName","pathNode":{"id":3887,"name":"Counter","nameLocations":["1324:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"1324:7:21"},"referencedDeclaration":3832,"src":"1324:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:21"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[],"src":"1358:0:21"},"scope":3900,"src":"1309:84:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3901,"src":"424:971:21","usedErrors":[],"usedEvents":[]}],"src":"87:1309:21"}},"contracts/FlareToken.sol":{"id":22,"ast":{"absolutePath":"contracts/FlareToken.sol","exportedSymbols":{"Context":[1182],"ECDSA":[2366],"EIP712":[2593],"ERC20":[824],"ERC20Pausable":[936],"ERC20Permit":[1090],"FlareToken":[3981],"IERC20Permit":[1152],"Nonces":[1250],"Ownable":[147],"Pausable":[1367]},"id":3982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":3903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3982,"sourceUnit":1091,"src":"63:72:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3982,"sourceUnit":148,"src":"137:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":3905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3982,"sourceUnit":937,"src":"191:74:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3906,"name":"ERC20Permit","nameLocations":["296:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1090,"src":"296:11:22"},"id":3907,"nodeType":"InheritanceSpecifier","src":"296:11:22"},{"baseName":{"id":3908,"name":"Ownable","nameLocations":["309:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"309:7:22"},"id":3909,"nodeType":"InheritanceSpecifier","src":"309:7:22"},{"baseName":{"id":3910,"name":"ERC20Pausable","nameLocations":["318:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"318:13:22"},"id":3911,"nodeType":"InheritanceSpecifier","src":"318:13:22"}],"canonicalName":"FlareToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3981,"linearizedBaseContracts":[3981,936,1367,147,1090,1250,2593,172,1152,824,214,1116,902,1182],"name":"FlareToken","nameLocation":"282:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3925,"nodeType":"Block","src":"419:2:22","statements":[]},"id":3926,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"466c617265546f6b656e","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"357:12:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0c12631565e468bca9ed326d33b04b51b601eb9e98cb2f3c539c0070ecc9ea4","typeString":"literal_string \"FlareToken\""},"value":"FlareToken"},{"hexValue":"464c52","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"371:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_277471588dc8a8a12d9c788cbcd8dc8e5bfbd906b1c63d46bdba8d080442bf82","typeString":"literal_string \"FLR\""},"value":"FLR"}],"id":3916,"kind":"baseConstructorSpecifier","modifierName":{"id":3913,"name":"ERC20","nameLocations":["351:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"351:5:22"},"nodeType":"ModifierInvocation","src":"351:26:22"},{"arguments":[{"hexValue":"666c617265","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"391:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f18d3cef363ef3d9b2f893c01a845645821d99eb19f05a6a335a4ffcded27a57","typeString":"literal_string \"flare\""},"value":"flare"}],"id":3919,"kind":"baseConstructorSpecifier","modifierName":{"id":3917,"name":"ERC20Permit","nameLocations":["379:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1090,"src":"379:11:22"},"nodeType":"ModifierInvocation","src":"379:20:22"},{"arguments":[{"expression":{"id":3921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"408:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"412:6:22","memberName":"sender","nodeType":"MemberAccess","src":"408:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3923,"kind":"baseConstructorSpecifier","modifierName":{"id":3920,"name":"Ownable","nameLocations":["400:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"400:7:22"},"nodeType":"ModifierInvocation","src":"400:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[],"src":"349:2:22"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[],"src":"419:0:22"},"scope":3981,"src":"338:83:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[631,935],"body":{"id":3946,"nodeType":"Block","src":"584:93:22","statements":[{"expression":{"arguments":[{"id":3941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"653:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"659:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"663:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3938,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"639:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FlareToken_$3981_$","typeString":"type(contract super FlareToken)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"645:7:22","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":935,"src":"639:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3945,"nodeType":"ExpressionStatement","src":"639:30:22"}]},"id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"495:7:22","nodeType":"FunctionDefinition","overrides":{"id":3936,"nodeType":"OverrideSpecifier","overrides":[{"id":3934,"name":"ERC20","nameLocations":["562:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"562:5:22"},{"id":3935,"name":"ERC20Pausable","nameLocations":["569:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"569:13:22"}],"src":"553:30:22"},"parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"from","nameLocation":"511:4:22","nodeType":"VariableDeclaration","scope":3947,"src":"503:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3927,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"to","nameLocation":"525:2:22","nodeType":"VariableDeclaration","scope":3947,"src":"517:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3929,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"value","nameLocation":"537:5:22","nodeType":"VariableDeclaration","scope":3947,"src":"529:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"502:41:22"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[],"src":"584:0:22"},"scope":3981,"src":"486:191:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"765:36:22","statements":[{"expression":{"arguments":[{"id":3957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"782:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"786:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3956,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"776:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"776:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3960,"nodeType":"ExpressionStatement","src":"776:17:22"}]},"functionSelector":"40c10f19","id":3962,"implemented":true,"kind":"function","modifiers":[{"id":3954,"kind":"modifierInvocation","modifierName":{"id":3953,"name":"onlyOwner","nameLocations":["755:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"755:9:22"},"nodeType":"ModifierInvocation","src":"755:9:22"}],"name":"mint","nameLocation":"715:4:22","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"to","nameLocation":"728:2:22","nodeType":"VariableDeclaration","scope":3962,"src":"720:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"amount","nameLocation":"740:6:22","nodeType":"VariableDeclaration","scope":3962,"src":"732:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"719:28:22"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[],"src":"765:0:22"},"scope":3981,"src":"706:95:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3970,"nodeType":"Block","src":"868:27:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3967,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"879:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"879:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3969,"nodeType":"ExpressionStatement","src":"879:8:22"}]},"functionSelector":"8456cb59","id":3971,"implemented":true,"kind":"function","modifiers":[{"id":3965,"kind":"modifierInvocation","modifierName":{"id":3964,"name":"onlyOwner","nameLocations":["858:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"858:9:22"},"nodeType":"ModifierInvocation","src":"858:9:22"}],"name":"pause","nameLocation":"843:5:22","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[],"src":"848:2:22"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"868:0:22"},"scope":3981,"src":"834:61:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3979,"nodeType":"Block","src":"964:29:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3976,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"975:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3978,"nodeType":"ExpressionStatement","src":"975:10:22"}]},"functionSelector":"3f4ba83a","id":3980,"implemented":true,"kind":"function","modifiers":[{"id":3974,"kind":"modifierInvocation","modifierName":{"id":3973,"name":"onlyOwner","nameLocations":["954:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"954:9:22"},"nodeType":"ModifierInvocation","src":"954:9:22"}],"name":"unpause","nameLocation":"937:7:22","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[],"src":"944:2:22"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[],"src":"964:0:22"},"scope":3981,"src":"928:65:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3982,"src":"273:725:22","usedErrors":[13,18,184,189,194,203,208,213,967,974,1192,1272,1275,1450,1452,2029,2034,2039],"usedEvents":[24,152,836,845,1264,1269]}],"src":"33:967:22"}},"contracts/IProposalLogic.sol":{"id":23,"ast":{"absolutePath":"contracts/IProposalLogic.sol","exportedSymbols":{"IProposalLogic":[4358]},"id":4359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IProposalLogic","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4358,"linearizedBaseContracts":[4358],"name":"IProposalLogic","nameLocation":"74:14:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IProposalLogic.Proposal","id":3998,"members":[{"constant":false,"id":3985,"mutability":"mutable","name":"proposer","nameLocation":"167:8:23","nodeType":"VariableDeclaration","scope":3998,"src":"159:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"description","nameLocation":"212:11:23","nodeType":"VariableDeclaration","scope":3998,"src":"205:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3986,"name":"string","nodeType":"ElementaryTypeName","src":"205:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"stakeAmount","nameLocation":"258:11:23","nodeType":"VariableDeclaration","scope":3998,"src":"250:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"active","nameLocation":"307:6:23","nodeType":"VariableDeclaration","scope":3998,"src":"302:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3990,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"isSettled","nameLocation":"351:9:23","nodeType":"VariableDeclaration","scope":3998,"src":"346:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3992,"name":"bool","nodeType":"ElementaryTypeName","src":"346:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"isWagered","nameLocation":"422:9:23","nodeType":"VariableDeclaration","scope":3998,"src":"417:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3994,"name":"bool","nodeType":"ElementaryTypeName","src":"417:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"endTime","nameLocation":"450:7:23","nodeType":"VariableDeclaration","scope":3998,"src":"442:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"139:8:23","nodeType":"StructDefinition","scope":4358,"src":"132:333:23","visibility":"public"},{"canonicalName":"IProposalLogic.Option","id":4003,"members":[{"constant":false,"id":4000,"mutability":"mutable","name":"description","nameLocation":"524:11:23","nodeType":"VariableDeclaration","scope":4003,"src":"517:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3999,"name":"string","nodeType":"ElementaryTypeName","src":"517:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"voteCount","nameLocation":"570:9:23","nodeType":"VariableDeclaration","scope":4003,"src":"562:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Option","nameLocation":"499:6:23","nodeType":"StructDefinition","scope":4358,"src":"492:111:23","visibility":"public"},{"canonicalName":"IProposalLogic.Stake","id":4012,"members":[{"constant":false,"id":4005,"mutability":"mutable","name":"amount","nameLocation":"656:6:23","nodeType":"VariableDeclaration","scope":4012,"src":"648:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"unlockTime","nameLocation":"700:10:23","nodeType":"VariableDeclaration","scope":4012,"src":"692:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"staker","nameLocation":"754:6:23","nodeType":"VariableDeclaration","scope":4012,"src":"746:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4008,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"isWagered","nameLocation":"795:9:23","nodeType":"VariableDeclaration","scope":4012,"src":"790:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4010,"name":"bool","nodeType":"ElementaryTypeName","src":"790:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Stake","nameLocation":"631:5:23","nodeType":"StructDefinition","scope":4358,"src":"624:203:23","visibility":"public"},{"canonicalName":"IProposalLogic.VoteRecord","id":4019,"members":[{"constant":false,"id":4014,"mutability":"mutable","name":"proposalId","nameLocation":"891:10:23","nodeType":"VariableDeclaration","scope":4019,"src":"883:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"optionId","nameLocation":"932:8:23","nodeType":"VariableDeclaration","scope":4019,"src":"924:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"amount","nameLocation":"986:6:23","nodeType":"VariableDeclaration","scope":4019,"src":"978:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VoteRecord","nameLocation":"861:10:23","nodeType":"StructDefinition","scope":4358,"src":"854:162:23","visibility":"public"},{"anonymous":false,"eventSelector":"59e04c3f0d44b7caf6e8ef854b61d9a51cf1960d7a88ff6356cc5e946b4b5832","id":4027,"name":"Received","nameLocation":"1042:8:23","nodeType":"EventDefinition","parameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"1059:6:23","nodeType":"VariableDeclaration","scope":4027,"src":"1051:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4023,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1072:6:23","nodeType":"VariableDeclaration","scope":4027,"src":"1067:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint","nodeType":"ElementaryTypeName","src":"1067:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4025,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1087:7:23","nodeType":"VariableDeclaration","scope":4027,"src":"1080:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4024,"name":"string","nodeType":"ElementaryTypeName","src":"1080:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1050:45:23"},"src":"1036:60:23"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":4033,"name":"Deposited","nameLocation":"1108:9:23","nodeType":"EventDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1134:4:23","nodeType":"VariableDeclaration","scope":4033,"src":"1118:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4028,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4031,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1145:6:23","nodeType":"VariableDeclaration","scope":4033,"src":"1140:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint","nodeType":"ElementaryTypeName","src":"1140:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:35:23"},"src":"1102:51:23"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":4039,"name":"Withdrawn","nameLocation":"1165:9:23","nodeType":"EventDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1191:4:23","nodeType":"VariableDeclaration","scope":4039,"src":"1175:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4034,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4037,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1202:6:23","nodeType":"VariableDeclaration","scope":4039,"src":"1197:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:35:23"},"src":"1159:51:23"},{"anonymous":false,"eventSelector":"c32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3","id":4049,"name":"Voted","nameLocation":"1222:5:23","nodeType":"EventDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"1254:8:23","nodeType":"VariableDeclaration","scope":4049,"src":"1238:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4043,"indexed":true,"mutability":"mutable","name":"_proposalId","nameLocation":"1289:11:23","nodeType":"VariableDeclaration","scope":4049,"src":"1273:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"indexed":true,"mutability":"mutable","name":"_optionId","nameLocation":"1327:9:23","nodeType":"VariableDeclaration","scope":4049,"src":"1311:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4047,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"1355:7:23","nodeType":"VariableDeclaration","scope":4049,"src":"1347:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:142:23"},"src":"1216:154:23"},{"anonymous":false,"eventSelector":"ea966a8f7bfdedb35590510f87f503b52990ecf99d780380ad04545ee72b9b73","id":4062,"name":"ProposalAndOptionsSubmitted","nameLocation":"1382:27:23","nodeType":"EventDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1436:4:23","nodeType":"VariableDeclaration","scope":4062,"src":"1420:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4053,"indexed":true,"mutability":"mutable","name":"proposalIndex","nameLocation":"1467:13:23","nodeType":"VariableDeclaration","scope":4062,"src":"1451:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4055,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"1498:19:23","nodeType":"VariableDeclaration","scope":4062,"src":"1491:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4054,"name":"string","nodeType":"ElementaryTypeName","src":"1491:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4058,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"1537:18:23","nodeType":"VariableDeclaration","scope":4062,"src":"1528:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4056,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4057,"nodeType":"ArrayTypeName","src":"1528:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4060,"indexed":false,"mutability":"mutable","name":"endtime","nameLocation":"1574:7:23","nodeType":"VariableDeclaration","scope":4062,"src":"1566:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1409:179:23"},"src":"1376:213:23"},{"anonymous":false,"eventSelector":"5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085","id":4074,"name":"DepositForProposal","nameLocation":"1601:18:23","nodeType":"EventDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1646:6:23","nodeType":"VariableDeclaration","scope":4074,"src":"1630:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4066,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1671:6:23","nodeType":"VariableDeclaration","scope":4074,"src":"1663:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4068,"indexed":false,"mutability":"mutable","name":"staked","nameLocation":"1693:6:23","nodeType":"VariableDeclaration","scope":4074,"src":"1688:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4067,"name":"bool","nodeType":"ElementaryTypeName","src":"1688:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4070,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1718:10:23","nodeType":"VariableDeclaration","scope":4074,"src":"1710:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4072,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"1755:10:23","nodeType":"VariableDeclaration","scope":4074,"src":"1739:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:153:23"},"src":"1595:178:23"},{"anonymous":false,"eventSelector":"9851629be966df862ee0cfd4f2544aed401a8672ab1fee2cb3bc8a89a44953e0","id":4082,"name":"TokensStaked","nameLocation":"1785:12:23","nodeType":"EventDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1824:4:23","nodeType":"VariableDeclaration","scope":4082,"src":"1808:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"1808:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4078,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1847:6:23","nodeType":"VariableDeclaration","scope":4082,"src":"1839:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4080,"indexed":false,"mutability":"mutable","name":"isForProposal","nameLocation":"1869:13:23","nodeType":"VariableDeclaration","scope":4082,"src":"1864:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4079,"name":"bool","nodeType":"ElementaryTypeName","src":"1864:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1797:92:23"},"src":"1779:111:23"},{"anonymous":false,"eventSelector":"465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8","id":4090,"name":"FundsSettledForAverageQuality","nameLocation":"1902:29:23","nodeType":"EventDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1958:10:23","nodeType":"VariableDeclaration","scope":4090,"src":"1942:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4086,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"1995:8:23","nodeType":"VariableDeclaration","scope":4090,"src":"1979:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4085,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4088,"indexed":false,"mutability":"mutable","name":"amountToReturn","nameLocation":"2022:14:23","nodeType":"VariableDeclaration","scope":4090,"src":"2014:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1931:112:23"},"src":"1896:148:23"},{"anonymous":false,"eventSelector":"55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c","id":4098,"name":"WithdrawalDetailed","nameLocation":"2056:18:23","nodeType":"EventDefinition","parameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2101:4:23","nodeType":"VariableDeclaration","scope":4098,"src":"2085:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4091,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4094,"indexed":false,"mutability":"mutable","name":"amountWithdrawn","nameLocation":"2124:15:23","nodeType":"VariableDeclaration","scope":4098,"src":"2116:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4096,"indexed":false,"mutability":"mutable","name":"balanceAfterWithdrawal","nameLocation":"2158:22:23","nodeType":"VariableDeclaration","scope":4098,"src":"2150:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:113:23"},"src":"2050:138:23"},{"anonymous":false,"eventSelector":"72dfc6aae5d2371c5da47f722fc615b78f5b0fa713798ff2ad1ff40ec149c809","id":4106,"name":"UnlockTimeUpdated","nameLocation":"2200:17:23","nodeType":"EventDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2244:6:23","nodeType":"VariableDeclaration","scope":4106,"src":"2228:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"2228:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4102,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"2277:10:23","nodeType":"VariableDeclaration","scope":4106,"src":"2261:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2261:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4104,"indexed":false,"mutability":"mutable","name":"newUnlockTime","nameLocation":"2306:13:23","nodeType":"VariableDeclaration","scope":4106,"src":"2298:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2217:109:23"},"src":"2194:133:23"},{"anonymous":false,"eventSelector":"ddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368","id":4114,"name":"FundsPenalizedForNonCompliance","nameLocation":"2339:30:23","nodeType":"EventDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2396:10:23","nodeType":"VariableDeclaration","scope":4114,"src":"2380:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4110,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"2433:8:23","nodeType":"VariableDeclaration","scope":4114,"src":"2417:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4112,"indexed":false,"mutability":"mutable","name":"penalty","nameLocation":"2460:7:23","nodeType":"VariableDeclaration","scope":4114,"src":"2452:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2452:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2369:105:23"},"src":"2333:142:23"},{"anonymous":false,"eventSelector":"68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f","id":4120,"name":"ProposalStatusChanged","nameLocation":"2487:21:23","nodeType":"EventDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"2517:10:23","nodeType":"VariableDeclaration","scope":4120,"src":"2509:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4118,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"2534:8:23","nodeType":"VariableDeclaration","scope":4120,"src":"2529:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4117,"name":"bool","nodeType":"ElementaryTypeName","src":"2529:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2508:35:23"},"src":"2481:63:23"},{"anonymous":false,"eventSelector":"9881fec5d892a663ff01483c3d9ea7c153c2ca7ca7fcd7eac040e32f792700ec","id":4126,"name":"ProposalEndTime","nameLocation":"2556:15:23","nodeType":"EventDefinition","parameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"indexed":false,"mutability":"mutable","name":"_proposalId","nameLocation":"2580:11:23","nodeType":"VariableDeclaration","scope":4126,"src":"2572:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4124,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2601:7:23","nodeType":"VariableDeclaration","scope":4126,"src":"2593:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2571:38:23"},"src":"2550:60:23"},{"anonymous":false,"eventSelector":"66f49d52069f7740a610f503527e90cfb04b8d7218d20d9fe7a5d3e246ea8653","id":4141,"name":"ProposalForUser","nameLocation":"2622:15:23","nodeType":"EventDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"2664:11:23","nodeType":"VariableDeclaration","scope":4141,"src":"2648:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4127,"name":"address","nodeType":"ElementaryTypeName","src":"2648:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4130,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2702:10:23","nodeType":"VariableDeclaration","scope":4141,"src":"2686:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"2730:19:23","nodeType":"VariableDeclaration","scope":4141,"src":"2723:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4131,"name":"string","nodeType":"ElementaryTypeName","src":"2723:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4134,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"2768:11:23","nodeType":"VariableDeclaration","scope":4141,"src":"2760:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4137,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"2799:18:23","nodeType":"VariableDeclaration","scope":4141,"src":"2790:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4135,"name":"string","nodeType":"ElementaryTypeName","src":"2790:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4136,"nodeType":"ArrayTypeName","src":"2790:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4139,"indexed":false,"mutability":"mutable","name":"endtime","nameLocation":"2836:7:23","nodeType":"VariableDeclaration","scope":4141,"src":"2828:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2637:213:23"},"src":"2616:235:23"},{"anonymous":false,"eventSelector":"a793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab","id":4151,"name":"StakeReleased","nameLocation":"2863:13:23","nodeType":"EventDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2903:4:23","nodeType":"VariableDeclaration","scope":4151,"src":"2887:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"2887:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4145,"indexed":false,"mutability":"mutable","name":"stakeIndex","nameLocation":"2926:10:23","nodeType":"VariableDeclaration","scope":4151,"src":"2918:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2918:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"indexed":false,"mutability":"mutable","name":"penalized","nameLocation":"2952:9:23","nodeType":"VariableDeclaration","scope":4151,"src":"2947:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4146,"name":"bool","nodeType":"ElementaryTypeName","src":"2947:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4149,"indexed":false,"mutability":"mutable","name":"amountReleased","nameLocation":"2980:14:23","nodeType":"VariableDeclaration","scope":4151,"src":"2972:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2972:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2876:125:23"},"src":"2857:145:23"},{"anonymous":false,"eventSelector":"712354cc8b71a852b959baf9994ba8b6dba9bc7f8d2cc4ec7d1f4898b31bd7c1","id":4157,"name":"ProposalEnded","nameLocation":"3014:13:23","nodeType":"EventDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"3044:10:23","nodeType":"VariableDeclaration","scope":4157,"src":"3028:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4155,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"3061:8:23","nodeType":"VariableDeclaration","scope":4157,"src":"3056:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4154,"name":"bool","nodeType":"ElementaryTypeName","src":"3056:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3027:43:23"},"src":"3008:63:23"},{"anonymous":false,"eventSelector":"628c5b5fb646e7f6c763f5e3b6fdcbee619fe1c1bc595643a1c70415a6f11349","id":4163,"name":"ProposalConcluded","nameLocation":"3083:17:23","nodeType":"EventDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"3117:10:23","nodeType":"VariableDeclaration","scope":4163,"src":"3101:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4161,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"3134:8:23","nodeType":"VariableDeclaration","scope":4163,"src":"3129:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4160,"name":"bool","nodeType":"ElementaryTypeName","src":"3129:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3100:43:23"},"src":"3077:67:23"},{"anonymous":false,"eventSelector":"149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa","id":4173,"name":"RewardDistributed","nameLocation":"3156:17:23","nodeType":"EventDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"3200:5:23","nodeType":"VariableDeclaration","scope":4173,"src":"3184:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4164,"name":"address","nodeType":"ElementaryTypeName","src":"3184:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4167,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"3224:10:23","nodeType":"VariableDeclaration","scope":4173,"src":"3216:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4169,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3253:6:23","nodeType":"VariableDeclaration","scope":4173,"src":"3245:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3245:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4171,"indexed":false,"mutability":"mutable","name":"isWinner","nameLocation":"3275:8:23","nodeType":"VariableDeclaration","scope":4173,"src":"3270:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4170,"name":"bool","nodeType":"ElementaryTypeName","src":"3270:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3173:117:23"},"src":"3150:141:23"},{"anonymous":false,"eventSelector":"a0c8eda28ab82fe28c2bcaa48a1ce2b5eac8dbed005a6e8eb62398577e908d5c","id":4179,"name":"ExchangePoints","nameLocation":"3303:14:23","nodeType":"EventDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3334:4:23","nodeType":"VariableDeclaration","scope":4179,"src":"3318:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4177,"indexed":false,"mutability":"mutable","name":"points","nameLocation":"3348:6:23","nodeType":"VariableDeclaration","scope":4179,"src":"3340:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:38:23"},"src":"3297:59:23"},{"functionSelector":"7c7b66f7","id":4184,"implemented":false,"kind":"function","modifiers":[],"name":"exchangePoints","nameLocation":"3409:14:23","nodeType":"FunctionDefinition","parameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"amount","nameLocation":"3432:6:23","nodeType":"VariableDeclaration","scope":4184,"src":"3424:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3424:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3423:16:23"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[],"src":"3448:0:23"},"scope":4358,"src":"3400:49:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"47734892","id":4191,"implemented":false,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"3466:14:23","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"3481:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"3481:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3480:9:23"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"3513:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3512:9:23"},"scope":4358,"src":"3457:65:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e16c790","id":4198,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVotingRights","nameLocation":"3539:19:23","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"userAddress","nameLocation":"3567:11:23","nodeType":"VariableDeclaration","scope":4198,"src":"3559:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4192,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3558:21:23"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"3603:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3603:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3602:9:23"},"scope":4358,"src":"3530:82:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b6b55f25","id":4203,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3633:7:23","nodeType":"FunctionDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"amount","nameLocation":"3649:6:23","nodeType":"VariableDeclaration","scope":4203,"src":"3641:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3640:16:23"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[],"src":"3665:0:23"},"scope":4358,"src":"3624:42:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbebdd25","id":4210,"implemented":false,"kind":"function","modifiers":[],"name":"submitProposalForReview","nameLocation":"3720:23:23","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"amount","nameLocation":"3752:6:23","nodeType":"VariableDeclaration","scope":4210,"src":"3744:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:16:23"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4210,"src":"3778:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:9:23"},"scope":4358,"src":"3711:76:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3257917a","id":4224,"implemented":false,"kind":"function","modifiers":[],"name":"createProposalWithOptions","nameLocation":"3852:25:23","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"proposalDescription","nameLocation":"3902:19:23","nodeType":"VariableDeclaration","scope":4224,"src":"3888:33:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4211,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"optionDescriptions","nameLocation":"3948:18:23","nodeType":"VariableDeclaration","scope":4224,"src":"3932:34:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4213,"name":"string","nodeType":"ElementaryTypeName","src":"3932:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4214,"nodeType":"ArrayTypeName","src":"3932:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"amount","nameLocation":"3982:6:23","nodeType":"VariableDeclaration","scope":4224,"src":"3977:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint","nodeType":"ElementaryTypeName","src":"3977:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"endtime","nameLocation":"4007:7:23","nodeType":"VariableDeclaration","scope":4224,"src":"3999:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3877:144:23"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"4040:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4039:9:23"},"scope":4358,"src":"3843:206:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a46188ad","id":4242,"implemented":false,"kind":"function","modifiers":[],"name":"processUserStakedProposal","nameLocation":"4111:25:23","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"userAddress","nameLocation":"4155:11:23","nodeType":"VariableDeclaration","scope":4242,"src":"4147:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4225,"name":"address","nodeType":"ElementaryTypeName","src":"4147:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"proposalDescription","nameLocation":"4191:19:23","nodeType":"VariableDeclaration","scope":4242,"src":"4177:33:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4227,"name":"string","nodeType":"ElementaryTypeName","src":"4177:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"stakeAmount","nameLocation":"4229:11:23","nodeType":"VariableDeclaration","scope":4242,"src":"4221:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4221:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"optionDescriptions","nameLocation":"4267:18:23","nodeType":"VariableDeclaration","scope":4242,"src":"4251:34:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4231,"name":"string","nodeType":"ElementaryTypeName","src":"4251:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4232,"nodeType":"ArrayTypeName","src":"4251:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"stakeIndex","nameLocation":"4304:10:23","nodeType":"VariableDeclaration","scope":4242,"src":"4296:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"endtime","nameLocation":"4333:7:23","nodeType":"VariableDeclaration","scope":4242,"src":"4325:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4325:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4136:211:23"},"returnParameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"4366:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4366:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4365:9:23"},"scope":4358,"src":"4102:273:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":4247,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"4427:8:23","nodeType":"FunctionDefinition","parameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"_amount","nameLocation":"4444:7:23","nodeType":"VariableDeclaration","scope":4247,"src":"4436:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4436:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4435:17:23"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[],"src":"4461:0:23"},"scope":4358,"src":"4418:44:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bcfc4429","id":4254,"implemented":false,"kind":"function","modifiers":[],"name":"getAvailableWithdrawBalance","nameLocation":"4535:27:23","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"user","nameLocation":"4581:4:23","nodeType":"VariableDeclaration","scope":4254,"src":"4573:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4562:30:23"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4254,"src":"4616:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4615:9:23"},"scope":4358,"src":"4526:99:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"401853b7","id":4261,"implemented":false,"kind":"function","modifiers":[],"name":"getProposalStatus","nameLocation":"4681:17:23","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"_proposalId","nameLocation":"4717:11:23","nodeType":"VariableDeclaration","scope":4261,"src":"4709:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4698:37:23"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"4759:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4258,"name":"bool","nodeType":"ElementaryTypeName","src":"4759:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4758:6:23"},"scope":4358,"src":"4672:93:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8a6655d6","id":4270,"implemented":false,"kind":"function","modifiers":[],"name":"vote","nameLocation":"4818:4:23","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"_proposalId","nameLocation":"4841:11:23","nodeType":"VariableDeclaration","scope":4270,"src":"4833:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4833:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"_optionId","nameLocation":"4871:9:23","nodeType":"VariableDeclaration","scope":4270,"src":"4863:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4863:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"_amount","nameLocation":"4899:7:23","nodeType":"VariableDeclaration","scope":4270,"src":"4891:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4891:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4822:91:23"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[],"src":"4922:0:23"},"scope":4358,"src":"4809:114:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f9fb98a","id":4275,"implemented":false,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"4975:18:23","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[],"src":"4993:2:23"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"5019:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint","nodeType":"ElementaryTypeName","src":"5019:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5018:6:23"},"scope":4358,"src":"4966:59:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8456cb59","id":4278,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"5069:5:23","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[],"src":"5074:2:23"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[],"src":"5085:0:23"},"scope":4358,"src":"5060:26:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3f4ba83a","id":4281,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"5132:7:23","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[],"src":"5139:2:23"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[],"src":"5150:0:23"},"scope":4358,"src":"5123:28:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0ff7c4a5","id":4295,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVotingHistory","nameLocation":"5204:20:23","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"_user","nameLocation":"5243:5:23","nodeType":"VariableDeclaration","scope":4295,"src":"5235:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"5235:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5224:31:23"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"5306:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4286,"nodeType":"ArrayTypeName","src":"5306:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"5324:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4289,"nodeType":"ArrayTypeName","src":"5324:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"5342:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ArrayTypeName","src":"5342:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5305:54:23"},"scope":4358,"src":"5195:165:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"44c7c867","id":4300,"implemented":false,"kind":"function","modifiers":[],"name":"proposalsLength","nameLocation":"5423:15:23","nodeType":"FunctionDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[],"src":"5438:2:23"},"returnParameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4300,"src":"5464:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5464:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5463:9:23"},"scope":4358,"src":"5414:59:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"517a6257","id":4307,"implemented":false,"kind":"function","modifiers":[],"name":"getOptionsCount","nameLocation":"5539:15:23","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"proposalId","nameLocation":"5573:10:23","nodeType":"VariableDeclaration","scope":4307,"src":"5565:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5565:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5554:36:23"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"5614:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5614:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5613:9:23"},"scope":4358,"src":"5530:93:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"63e9a61d","id":4316,"implemented":false,"kind":"function","modifiers":[],"name":"getOptionVoteCount","nameLocation":"5695:18:23","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"proposalId","nameLocation":"5732:10:23","nodeType":"VariableDeclaration","scope":4316,"src":"5724:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5724:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"optionIndex","nameLocation":"5761:11:23","nodeType":"VariableDeclaration","scope":4316,"src":"5753:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5753:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5713:66:23"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4316,"src":"5803:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5803:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5802:9:23"},"scope":4358,"src":"5686:126:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe10226d","id":4321,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentProposalId","nameLocation":"5872:20:23","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[],"src":"5892:2:23"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"5918:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5918:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5917:9:23"},"scope":4358,"src":"5863:64:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc4d6345","id":4330,"implemented":false,"kind":"function","modifiers":[],"name":"handleStakeRelease","nameLocation":"5976:18:23","nodeType":"FunctionDefinition","parameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"user","nameLocation":"6013:4:23","nodeType":"VariableDeclaration","scope":4330,"src":"6005:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4322,"name":"address","nodeType":"ElementaryTypeName","src":"6005:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4325,"mutability":"mutable","name":"stakeIndex","nameLocation":"6036:10:23","nodeType":"VariableDeclaration","scope":4330,"src":"6028:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4327,"mutability":"mutable","name":"penalizeStake","nameLocation":"6062:13:23","nodeType":"VariableDeclaration","scope":4330,"src":"6057:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4326,"name":"bool","nodeType":"ElementaryTypeName","src":"6057:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5994:88:23"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[],"src":"6091:0:23"},"scope":4358,"src":"5967:125:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e13b7b31","id":4337,"implemented":false,"kind":"function","modifiers":[],"name":"settleRewards","nameLocation":"6132:13:23","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"proposalId","nameLocation":"6164:10:23","nodeType":"VariableDeclaration","scope":4337,"src":"6156:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"winningOptionId","nameLocation":"6193:15:23","nodeType":"VariableDeclaration","scope":4337,"src":"6185:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6185:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6145:70:23"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[],"src":"6224:0:23"},"scope":4358,"src":"6123:102:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9d678da1","id":4342,"implemented":false,"kind":"function","modifiers":[],"name":"settleFundsForAverageQuality","nameLocation":"6287:28:23","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"_proposalId","nameLocation":"6324:11:23","nodeType":"VariableDeclaration","scope":4342,"src":"6316:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"6316:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6315:21:23"},"returnParameters":{"id":4341,"nodeType":"ParameterList","parameters":[],"src":"6345:0:23"},"scope":4358,"src":"6278:68:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a24f8bd5","id":4347,"implemented":false,"kind":"function","modifiers":[],"name":"verifyComplianceAndExpectations","nameLocation":"6406:31:23","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"_proposalId","nameLocation":"6456:11:23","nodeType":"VariableDeclaration","scope":4347,"src":"6448:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6437:37:23"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[],"src":"6483:0:23"},"scope":4358,"src":"6397:87:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"df63ba91","id":4352,"implemented":false,"kind":"function","modifiers":[],"name":"checkQualityComplianceBelowExpectations","nameLocation":"6563:39:23","nodeType":"FunctionDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"_proposalId","nameLocation":"6621:11:23","nodeType":"VariableDeclaration","scope":4352,"src":"6613:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6602:37:23"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[],"src":"6648:0:23"},"scope":4358,"src":"6554:95:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6bff47e6","id":4357,"implemented":false,"kind":"function","modifiers":[],"name":"deactivateProposal","nameLocation":"6696:18:23","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"_proposalId","nameLocation":"6723:11:23","nodeType":"VariableDeclaration","scope":4357,"src":"6715:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"6715:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6714:21:23"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[],"src":"6744:0:23"},"scope":4358,"src":"6687:58:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4359,"src":"63:6685:23","usedErrors":[],"usedEvents":[4027,4033,4039,4049,4062,4074,4082,4090,4098,4106,4114,4120,4126,4141,4151,4157,4163,4173,4179]}],"src":"33:6717:23"}},"contracts/ProposalLogic.sol":{"id":24,"ast":{"absolutePath":"contracts/ProposalLogic.sol","exportedSymbols":{"Context":[1182],"Counters":[3900],"IERC20":[902],"IProposalLogic":[4358],"Math":[3721],"Ownable":[147],"Pausable":[1367],"ProposalLogic":[6065],"ReentrancyGuard":[1436]},"id":6066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:24"},{"absolutePath":"contracts/IProposalLogic.sol","file":"./IProposalLogic.sol","id":4361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":4359,"src":"59:30:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":903,"src":"91:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":3722,"src":"149:53:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":1437,"src":"204:59:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":4365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":1368,"src":"265:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":148,"src":"319:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Counters.sol","file":"./Counters.sol","id":4367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":3901,"src":"373:24:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4368,"name":"IProposalLogic","nameLocations":["427:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":4358,"src":"427:14:24"},"id":4369,"nodeType":"InheritanceSpecifier","src":"427:14:24"},{"baseName":{"id":4370,"name":"ReentrancyGuard","nameLocations":["443:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"443:15:24"},"id":4371,"nodeType":"InheritanceSpecifier","src":"443:15:24"},{"baseName":{"id":4372,"name":"Pausable","nameLocations":["460:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"460:8:24"},"id":4373,"nodeType":"InheritanceSpecifier","src":"460:8:24"},{"baseName":{"id":4374,"name":"Ownable","nameLocations":["470:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"470:7:24"},"id":4375,"nodeType":"InheritanceSpecifier","src":"470:7:24"}],"canonicalName":"ProposalLogic","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6065,"linearizedBaseContracts":[6065,147,1367,1182,1436,4358],"name":"ProposalLogic","nameLocation":"410:13:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4382,"mutability":"constant","name":"MAX_UINT256","nameLocation":"529:11:24","nodeType":"VariableDeclaration","scope":6065,"src":"512:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"548:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"548:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"543:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"543:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"557:3:24","memberName":"max","nodeType":"MemberAccess","src":"543:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"b8fcf937","id":4384,"mutability":"mutable","name":"myToken","nameLocation":"582:7:24","nodeType":"VariableDeclaration","scope":6065,"src":"567:22:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4383,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"global":false,"id":4388,"libraryName":{"id":4385,"name":"Counters","nameLocations":["633:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"633:8:24"},"nodeType":"UsingForDirective","src":"627:36:24","typeName":{"id":4387,"nodeType":"UserDefinedTypeName","pathNode":{"id":4386,"name":"Counters.Counter","nameLocations":["646:8:24","655:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"646:16:24"},"referencedDeclaration":3832,"src":"646:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":4391,"mutability":"mutable","name":"_proposalIds","nameLocation":"694:12:24","nodeType":"VariableDeclaration","scope":6065,"src":"669:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter"},"typeName":{"id":4390,"nodeType":"UserDefinedTypeName","pathNode":{"id":4389,"name":"Counters.Counter","nameLocations":["669:8:24","678:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"669:16:24"},"referencedDeclaration":3832,"src":"669:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":4394,"mutability":"mutable","name":"_UserStakeIdCounter","nameLocation":"738:19:24","nodeType":"VariableDeclaration","scope":6065,"src":"713:44:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter"},"typeName":{"id":4393,"nodeType":"UserDefinedTypeName","pathNode":{"id":4392,"name":"Counters.Counter","nameLocations":["713:8:24","722:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"713:16:24"},"referencedDeclaration":3832,"src":"713:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"48e395a3","id":4397,"mutability":"mutable","name":"UserStakerAddresses","nameLocation":"821:19:24","nodeType":"VariableDeclaration","scope":6065,"src":"804:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4395,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4396,"nodeType":"ArrayTypeName","src":"804:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ed4516c9","id":4400,"mutability":"mutable","name":"UserSstakeAmounts","nameLocation":"889:17:24","nodeType":"VariableDeclaration","scope":6065,"src":"872:34:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4399,"nodeType":"ArrayTypeName","src":"872:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":4404,"mutability":"mutable","name":"proposals","nameLocation":"931:9:24","nodeType":"VariableDeclaration","scope":6065,"src":"913:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal[]"},"typeName":{"baseType":{"id":4402,"nodeType":"UserDefinedTypeName","pathNode":{"id":4401,"name":"Proposal","nameLocations":["913:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"913:8:24"},"referencedDeclaration":3998,"src":"913:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"id":4403,"nodeType":"ArrayTypeName","src":"913:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.Proposal[]"}},"visibility":"public"},{"constant":false,"functionSelector":"0f174002","id":4408,"mutability":"mutable","name":"votingEndTimes","nameLocation":"1000:14:24","nodeType":"VariableDeclaration","scope":6065,"src":"965:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":4407,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"965:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":4412,"mutability":"mutable","name":"balances","nameLocation":"1078:8:24","nodeType":"VariableDeclaration","scope":6065,"src":"1043:43:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4411,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4409,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1043:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ab89437c","id":4417,"mutability":"mutable","name":"proposalVoters","nameLocation":"1130:14:24","nodeType":"VariableDeclaration","scope":6065,"src":"1093:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":4416,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4414,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4415,"nodeType":"ArrayTypeName","src":"1112:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"23ee36bb","id":4423,"mutability":"mutable","name":"userVotingHistory","nameLocation":"1191:17:24","nodeType":"VariableDeclaration","scope":6065,"src":"1151:57:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.VoteRecord[])"},"typeName":{"id":4422,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1151:32:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.VoteRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4420,"nodeType":"UserDefinedTypeName","pathNode":{"id":4419,"name":"VoteRecord","nameLocations":["1170:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"1170:10:24"},"referencedDeclaration":4019,"src":"1170:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_storage_ptr","typeString":"struct IProposalLogic.VoteRecord"}},"id":4421,"nodeType":"ArrayTypeName","src":"1170:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f4c5bdf","id":4429,"mutability":"mutable","name":"stakesForUser","nameLocation":"1287:13:24","nodeType":"VariableDeclaration","scope":6065,"src":"1252:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$4012_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.Stake[])"},"typeName":{"id":4428,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1252:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$4012_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.Stake[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4426,"nodeType":"UserDefinedTypeName","pathNode":{"id":4425,"name":"Stake","nameLocations":["1271:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":4012,"src":"1271:5:24"},"referencedDeclaration":4012,"src":"1271:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$4012_storage_ptr","typeString":"struct IProposalLogic.Stake"}},"id":4427,"nodeType":"ArrayTypeName","src":"1271:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$4012_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.Stake[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a93b4ba1","id":4435,"mutability":"mutable","name":"proposalOptions","nameLocation":"1343:15:24","nodeType":"VariableDeclaration","scope":6065,"src":"1307:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option[])"},"typeName":{"id":4434,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1307:28:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4432,"nodeType":"UserDefinedTypeName","pathNode":{"id":4431,"name":"Option","nameLocations":["1326:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":4003,"src":"1326:6:24"},"referencedDeclaration":4003,"src":"1326:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_storage_ptr","typeString":"struct IProposalLogic.Option"}},"id":4433,"nodeType":"ArrayTypeName","src":"1326:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.Option[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c134d66","id":4441,"mutability":"mutable","name":"voters","nameLocation":"1453:6:24","nodeType":"VariableDeclaration","scope":6065,"src":"1401:58:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":4440,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1401:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4439,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1420:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4438,"name":"bool","nodeType":"ElementaryTypeName","src":"1439:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"dd5c0da2","id":4445,"mutability":"mutable","name":"proposalTokenDeposits","nameLocation":"1540:21:24","nodeType":"VariableDeclaration","scope":6065,"src":"1505:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4444,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4442,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1505:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"1940278f","id":4449,"mutability":"mutable","name":"usedVotingRights","nameLocation":"1633:16:24","nodeType":"VariableDeclaration","scope":6065,"src":"1598:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4448,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4446,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1598:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"3a3ddd91","id":4455,"mutability":"mutable","name":"votingRecords","nameLocation":"1711:13:24","nodeType":"VariableDeclaration","scope":6065,"src":"1656:68:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4450,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1656:47:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4453,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1675:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"44daa227","id":4461,"mutability":"mutable","name":"added_proposal","nameLocation":"1786:14:24","nodeType":"VariableDeclaration","scope":6065,"src":"1731:69:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4460,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1731:47:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4459,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1750:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"eda0b804","id":4466,"mutability":"mutable","name":"voterAddressesByProposal","nameLocation":"1844:24:24","nodeType":"VariableDeclaration","scope":6065,"src":"1807:61:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":4465,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1807:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4463,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4464,"nodeType":"ArrayTypeName","src":"1826:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"e2b239c8","id":4471,"mutability":"mutable","name":"optionIdsByProposal","nameLocation":"1912:19:24","nodeType":"VariableDeclaration","scope":6065,"src":"1875:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":4470,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1875:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1894:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ArrayTypeName","src":"1894:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a9bc3711","id":4476,"mutability":"mutable","name":"voteCountsByProposal","nameLocation":"1975:20:24","nodeType":"VariableDeclaration","scope":6065,"src":"1938:57:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":4475,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1938:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4474,"nodeType":"ArrayTypeName","src":"1957:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"f496baa0","id":4482,"mutability":"mutable","name":"voterIndexInProposal","nameLocation":"2057:20:24","nodeType":"VariableDeclaration","scope":6065,"src":"2002:75:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4481,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4477,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2002:47:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4480,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2021:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":4495,"nodeType":"Block","src":"2169:37:24","statements":[{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"2180:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4492,"name":"_myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2190:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2180:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4494,"nodeType":"ExpressionStatement","src":"2180:18:24"}]},"id":4496,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4487,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2157:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2161:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2157:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4489,"kind":"baseConstructorSpecifier","modifierName":{"id":4486,"name":"Ownable","nameLocations":["2149:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2149:7:24"},"nodeType":"ModifierInvocation","src":"2149:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"_myToken","nameLocation":"2139:8:24","nodeType":"VariableDeclaration","scope":4496,"src":"2131:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4483,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2130:18:24"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[],"src":"2169:0:24"},"scope":6065,"src":"2119:87:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4191],"body":{"id":4507,"nodeType":"Block","src":"2316:47:24","statements":[{"expression":{"baseExpression":{"id":4503,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2334:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4505,"indexExpression":{"id":4504,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"2343:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2334:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4502,"id":4506,"nodeType":"Return","src":"2327:28:24"}]},"functionSelector":"47734892","id":4508,"implemented":true,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"2250:14:24","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"userAddress","nameLocation":"2273:11:24","nodeType":"VariableDeclaration","scope":4508,"src":"2265:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4497,"name":"address","nodeType":"ElementaryTypeName","src":"2265:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2264:21:24"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4508,"src":"2307:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2306:9:24"},"scope":6065,"src":"2241:122:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4198],"body":{"id":4519,"nodeType":"Block","src":"2487:55:24","statements":[{"expression":{"baseExpression":{"id":4515,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"2505:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4517,"indexExpression":{"id":4516,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"2522:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2505:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4514,"id":4518,"nodeType":"Return","src":"2498:36:24"}]},"functionSelector":"6e16c790","id":4520,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotingRights","nameLocation":"2416:19:24","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"userAddress","nameLocation":"2444:11:24","nodeType":"VariableDeclaration","scope":4520,"src":"2436:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2435:21:24"},"returnParameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4520,"src":"2478:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2478:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:9:24"},"scope":6065,"src":"2407:135:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4203],"body":{"id":4559,"nodeType":"Block","src":"2617:255:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4530,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2679:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2683:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2679:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4534,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2699:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_ProposalLogic_$6065","typeString":"contract ProposalLogic"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProposalLogic_$6065","typeString":"contract ProposalLogic"}],"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2691:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:24","typeDescriptions":{}}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2691:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"2706:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4527,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"2657:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4526,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2650:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2666:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":901,"src":"2650:28:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2728:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":4525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2628:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:128:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4540,"nodeType":"ExpressionStatement","src":"2628:128:24"},{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4541,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2767:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4544,"indexExpression":{"expression":{"id":4542,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2776:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2780:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2776:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2767:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4545,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2790:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4548,"indexExpression":{"expression":{"id":4546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2799:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2803:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2799:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2790:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"2813:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2790:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2767:52:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ExpressionStatement","src":"2767:52:24"},{"eventCall":{"arguments":[{"expression":{"id":4554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2845:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2849:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2845:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"2857:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2835:9:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2835:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4558,"nodeType":"EmitStatement","src":"2830:34:24"}]},"functionSelector":"b6b55f25","id":4560,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2586:7:24","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"amount","nameLocation":"2602:6:24","nodeType":"VariableDeclaration","scope":4560,"src":"2594:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2594:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2593:16:24"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[],"src":"2617:0:24"},"scope":6065,"src":"2577:295:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4210],"body":{"id":4658,"nodeType":"Block","src":"2954:1064:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4568,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2973:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4571,"indexExpression":{"expression":{"id":4569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2982:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2986:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2982:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2973:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4572,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2997:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2973:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3005:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2965:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2965:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"ExpressionStatement","src":"2965:63:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4578,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3061:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4581,"indexExpression":{"expression":{"id":4579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3070:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3074:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3070:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3061:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4582,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3084:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4585,"indexExpression":{"expression":{"id":4583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3101:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3105:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3101:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3084:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3061:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3116:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3061:61:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3137:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3039:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3039:131:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4591,"nodeType":"ExpressionStatement","src":"3039:131:24"},{"assignments":[4593],"declarations":[{"constant":false,"id":4593,"mutability":"mutable","name":"unlockTime","nameLocation":"3189:10:24","nodeType":"VariableDeclaration","scope":4658,"src":"3181:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4598,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3202:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3208:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3202:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3220:6:24","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"3202:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3181:45:24"},{"assignments":[4600],"declarations":[{"constant":false,"id":4600,"mutability":"mutable","name":"User_stakeIndex","nameLocation":"3270:15:24","nodeType":"VariableDeclaration","scope":4658,"src":"3262:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4604,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4601,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"3288:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3308:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"3288:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3832_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3288:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3262:55:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4605,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"3328:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3348:9:24","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"3328:29:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3832_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3328:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4609,"nodeType":"ExpressionStatement","src":"3328:31:24"},{"assignments":[4611],"declarations":[{"constant":false,"id":4611,"mutability":"mutable","name":"isWagered","nameLocation":"3454:9:24","nodeType":"VariableDeclaration","scope":4658,"src":"3449:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4610,"name":"bool","nodeType":"ElementaryTypeName","src":"3449:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4612,"nodeType":"VariableDeclarationStatement","src":"3449:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3478:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3478:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4632,"nodeType":"Block","src":"3597:44:24","statements":[{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"3612:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3624:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3612:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4631,"nodeType":"ExpressionStatement","src":"3612:17:24"}]},"id":4633,"nodeType":"IfStatement","src":"3474:167:24","trueBody":{"id":4627,"nodeType":"Block","src":"3490:101:24","statements":[{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"3505:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3517:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3505:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4619,"nodeType":"ExpressionStatement","src":"3505:16:24"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4620,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"3536:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4623,"indexExpression":{"expression":{"id":4621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3558:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3562:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3558:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3536:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3573:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3536:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"3536:43:24"}]}},{"expression":{"arguments":[{"expression":{"id":4637,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3678:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3682:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3678:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4634,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"3653:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3673:4:24","memberName":"push","nodeType":"MemberAccess","src":"3653:24:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4640,"nodeType":"ExpressionStatement","src":"3653:36:24"},{"expression":{"arguments":[{"id":4644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3723:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4641,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3700:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3718:4:24","memberName":"push","nodeType":"MemberAccess","src":"3700:22:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3700:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4646,"nodeType":"ExpressionStatement","src":"3700:30:24"},{"eventCall":{"arguments":[{"expression":{"id":4648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3779:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3783:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3779:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4650,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3804:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4651,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"3825:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4652,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"3849:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4653,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"3874:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4647,"name":"DepositForProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"3746:18:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256,uint256)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3746:154:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4655,"nodeType":"EmitStatement","src":"3741:159:24"},{"expression":{"id":4656,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"3918:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4566,"id":4657,"nodeType":"Return","src":"3911:22:24"}]},"functionSelector":"bbebdd25","id":4659,"implemented":true,"kind":"function","modifiers":[],"name":"submitProposalForReview","nameLocation":"2889:23:24","nodeType":"FunctionDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"amount","nameLocation":"2921:6:24","nodeType":"VariableDeclaration","scope":4659,"src":"2913:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2912:16:24"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4659,"src":"2945:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2945:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2944:9:24"},"scope":6065,"src":"2880:1138:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4224],"body":{"id":4753,"nodeType":"Block","src":"4240:1186:24","statements":[{"assignments":[4676],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"proposalId","nameLocation":"4284:10:24","nodeType":"VariableDeclaration","scope":4753,"src":"4276:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"4276:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4680,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4677,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4297:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4310:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"4297:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3832_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4276:43:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4681,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4354:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4367:9:24","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"4354:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3832_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4354:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4685,"nodeType":"ExpressionStatement","src":"4354:24:24"},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"isWagered","nameLocation":"4414:9:24","nodeType":"VariableDeclaration","scope":4753,"src":"4409:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4686,"name":"bool","nodeType":"ElementaryTypeName","src":"4409:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"4426:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4435:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4426:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4409:27:24"},{"assignments":[4693],"declarations":[{"constant":false,"id":4693,"mutability":"mutable","name":"unlockTime","nameLocation":"4457:10:24","nodeType":"VariableDeclaration","scope":4753,"src":"4449:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4694,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4470:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4476:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"4470:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"4489:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4499:6:24","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"4489:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4488:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4470:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4449:57:24"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4618:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4622:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4618:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4708,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4660:19:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4709,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"4711:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4744:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4778:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":4712,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"4813:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4713,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4850:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"4580:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$3998_storage_ptr_$","typeString":"type(struct IProposalLogic.Proposal storage pointer)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4608:8:24","4647:11:24","4698:11:24","4736:6:24","4767:9:24","4802:9:24","4841:7:24"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"4580:296:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_memory_ptr","typeString":"struct IProposalLogic.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$3998_memory_ptr","typeString":"struct IProposalLogic.Proposal memory"}],"expression":{"id":4702,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4551:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4561:4:24","memberName":"push","nodeType":"MemberAccess","src":"4551:14:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$3998_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage_ptr_$","typeString":"function (struct IProposalLogic.Proposal storage ref[] storage pointer,struct IProposalLogic.Proposal storage ref)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:336:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"4551:336:24"},{"body":{"id":4740,"nodeType":"Block","src":"4987:151:24","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":4733,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5074:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4735,"indexExpression":{"id":4734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"5093:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5074:21:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5108:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4732,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"5053:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$4003_storage_ptr_$","typeString":"type(struct IProposalLogic.Option storage pointer)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5061:11:24","5097:9:24"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"5053:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_memory_ptr","typeString":"struct IProposalLogic.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$4003_memory_ptr","typeString":"struct IProposalLogic.Option memory"}],"expression":{"baseExpression":{"id":4728,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"5002:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":4730,"indexExpression":{"id":4729,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"5018:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5002:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5030:4:24","memberName":"push","nodeType":"MemberAccess","src":"5002:32:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_ptr_$_t_struct$_Option_$4003_storage_$returns$__$attached_to$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_ptr_$","typeString":"function (struct IProposalLogic.Option storage ref[] storage pointer,struct IProposalLogic.Option storage ref)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:124:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4739,"nodeType":"ExpressionStatement","src":"5002:124:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4951:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4722,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"4955:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4974:6:24","memberName":"length","nodeType":"MemberAccess","src":"4955:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4951:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4741,"initializationExpression":{"assignments":[4718],"declarations":[{"constant":false,"id":4718,"mutability":"mutable","name":"i","nameLocation":"4944:1:24","nodeType":"VariableDeclaration","scope":4741,"src":"4939:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint","nodeType":"ElementaryTypeName","src":"4939:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4720,"initialValue":{"hexValue":"30","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4948:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4939:10:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4982:3:24","subExpression":{"id":4725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4982:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"4982:3:24"},"nodeType":"ForStatement","src":"4934:204:24"},{"eventCall":{"arguments":[{"expression":{"id":4743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5220:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5224:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5220:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4745,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"5245:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4746,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5270:19:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4747,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5304:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":4748,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"5337:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4742,"name":"ProposalAndOptionsSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"5178:27:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,string memory[] memory,uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5178:180:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4750,"nodeType":"EmitStatement","src":"5173:185:24"},{"expression":{"id":4751,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"5378:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4674,"id":4752,"nodeType":"Return","src":"5371:17:24"}]},"functionSelector":"3257917a","id":4754,"implemented":true,"kind":"function","modifiers":[{"id":4671,"kind":"modifierInvocation","modifierName":{"id":4670,"name":"onlyOwner","nameLocations":["4212:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4212:9:24"},"nodeType":"ModifierInvocation","src":"4212:9:24"}],"name":"createProposalWithOptions","nameLocation":"4035:25:24","nodeType":"FunctionDefinition","parameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"proposalDescription","nameLocation":"4085:19:24","nodeType":"VariableDeclaration","scope":4754,"src":"4071:33:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4660,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"optionDescriptions","nameLocation":"4131:18:24","nodeType":"VariableDeclaration","scope":4754,"src":"4115:34:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4662,"name":"string","nodeType":"ElementaryTypeName","src":"4115:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4663,"nodeType":"ArrayTypeName","src":"4115:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"amount","nameLocation":"4165:6:24","nodeType":"VariableDeclaration","scope":4754,"src":"4160:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4665,"name":"uint","nodeType":"ElementaryTypeName","src":"4160:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"endtime","nameLocation":"4190:7:24","nodeType":"VariableDeclaration","scope":4754,"src":"4182:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"4182:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:144:24"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4754,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":6065,"src":"4026:1400:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4242],"body":{"id":4888,"nodeType":"Block","src":"5715:1535:24","statements":[{"assignments":[4775],"declarations":[{"constant":false,"id":4775,"mutability":"mutable","name":"UserAddress","nameLocation":"5734:11:24","nodeType":"VariableDeclaration","scope":4888,"src":"5726:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4779,"initialValue":{"baseExpression":{"id":4776,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5748:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4778,"indexExpression":{"id":4777,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"5768:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:31:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5726:53:24"},{"assignments":[4781],"declarations":[{"constant":false,"id":4781,"mutability":"mutable","name":"UserAmount","nameLocation":"5798:10:24","nodeType":"VariableDeclaration","scope":4888,"src":"5790:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4785,"initialValue":{"baseExpression":{"id":4782,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"5811:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4784,"indexExpression":{"id":4783,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"5829:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5811:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5790:50:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"UserAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5859:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4788,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"5874:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5859:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468652061646472657373206973206e6f742073616d65","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5887:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""},"value":"the address is not same"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""}],"id":4786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5851:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5851:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4792,"nodeType":"ExpressionStatement","src":"5851:62:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"5946:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4795,"name":"UserAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"5961:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5946:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b656420616d6f756e7420646f6573206e6f74206d61746368206f7220696e73756666696369656e74","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5986:46:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""},"value":"Staked amount does not match or insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""}],"id":4793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5924:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:119:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4799,"nodeType":"ExpressionStatement","src":"5924:119:24"},{"assignments":[4801],"declarations":[{"constant":false,"id":4801,"mutability":"mutable","name":"unlockTime","nameLocation":"6064:10:24","nodeType":"VariableDeclaration","scope":4888,"src":"6056:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"6056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4809,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4802,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6077:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6083:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"6077:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"6096:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6106:6:24","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"6096:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6095:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6077:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6056:57:24"},{"assignments":[4811],"declarations":[{"constant":false,"id":4811,"mutability":"mutable","name":"isWagered","nameLocation":"6163:9:24","nodeType":"VariableDeclaration","scope":4888,"src":"6158:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4810,"name":"bool","nodeType":"ElementaryTypeName","src":"6158:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4812,"nodeType":"VariableDeclarationStatement","src":"6158:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"6187:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6201:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6187:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4825,"nodeType":"Block","src":"6253:44:24","statements":[{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4821,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"6268:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6280:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6268:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4824,"nodeType":"ExpressionStatement","src":"6268:17:24"}]},"id":4826,"nodeType":"IfStatement","src":"6183:114:24","trueBody":{"id":4820,"nodeType":"Block","src":"6204:43:24","statements":[{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"6219:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6231:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6219:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4819,"nodeType":"ExpressionStatement","src":"6219:16:24"}]}},{"expression":{"arguments":[{"arguments":[{"id":4831,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6374:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4832,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"6417:19:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4833,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"6468:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6506:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6540:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":4836,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"6575:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4837,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"6612:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4830,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6336:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$3998_storage_ptr_$","typeString":"type(struct IProposalLogic.Proposal storage pointer)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6364:8:24","6404:11:24","6455:11:24","6498:6:24","6529:9:24","6564:9:24","6603:7:24"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"6336:302:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_memory_ptr","typeString":"struct IProposalLogic.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$3998_memory_ptr","typeString":"struct IProposalLogic.Proposal memory"}],"expression":{"id":4827,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"6307:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6317:4:24","memberName":"push","nodeType":"MemberAccess","src":"6307:14:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$3998_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage_ptr_$","typeString":"function (struct IProposalLogic.Proposal storage ref[] storage pointer,struct IProposalLogic.Proposal storage ref)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6307:342:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4840,"nodeType":"ExpressionStatement","src":"6307:342:24"},{"assignments":[4842],"declarations":[{"constant":false,"id":4842,"mutability":"mutable","name":"proposalId","nameLocation":"6670:10:24","nodeType":"VariableDeclaration","scope":4888,"src":"6662:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"6662:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4846,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4843,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"6683:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6696:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"6683:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3832_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6683:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6662:43:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4847,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"6740:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":4849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6753:9:24","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"6740:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3832_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6740:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4851,"nodeType":"ExpressionStatement","src":"6740:24:24"},{"body":{"id":4875,"nodeType":"Block","src":"6851:151:24","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":4868,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"6938:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4870,"indexExpression":{"id":4869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"6957:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6938:21:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6972:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4867,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"6917:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$4003_storage_ptr_$","typeString":"type(struct IProposalLogic.Option storage pointer)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6925:11:24","6961:9:24"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"6917:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_memory_ptr","typeString":"struct IProposalLogic.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$4003_memory_ptr","typeString":"struct IProposalLogic.Option memory"}],"expression":{"baseExpression":{"id":4863,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"6866:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":4865,"indexExpression":{"id":4864,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"6882:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6894:4:24","memberName":"push","nodeType":"MemberAccess","src":"6866:32:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_ptr_$_t_struct$_Option_$4003_storage_$returns$__$attached_to$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_ptr_$","typeString":"function (struct IProposalLogic.Option storage ref[] storage pointer,struct IProposalLogic.Option storage ref)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6866:124:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4874,"nodeType":"ExpressionStatement","src":"6866:124:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"6815:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4857,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"6819:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6838:6:24","memberName":"length","nodeType":"MemberAccess","src":"6819:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6815:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"initializationExpression":{"assignments":[4853],"declarations":[{"constant":false,"id":4853,"mutability":"mutable","name":"i","nameLocation":"6808:1:24","nodeType":"VariableDeclaration","scope":4876,"src":"6800:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"6800:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4855,"initialValue":{"hexValue":"30","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6812:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6800:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6846:3:24","subExpression":{"id":4860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"6846:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4862,"nodeType":"ExpressionStatement","src":"6846:3:24"},"nodeType":"ForStatement","src":"6795:207:24"},{"eventCall":{"arguments":[{"id":4878,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"7047:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4879,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"7073:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4880,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"7098:19:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4881,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7132:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4882,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"7158:18:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":4883,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"7191:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4877,"name":"ProposalForUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7017:15:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,string memory[] memory,uint256)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7017:195:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"EmitStatement","src":"7012:200:24"},{"expression":{"id":4886,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"7232:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4773,"id":4887,"nodeType":"Return","src":"7225:17:24"}]},"functionSelector":"a46188ad","id":4889,"implemented":true,"kind":"function","modifiers":[{"id":4770,"kind":"modifierInvocation","modifierName":{"id":4769,"name":"onlyOwner","nameLocations":["5687:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5687:9:24"},"nodeType":"ModifierInvocation","src":"5687:9:24"}],"name":"processUserStakedProposal","nameLocation":"5443:25:24","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"userAddress","nameLocation":"5487:11:24","nodeType":"VariableDeclaration","scope":4889,"src":"5479:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4755,"name":"address","nodeType":"ElementaryTypeName","src":"5479:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"proposalDescription","nameLocation":"5523:19:24","nodeType":"VariableDeclaration","scope":4889,"src":"5509:33:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4757,"name":"string","nodeType":"ElementaryTypeName","src":"5509:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4760,"mutability":"mutable","name":"stakeAmount","nameLocation":"5561:11:24","nodeType":"VariableDeclaration","scope":4889,"src":"5553:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5553:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4763,"mutability":"mutable","name":"optionDescriptions","nameLocation":"5599:18:24","nodeType":"VariableDeclaration","scope":4889,"src":"5583:34:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4761,"name":"string","nodeType":"ElementaryTypeName","src":"5583:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4762,"nodeType":"ArrayTypeName","src":"5583:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"stakeIndex","nameLocation":"5636:10:24","nodeType":"VariableDeclaration","scope":4889,"src":"5628:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"5628:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"endtime","nameLocation":"5665:7:24","nodeType":"VariableDeclaration","scope":4889,"src":"5657:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5468:211:24"},"returnParameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4889,"src":"5706:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"5706:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5705:9:24"},"scope":6065,"src":"5434:1816:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4184],"body":{"id":4914,"nodeType":"Block","src":"7304:197:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7323:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7332:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7323:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f696e7473206d7573742062652067726561746572207468616e207a65726f","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7335:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_888ac6140e55689af008cd0fe0bb0528a29e1f99dc09d54949db482c83b4c3a7","typeString":"literal_string \"Points must be greater than zero\""},"value":"Points must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_888ac6140e55689af008cd0fe0bb0528a29e1f99dc09d54949db482c83b4c3a7","typeString":"literal_string \"Points must be greater than zero\""}],"id":4894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7315:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7315:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4900,"nodeType":"ExpressionStatement","src":"7315:55:24"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4901,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"7412:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4904,"indexExpression":{"expression":{"id":4902,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7421:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7425:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7421:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7412:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4905,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7437:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7412:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"7412:31:24"},{"eventCall":{"arguments":[{"expression":{"id":4909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7474:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7478:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7474:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4911,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7486:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4908,"name":"ExchangePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"7459:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7459:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4913,"nodeType":"EmitStatement","src":"7454:39:24"}]},"functionSelector":"7c7b66f7","id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"exchangePoints","nameLocation":"7267:14:24","nodeType":"FunctionDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"points","nameLocation":"7290:6:24","nodeType":"VariableDeclaration","scope":4915,"src":"7282:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"7282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7281:16:24"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[],"src":"7304:0:24"},"scope":6065,"src":"7258:243:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4247],"body":{"id":4970,"nodeType":"Block","src":"7564:632:24","statements":[{"assignments":[4923],"declarations":[{"constant":false,"id":4923,"mutability":"mutable","name":"availableBalance","nameLocation":"7635:16:24","nodeType":"VariableDeclaration","scope":4970,"src":"7627:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7627:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4928,"initialValue":{"arguments":[{"expression":{"id":4925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7682:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7686:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7682:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4924,"name":"getAvailableWithdrawBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"7654:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7654:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7627:66:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"7726:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4931,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"7746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7726:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820617661696c61626c652062616c616e636520746f207769746864726177","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7768:42:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""},"value":"Not enough available balance to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""}],"id":4929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7704:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:117:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"7704:117:24"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7924:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7924:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4943,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"7936:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4938,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"7906:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4937,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"7899:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7899:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7915:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"7899:24:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7899:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7959:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":4936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7877:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7877:110:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4947,"nodeType":"ExpressionStatement","src":"7877:110:24"},{"expression":{"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4948,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8025:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4951,"indexExpression":{"expression":{"id":4949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8034:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8038:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8034:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8025:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4952,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8048:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4955,"indexExpression":{"expression":{"id":4953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8057:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8061:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8057:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8048:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4956,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"8071:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8025:53:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"nodeType":"ExpressionStatement","src":"8025:53:24"},{"eventCall":{"arguments":[{"expression":{"id":4961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8146:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8150:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8146:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4963,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"8158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4964,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8167:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4967,"indexExpression":{"expression":{"id":4965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8176:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8180:6:24","memberName":"sender","nodeType":"MemberAccess","src":"8176:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8167:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"name":"WithdrawalDetailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"8127:18:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8127:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"EmitStatement","src":"8122:66:24"}]},"functionSelector":"2e1a7d4d","id":4971,"implemented":true,"kind":"function","modifiers":[{"id":4920,"kind":"modifierInvocation","modifierName":{"id":4919,"name":"nonReentrant","nameLocations":["7551:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1400,"src":"7551:12:24"},"nodeType":"ModifierInvocation","src":"7551:12:24"}],"name":"withdraw","nameLocation":"7518:8:24","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"_amount","nameLocation":"7535:7:24","nodeType":"VariableDeclaration","scope":4971,"src":"7527:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"7527:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7526:17:24"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[],"src":"7564:0:24"},"scope":6065,"src":"7509:687:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4254],"body":{"id":5011,"nodeType":"Block","src":"8301:386:24","statements":[{"assignments":[4979],"declarations":[{"constant":false,"id":4979,"mutability":"mutable","name":"totalBalance","nameLocation":"8320:12:24","nodeType":"VariableDeclaration","scope":5011,"src":"8312:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"8312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4983,"initialValue":{"baseExpression":{"id":4980,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8335:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4982,"indexExpression":{"id":4981,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"8344:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8335:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8312:37:24"},{"assignments":[4985],"declarations":[{"constant":false,"id":4985,"mutability":"mutable","name":"lockedForVoting","nameLocation":"8368:15:24","nodeType":"VariableDeclaration","scope":5011,"src":"8360:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"8360:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4989,"initialValue":{"baseExpression":{"id":4986,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8386:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4988,"indexExpression":{"id":4987,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"8403:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8386:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8360:48:24"},{"assignments":[4991],"declarations":[{"constant":false,"id":4991,"mutability":"mutable","name":"lockedInProposals","nameLocation":"8427:17:24","nodeType":"VariableDeclaration","scope":5011,"src":"8419:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8419:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4995,"initialValue":{"baseExpression":{"id":4992,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8447:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4994,"indexExpression":{"id":4993,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"8469:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8447:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8419:55:24"},{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"totalLocked","nameLocation":"8553:11:24","nodeType":"VariableDeclaration","scope":5011,"src":"8545:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"8545:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"lockedForVoting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"8567:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4999,"name":"lockedInProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"8585:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8567:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8545:57:24"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"8620:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5003,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"8635:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8620:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8678:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8620:59:24","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"8649:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5006,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"8664:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8649:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4977,"id":5010,"nodeType":"Return","src":"8613:66:24"}]},"functionSelector":"bcfc4429","id":5012,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableWithdrawBalance","nameLocation":"8213:27:24","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"user","nameLocation":"8259:4:24","nodeType":"VariableDeclaration","scope":5012,"src":"8251:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4972,"name":"address","nodeType":"ElementaryTypeName","src":"8251:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8240:30:24"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5012,"src":"8292:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"8292:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8291:9:24"},"scope":6065,"src":"8204:483:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4261],"body":{"id":5029,"nodeType":"Block","src":"8770:102:24","statements":[{"assignments":[5021],"declarations":[{"constant":false,"id":5021,"mutability":"mutable","name":"proposal","nameLocation":"8798:8:24","nodeType":"VariableDeclaration","scope":5029,"src":"8781:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":5020,"nodeType":"UserDefinedTypeName","pathNode":{"id":5019,"name":"Proposal","nameLocations":["8781:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"8781:8:24"},"referencedDeclaration":3998,"src":"8781:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":5025,"initialValue":{"baseExpression":{"id":5022,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8809:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5024,"indexExpression":{"id":5023,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"8819:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8809:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8781:50:24"},{"expression":{"expression":{"id":5026,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"8849:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8858:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"8849:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5018,"id":5028,"nodeType":"Return","src":"8842:22:24"}]},"functionSelector":"401853b7","id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"getProposalStatus","nameLocation":"8704:17:24","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"_proposalId","nameLocation":"8730:11:24","nodeType":"VariableDeclaration","scope":5030,"src":"8722:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"8722:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8721:21:24"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5030,"src":"8764:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5016,"name":"bool","nodeType":"ElementaryTypeName","src":"8764:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8763:6:24"},"scope":6065,"src":"8695:177:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4270],"body":{"id":5205,"nodeType":"Block","src":"9021:1959:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"9040:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5043,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9054:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9064:6:24","memberName":"length","nodeType":"MemberAccess","src":"9054:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9040:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c20646f6573206e6f74206578697374","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9072:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""},"value":"The proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""}],"id":5041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9032:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9032:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5048,"nodeType":"ExpressionStatement","src":"9032:70:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9135:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":5051,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"9147:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5053,"indexExpression":{"id":5052,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"9163:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9147:28:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9176:6:24","memberName":"length","nodeType":"MemberAccess","src":"9147:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9135:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865206f7074696f6e20646f6573206e6f74206578697374","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9197:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""},"value":"The option does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""}],"id":5049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9113:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9113:122:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5058,"nodeType":"ExpressionStatement","src":"9113:122:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9268:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9274:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"9268:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":5062,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9286:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5064,"indexExpression":{"id":5063,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"9296:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9286:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"id":5065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9309:7:24","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"9286:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9268:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520766f74696e6720706572696f6420666f7220746869732070726f706f73616c2068617320656e646564","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9331:47:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_997011783ffbafebb4613a45aaaaab5d364ceff48b376fc3349ed53193c7cba7","typeString":"literal_string \"The voting period for this proposal has ended\""},"value":"The voting period for this proposal has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_997011783ffbafebb4613a45aaaaab5d364ceff48b376fc3349ed53193c7cba7","typeString":"literal_string \"The voting period for this proposal has ended\""}],"id":5059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9246:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:143:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5069,"nodeType":"ExpressionStatement","src":"9246:143:24"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5071,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9408:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5073,"indexExpression":{"id":5072,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"9418:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9408:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"id":5074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9431:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"9408:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c206973206e6f7420616374697665","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9439:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""},"value":"The proposal is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""}],"id":5070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9400:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9400:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5077,"nodeType":"ExpressionStatement","src":"9400:68:24"},{"assignments":[5079],"declarations":[{"constant":false,"id":5079,"mutability":"mutable","name":"remainingVotingRights","nameLocation":"9584:21:24","nodeType":"VariableDeclaration","scope":5205,"src":"9576:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"9576:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5094,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5080,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"9608:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5083,"indexExpression":{"expression":{"id":5081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9617:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9617:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9608:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":5084,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9644:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5087,"indexExpression":{"expression":{"id":5085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9661:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9665:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9661:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9644:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9608:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":5089,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"9688:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5092,"indexExpression":{"expression":{"id":5090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9710:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9714:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9710:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9688:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9608:113:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9576:145:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"remainingVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"9740:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5097,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"9765:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9740:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720726967687473","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9774:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""},"value":"Insufficient voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""}],"id":5095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9732:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9732:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"ExpressionStatement","src":"9732:71:24"},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5102,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9852:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5105,"indexExpression":{"expression":{"id":5103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9869:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9873:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9869:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9852:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5106,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9883:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5109,"indexExpression":{"expression":{"id":5107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9900:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9904:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9900:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9883:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5110,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"9914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9852:69:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"9852:69:24"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5114,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"10036:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5117,"indexExpression":{"id":5115,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10052:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10036:28:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5118,"indexExpression":{"id":5116,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"10065:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10036:39:24","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_storage","typeString":"struct IProposalLogic.Option storage ref"}},"id":5119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10076:9:24","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"10036:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5120,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"10089:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10036:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"10036:60:24"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5123,"name":"votingRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"10107:13:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5127,"indexExpression":{"expression":{"id":5124,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10121:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10125:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10121:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10107:25:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5128,"indexExpression":{"id":5126,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10133:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10107:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5129,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"10149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10107:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"10107:49:24"},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5132,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"10201:6:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":5136,"indexExpression":{"expression":{"id":5133,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10208:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10212:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10208:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10201:18:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5137,"indexExpression":{"id":5135,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10220:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10201:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10235:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10201:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5140,"nodeType":"ExpressionStatement","src":"10201:38:24"},{"expression":{"arguments":[{"arguments":[{"id":5147,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10347:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5148,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"10360:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5149,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"10371:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5146,"name":"VoteRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"10336:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VoteRecord_$4019_storage_ptr_$","typeString":"type(struct IProposalLogic.VoteRecord storage pointer)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10336:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_memory_ptr","typeString":"struct IProposalLogic.VoteRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VoteRecord_$4019_memory_ptr","typeString":"struct IProposalLogic.VoteRecord memory"}],"expression":{"baseExpression":{"id":5141,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"10287:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.VoteRecord storage ref[] storage ref)"}},"id":5144,"indexExpression":{"expression":{"id":5142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10305:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10309:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10305:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10287:29:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage ref"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10317:4:24","memberName":"push","nodeType":"MemberAccess","src":"10287:34:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr_$_t_struct$_VoteRecord_$4019_storage_$returns$__$attached_to$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr_$","typeString":"function (struct IProposalLogic.VoteRecord storage ref[] storage pointer,struct IProposalLogic.VoteRecord storage ref)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10287:103:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5152,"nodeType":"ExpressionStatement","src":"10287:103:24"},{"expression":{"arguments":[{"expression":{"id":5157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10468:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10472:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10468:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":5153,"name":"proposalVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"10435:14:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5155,"indexExpression":{"id":5154,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10450:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10435:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10463:4:24","memberName":"push","nodeType":"MemberAccess","src":"10435:32:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10435:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5160,"nodeType":"ExpressionStatement","src":"10435:44:24"},{"expression":{"arguments":[{"expression":{"id":5165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10592:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10596:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10592:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":5161,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"10549:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5163,"indexExpression":{"id":5162,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10574:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10549:37:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10587:4:24","memberName":"push","nodeType":"MemberAccess","src":"10549:42:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10549:54:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"ExpressionStatement","src":"10549:54:24"},{"expression":{"arguments":[{"id":5173,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"10652:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5169,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"10614:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5171,"indexExpression":{"id":5170,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10634:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10614:32:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10647:4:24","memberName":"push","nodeType":"MemberAccess","src":"10614:37:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10614:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5175,"nodeType":"ExpressionStatement","src":"10614:48:24"},{"expression":{"arguments":[{"id":5180,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"10712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5176,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"10673:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5178,"indexExpression":{"id":5177,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10694:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10673:33:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10707:4:24","memberName":"push","nodeType":"MemberAccess","src":"10673:38:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10673:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"ExpressionStatement","src":"10673:47:24"},{"expression":{"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5183,"name":"voterIndexInProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"10782:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5187,"indexExpression":{"expression":{"id":5184,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10803:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10807:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10803:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10782:32:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5188,"indexExpression":{"id":5186,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10815:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10782:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5189,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"10843:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5191,"indexExpression":{"id":5190,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10868:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10843:37:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10881:6:24","memberName":"length","nodeType":"MemberAccess","src":"10843:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10843:61:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10782:122:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5196,"nodeType":"ExpressionStatement","src":"10782:122:24"},{"eventCall":{"arguments":[{"expression":{"id":5198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10928:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10932:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10928:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5200,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"10940:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5201,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"10953:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5202,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"10964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"10922:5:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10922:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5204,"nodeType":"EmitStatement","src":"10917:55:24"}]},"functionSelector":"8a6655d6","id":5206,"implemented":true,"kind":"function","modifiers":[{"id":5039,"kind":"modifierInvocation","modifierName":{"id":5038,"name":"whenNotPaused","nameLocations":["9007:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":1292,"src":"9007:13:24"},"nodeType":"ModifierInvocation","src":"9007:13:24"}],"name":"vote","nameLocation":"8904:4:24","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"_proposalId","nameLocation":"8927:11:24","nodeType":"VariableDeclaration","scope":5206,"src":"8919:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"8919:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"_optionId","nameLocation":"8957:9:24","nodeType":"VariableDeclaration","scope":5206,"src":"8949:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8949:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5036,"mutability":"mutable","name":"_amount","nameLocation":"8985:7:24","nodeType":"VariableDeclaration","scope":5206,"src":"8977:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8977:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8908:91:24"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[],"src":"9021:0:24"},"scope":6065,"src":"8895:2085:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4275],"body":{"id":5221,"nodeType":"Block","src":"11103:66:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":5217,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11155:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_ProposalLogic_$6065","typeString":"contract ProposalLogic"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProposalLogic_$6065","typeString":"contract ProposalLogic"}],"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5215,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:24","typeDescriptions":{}}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5212,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"11128:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5211,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"11121:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11121:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11137:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":859,"src":"11121:25:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11121:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5210,"id":5220,"nodeType":"Return","src":"11114:47:24"}]},"functionSelector":"6f9fb98a","id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"11055:18:24","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[],"src":"11073:2:24"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"11097:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint","nodeType":"ElementaryTypeName","src":"11097:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11096:6:24"},"scope":6065,"src":"11046:123:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4278],"body":{"id":5230,"nodeType":"Block","src":"11211:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5227,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"11222:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11222:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5229,"nodeType":"ExpressionStatement","src":"11222:8:24"}]},"functionSelector":"8456cb59","id":5231,"implemented":true,"kind":"function","modifiers":[{"id":5225,"kind":"modifierInvocation","modifierName":{"id":5224,"name":"onlyOwner","nameLocations":["11201:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11201:9:24"},"nodeType":"ModifierInvocation","src":"11201:9:24"}],"name":"pause","nameLocation":"11186:5:24","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[],"src":"11191:2:24"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[],"src":"11211:0:24"},"scope":6065,"src":"11177:61:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4281],"body":{"id":5239,"nodeType":"Block","src":"11282:29:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5236,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"11293:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11293:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"ExpressionStatement","src":"11293:10:24"}]},"functionSelector":"3f4ba83a","id":5240,"implemented":true,"kind":"function","modifiers":[{"id":5234,"kind":"modifierInvocation","modifierName":{"id":5233,"name":"onlyOwner","nameLocations":["11272:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11272:9:24"},"nodeType":"ModifierInvocation","src":"11272:9:24"}],"name":"unpause","nameLocation":"11255:7:24","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[],"src":"11262:2:24"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[],"src":"11282:0:24"},"scope":6065,"src":"11246:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4295],"body":{"id":5330,"nodeType":"Block","src":"11567:446:24","statements":[{"assignments":[5258],"declarations":[{"constant":false,"id":5258,"mutability":"mutable","name":"records","nameLocation":"11599:7:24","nodeType":"VariableDeclaration","scope":5330,"src":"11578:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord[]"},"typeName":{"baseType":{"id":5256,"nodeType":"UserDefinedTypeName","pathNode":{"id":5255,"name":"VoteRecord","nameLocations":["11578:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"11578:10:24"},"referencedDeclaration":4019,"src":"11578:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_storage_ptr","typeString":"struct IProposalLogic.VoteRecord"}},"id":5257,"nodeType":"ArrayTypeName","src":"11578:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord[]"}},"visibility":"internal"}],"id":5262,"initialValue":{"baseExpression":{"id":5259,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"11609:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_$","typeString":"mapping(address => struct IProposalLogic.VoteRecord storage ref[] storage ref)"}},"id":5261,"indexExpression":{"id":5260,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"11627:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11609:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11578:55:24"},{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5263,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"11644:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5267,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11672:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11680:6:24","memberName":"length","nodeType":"MemberAccess","src":"11672:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11658:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11662:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5265,"nodeType":"ArrayTypeName","src":"11662:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"11644:43:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5271,"nodeType":"ExpressionStatement","src":"11644:43:24"},{"expression":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"11698:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5276,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11724:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11732:6:24","memberName":"length","nodeType":"MemberAccess","src":"11724:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11710:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5274,"nodeType":"ArrayTypeName","src":"11714:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11710:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"11698:41:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5280,"nodeType":"ExpressionStatement","src":"11698:41:24"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5281,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"11750:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5285,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11774:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11782:6:24","memberName":"length","nodeType":"MemberAccess","src":"11774:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11760:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"11764:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ArrayTypeName","src":"11764:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11760:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"11750:39:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5289,"nodeType":"ExpressionStatement","src":"11750:39:24"},{"body":{"id":5328,"nodeType":"Block","src":"11847:159:24","statements":[{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5301,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"11862:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5303,"indexExpression":{"id":5302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11874:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11862:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5304,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11879:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5306,"indexExpression":{"id":5305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11887:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11879:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_storage","typeString":"struct IProposalLogic.VoteRecord storage ref"}},"id":5307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11890:10:24","memberName":"proposalId","nodeType":"MemberAccess","referencedDeclaration":4014,"src":"11879:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11862:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"11862:38:24"},{"expression":{"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5310,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"11915:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5312,"indexExpression":{"id":5311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11925:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11915:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5313,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11930:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5315,"indexExpression":{"id":5314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11938:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11930:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_storage","typeString":"struct IProposalLogic.VoteRecord storage ref"}},"id":5316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11941:8:24","memberName":"optionId","nodeType":"MemberAccess","referencedDeclaration":4016,"src":"11930:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11915:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5318,"nodeType":"ExpressionStatement","src":"11915:34:24"},{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5319,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"11964:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5321,"indexExpression":{"id":5320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11972:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11964:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5322,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11977:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5324,"indexExpression":{"id":5323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11985:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11977:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$4019_storage","typeString":"struct IProposalLogic.VoteRecord storage ref"}},"id":5325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11988:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"11977:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11964:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"11964:30:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11822:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5295,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"11826:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$4019_storage_$dyn_storage_ptr","typeString":"struct IProposalLogic.VoteRecord storage ref[] storage pointer"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11834:6:24","memberName":"length","nodeType":"MemberAccess","src":"11826:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11822:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"initializationExpression":{"assignments":[5291],"declarations":[{"constant":false,"id":5291,"mutability":"mutable","name":"i","nameLocation":"11815:1:24","nodeType":"VariableDeclaration","scope":5329,"src":"11807:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"11807:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5293,"initialValue":{"hexValue":"30","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11819:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11807:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11842:3:24","subExpression":{"id":5298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11842:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5300,"nodeType":"ExpressionStatement","src":"11842:3:24"},"nodeType":"ForStatement","src":"11802:204:24"}]},"functionSelector":"0ff7c4a5","id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotingHistory","nameLocation":"11328:20:24","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"_user","nameLocation":"11367:5:24","nodeType":"VariableDeclaration","scope":5331,"src":"11359:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5241,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11348:31:24"},"returnParameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"proposalIds","nameLocation":"11459:11:24","nodeType":"VariableDeclaration","scope":5331,"src":"11442:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"11442:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5245,"nodeType":"ArrayTypeName","src":"11442:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"optionIds","nameLocation":"11502:9:24","nodeType":"VariableDeclaration","scope":5331,"src":"11485:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11485:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5248,"nodeType":"ArrayTypeName","src":"11485:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5252,"mutability":"mutable","name":"amounts","nameLocation":"11543:7:24","nodeType":"VariableDeclaration","scope":5331,"src":"11526:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"11526:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5251,"nodeType":"ArrayTypeName","src":"11526:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11427:134:24"},"scope":6065,"src":"11319:694:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4300],"body":{"id":5339,"nodeType":"Block","src":"12078:42:24","statements":[{"expression":{"expression":{"id":5336,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"12096:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12106:6:24","memberName":"length","nodeType":"MemberAccess","src":"12096:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5335,"id":5338,"nodeType":"Return","src":"12089:23:24"}]},"functionSelector":"44c7c867","id":5340,"implemented":true,"kind":"function","modifiers":[],"name":"proposalsLength","nameLocation":"12030:15:24","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[],"src":"12045:2:24"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5340,"src":"12069:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"12069:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12068:9:24"},"scope":6065,"src":"12021:99:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4307],"body":{"id":5352,"nodeType":"Block","src":"12203:60:24","statements":[{"expression":{"expression":{"baseExpression":{"id":5347,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"12221:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5349,"indexExpression":{"id":5348,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"12237:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12221:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12249:6:24","memberName":"length","nodeType":"MemberAccess","src":"12221:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5346,"id":5351,"nodeType":"Return","src":"12214:41:24"}]},"functionSelector":"517a6257","id":5353,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionsCount","nameLocation":"12137:15:24","nodeType":"FunctionDefinition","parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"proposalId","nameLocation":"12161:10:24","nodeType":"VariableDeclaration","scope":5353,"src":"12153:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"12153:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12152:20:24"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5353,"src":"12194:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"12194:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12193:9:24"},"scope":6065,"src":"12128:135:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4316],"body":{"id":5387,"nodeType":"Block","src":"12395:285:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"12414:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5364,"name":"proposalsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"12427:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12427:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12414:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12446:26:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":5362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12406:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5369,"nodeType":"ExpressionStatement","src":"12406:67:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"12506:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":5372,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"12520:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5374,"indexExpression":{"id":5373,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"12536:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12520:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12548:6:24","memberName":"length","nodeType":"MemberAccess","src":"12520:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12506:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7074696f6e20646f6573206e6f742065786973742e","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12569:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""},"value":"Option does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""}],"id":5370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12484:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:120:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"ExpressionStatement","src":"12484:120:24"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":5380,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"12622:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5382,"indexExpression":{"id":5381,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"12638:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12622:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5384,"indexExpression":{"id":5383,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"12650:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12622:40:24","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_storage","typeString":"struct IProposalLogic.Option storage ref"}},"id":5385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12663:9:24","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"12622:50:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5361,"id":5386,"nodeType":"Return","src":"12615:57:24"}]},"functionSelector":"63e9a61d","id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionVoteCount","nameLocation":"12280:18:24","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"proposalId","nameLocation":"12317:10:24","nodeType":"VariableDeclaration","scope":5388,"src":"12309:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"optionIndex","nameLocation":"12346:11:24","nodeType":"VariableDeclaration","scope":5388,"src":"12338:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"12338:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12298:66:24"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5388,"src":"12386:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"12386:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12385:9:24"},"scope":6065,"src":"12271:409:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4321],"body":{"id":5416,"nodeType":"Block","src":"12750:501:24","statements":[{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"proposalArrayLength","nameLocation":"12769:19:24","nodeType":"VariableDeclaration","scope":5416,"src":"12761:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5397,"initialValue":{"expression":{"id":5395,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"12791:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12801:6:24","memberName":"length","nodeType":"MemberAccess","src":"12791:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12761:46:24"},{"assignments":[5399],"declarations":[{"constant":false,"id":5399,"mutability":"mutable","name":"currentCounterValue","nameLocation":"12826:19:24","nodeType":"VariableDeclaration","scope":5416,"src":"12818:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5403,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5400,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"12848:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3832_storage","typeString":"struct Counters.Counter storage ref"}},"id":5401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12861:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"12848:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3832_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3832_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12848:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12818:52:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"proposalArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"12887:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5405,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"12910:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12887:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5414,"nodeType":"Block","src":"13079:165:24","statements":[{"expression":{"id":5412,"name":"MAX_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"13178:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5392,"id":5413,"nodeType":"Return","src":"13171:18:24"}]},"id":5415,"nodeType":"IfStatement","src":"12883:361:24","trueBody":{"id":5411,"nodeType":"Block","src":"12931:142:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"13038:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13060:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5392,"id":5410,"nodeType":"Return","src":"13031:30:24"}]}}]},"functionSelector":"fe10226d","id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentProposalId","nameLocation":"12697:20:24","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[],"src":"12717:2:24"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5417,"src":"12741:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"12741:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12740:9:24"},"scope":6065,"src":"12688:563:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4330],"body":{"id":5483,"nodeType":"Block","src":"13392:838:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"13462:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5430,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13475:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13493:6:24","memberName":"length","nodeType":"MemberAccess","src":"13475:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13462:37:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520696e646578206f7574206f6620626f756e6473","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13514:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""},"value":"Stake index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""}],"id":5428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13440:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13440:112:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5435,"nodeType":"ExpressionStatement","src":"13440:112:24"},{"assignments":[5437],"declarations":[{"constant":false,"id":5437,"mutability":"mutable","name":"amountToRelease","nameLocation":"13571:15:24","nodeType":"VariableDeclaration","scope":5483,"src":"13563:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"13563:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5441,"initialValue":{"baseExpression":{"id":5438,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13589:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5440,"indexExpression":{"id":5439,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"13607:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13589:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13563:55:24"},{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5442,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"13629:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5444,"indexExpression":{"id":5443,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"13651:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13629:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5445,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"13660:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13629:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5447,"nodeType":"ExpressionStatement","src":"13629:46:24"},{"condition":{"id":5448,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"13750:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5469,"nodeType":"IfStatement","src":"13746:257:24","trueBody":{"id":5468,"nodeType":"Block","src":"13765:238:24","statements":[{"assignments":[5450],"declarations":[{"constant":false,"id":5450,"mutability":"mutable","name":"penaltyAmount","nameLocation":"13788:13:24","nodeType":"VariableDeclaration","scope":5468,"src":"13780:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"13780:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5457,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"13805:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13823:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"13805:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13804:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13829:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"13804:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13780:52:24"},{"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"13866:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5459,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"13885:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13866:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5461,"nodeType":"ExpressionStatement","src":"13866:32:24"},{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5462,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"13929:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5464,"indexExpression":{"id":5463,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"13938:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13929:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5465,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"13947:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5467,"nodeType":"ExpressionStatement","src":"13929:31:24"}]}},{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5470,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"14056:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5472,"indexExpression":{"id":5471,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"14074:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14056:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14056:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5475,"nodeType":"ExpressionStatement","src":"14056:33:24"},{"eventCall":{"arguments":[{"id":5477,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"14173:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5478,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"14179:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5479,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"14191:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5480,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"14206:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"name":"StakeReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"14159:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14159:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5482,"nodeType":"EmitStatement","src":"14154:68:24"}]},"functionSelector":"cc4d6345","id":5484,"implemented":true,"kind":"function","modifiers":[{"id":5426,"kind":"modifierInvocation","modifierName":{"id":5425,"name":"onlyOwner","nameLocations":["13382:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13382:9:24"},"nodeType":"ModifierInvocation","src":"13382:9:24"}],"name":"handleStakeRelease","nameLocation":"13268:18:24","nodeType":"FunctionDefinition","parameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"user","nameLocation":"13305:4:24","nodeType":"VariableDeclaration","scope":5484,"src":"13297:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"13297:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"stakeIndex","nameLocation":"13328:10:24","nodeType":"VariableDeclaration","scope":5484,"src":"13320:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"13320:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5423,"mutability":"mutable","name":"penalizeStake","nameLocation":"13354:13:24","nodeType":"VariableDeclaration","scope":5484,"src":"13349:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5422,"name":"bool","nodeType":"ElementaryTypeName","src":"13349:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13286:88:24"},"returnParameters":{"id":5427,"nodeType":"ParameterList","parameters":[],"src":"13392:0:24"},"scope":6065,"src":"13259:971:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4337],"body":{"id":5694,"nodeType":"Block","src":"14361:2838:24","statements":[{"assignments":[5496],"declarations":[{"constant":false,"id":5496,"mutability":"mutable","name":"totalStake","nameLocation":"14377:10:24","nodeType":"VariableDeclaration","scope":5694,"src":"14372:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint","nodeType":"ElementaryTypeName","src":"14372:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5498,"initialValue":{"hexValue":"30","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14372:19:24"},{"assignments":[5501],"declarations":[{"constant":false,"id":5501,"mutability":"mutable","name":"proposal","nameLocation":"14419:8:24","nodeType":"VariableDeclaration","scope":5694,"src":"14402:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":5500,"nodeType":"UserDefinedTypeName","pathNode":{"id":5499,"name":"Proposal","nameLocations":["14402:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"14402:8:24"},"referencedDeclaration":3998,"src":"14402:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":5505,"initialValue":{"baseExpression":{"id":5502,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"14430:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5504,"indexExpression":{"id":5503,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"14440:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14430:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14402:49:24"},{"assignments":[5507],"declarations":[{"constant":false,"id":5507,"mutability":"mutable","name":"optionCount","nameLocation":"14525:11:24","nodeType":"VariableDeclaration","scope":5694,"src":"14520:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint","nodeType":"ElementaryTypeName","src":"14520:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5511,"initialValue":{"arguments":[{"id":5509,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"14555:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"name":"getOptionsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"14539:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14539:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14520:46:24"},{"body":{"id":5529,"nodeType":"Block","src":"14618:74:24","statements":[{"expression":{"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5522,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"14633:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5524,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"14666:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"14678:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5523,"name":"getOptionVoteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"14647:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14647:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14633:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5528,"nodeType":"ExpressionStatement","src":"14633:47:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"14596:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5517,"name":"optionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"14600:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14596:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5530,"initializationExpression":{"assignments":[5513],"declarations":[{"constant":false,"id":5513,"mutability":"mutable","name":"i","nameLocation":"14589:1:24","nodeType":"VariableDeclaration","scope":5530,"src":"14584:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint","nodeType":"ElementaryTypeName","src":"14584:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5515,"initialValue":{"hexValue":"30","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14593:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14584:10:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14613:3:24","subExpression":{"id":5519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"14613:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5521,"nodeType":"ExpressionStatement","src":"14613:3:24"},"nodeType":"ForStatement","src":"14579:113:24"},{"assignments":[5532],"declarations":[{"constant":false,"id":5532,"mutability":"mutable","name":"totalStakeExtractFee","nameLocation":"14986:20:24","nodeType":"VariableDeclaration","scope":5694,"src":"14981:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5531,"name":"uint","nodeType":"ElementaryTypeName","src":"14981:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5539,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"15010:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3830","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15023:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"15010:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15009:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15029:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"15009:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14981:51:24"},{"assignments":[5541],"declarations":[{"constant":false,"id":5541,"mutability":"mutable","name":"totalVotesForWinningOption","nameLocation":"15048:26:24","nodeType":"VariableDeclaration","scope":5694,"src":"15043:31:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint","nodeType":"ElementaryTypeName","src":"15043:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5548,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":5542,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"15077:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$4003_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IProposalLogic.Option storage ref[] storage ref)"}},"id":5544,"indexExpression":{"id":5543,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"15093:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15077:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$4003_storage_$dyn_storage","typeString":"struct IProposalLogic.Option storage ref[] storage ref"}},"id":5546,"indexExpression":{"id":5545,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"15119:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15077:68:24","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$4003_storage","typeString":"struct IProposalLogic.Option storage ref"}},"id":5547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15146:9:24","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"15077:78:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15043:112:24"},{"assignments":[5550],"declarations":[{"constant":false,"id":5550,"mutability":"mutable","name":"totalVotesForFailedOption","nameLocation":"15171:25:24","nodeType":"VariableDeclaration","scope":5694,"src":"15166:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint","nodeType":"ElementaryTypeName","src":"15166:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5554,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"totalStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"15199:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5552,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"15225:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15199:52:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15166:85:24"},{"expression":{"arguments":[{"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15286:16:24","subExpression":{"expression":{"id":5556,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"15287:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15296:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"15287:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206d75737420626520696e61637469766520746f20736574746c6520726577617264732e","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15317:46:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""},"value":"Proposal must be inactive to settle rewards."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""}],"id":5555,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15264:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15264:110:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"ExpressionStatement","src":"15264:110:24"},{"expression":{"arguments":[{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15393:19:24","subExpression":{"expression":{"id":5563,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"15394:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15403:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"15394:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265776172647320616c726561647920736574746c6564","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15414:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""},"value":"Rewards already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""}],"id":5562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15385:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15385:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5568,"nodeType":"ExpressionStatement","src":"15385:55:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"15461:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15490:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15461:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f74657320666f722077696e6e696e67206f7074696f6e","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15493:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""},"value":"No votes for winning option"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""}],"id":5569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15453:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15453:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5575,"nodeType":"ExpressionStatement","src":"15453:70:24"},{"body":{"id":5686,"nodeType":"Block","src":"15718:1407:24","statements":[{"assignments":[5590],"declarations":[{"constant":false,"id":5590,"mutability":"mutable","name":"voter","nameLocation":"15802:5:24","nodeType":"VariableDeclaration","scope":5686,"src":"15794:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"15794:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5596,"initialValue":{"baseExpression":{"baseExpression":{"id":5591,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"15810:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5593,"indexExpression":{"id":5592,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"15835:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15810:36:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5595,"indexExpression":{"id":5594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"15847:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15810:39:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15794:55:24"},{"assignments":[5598],"declarations":[{"constant":false,"id":5598,"mutability":"mutable","name":"optionId","nameLocation":"15872:8:24","nodeType":"VariableDeclaration","scope":5686,"src":"15864:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"15864:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5604,"initialValue":{"baseExpression":{"baseExpression":{"id":5599,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"15883:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5601,"indexExpression":{"id":5600,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"15903:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15883:31:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5603,"indexExpression":{"id":5602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"15915:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15883:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15864:53:24"},{"assignments":[5606],"declarations":[{"constant":false,"id":5606,"mutability":"mutable","name":"voteCount","nameLocation":"15940:9:24","nodeType":"VariableDeclaration","scope":5686,"src":"15932:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"15932:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5612,"initialValue":{"baseExpression":{"baseExpression":{"id":5607,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"15952:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5609,"indexExpression":{"id":5608,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"15973:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15952:32:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5611,"indexExpression":{"id":5610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"15985:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15952:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15932:55:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5614,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"16030:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5616,"indexExpression":{"id":5615,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"16047:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16030:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5617,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16057:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16030:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206c6f636b656420766f74696e6720726967687473","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16085:33:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""},"value":"Not enough locked voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""}],"id":5613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16004:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16004:129:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5621,"nodeType":"ExpressionStatement","src":"16004:129:24"},{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5622,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"16150:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5624,"indexExpression":{"id":5623,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"16167:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16150:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5625,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16177:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16150:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5627,"nodeType":"ExpressionStatement","src":"16150:36:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"16207:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5629,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"16219:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16207:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5684,"nodeType":"Block","src":"16735:379:24","statements":[{"assignments":[5659],"declarations":[{"constant":false,"id":5659,"mutability":"mutable","name":"voterPunish","nameLocation":"16762:11:24","nodeType":"VariableDeclaration","scope":5684,"src":"16754:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"16754:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16777:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5661,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"16789:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16777:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16776:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5664,"name":"totalVotesForFailedOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"16834:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16776:83:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16754:105:24"},{"expression":{"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5667,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"16923:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5668,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16938:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16923:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5670,"nodeType":"ExpressionStatement","src":"16923:24:24"},{"expression":{"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5671,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"16966:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5673,"indexExpression":{"id":5672,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"16975:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16966:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5674,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"16985:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16966:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"nodeType":"ExpressionStatement","src":"16966:30:24"},{"eventCall":{"arguments":[{"id":5678,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"17060:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5679,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"17067:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5680,"name":"voterPunish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"17079:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17092:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5677,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"17042:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17042:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5683,"nodeType":"EmitStatement","src":"17037:61:24"}]},"id":5685,"nodeType":"IfStatement","src":"16203:911:24","trueBody":{"id":5657,"nodeType":"Block","src":"16236:493:24","statements":[{"assignments":[5632],"declarations":[{"constant":false,"id":5632,"mutability":"mutable","name":"voterReward","nameLocation":"16326:11:24","nodeType":"VariableDeclaration","scope":5657,"src":"16318:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5639,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16341:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5634,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"16353:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16341:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16340:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5637,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"16398:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16340:84:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:106:24"},{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5640,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"16488:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5641,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"16503:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16488:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"16488:24:24"},{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5644,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"16582:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5646,"indexExpression":{"id":5645,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"16591:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16582:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5647,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"16601:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16582:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"16582:30:24"},{"eventCall":{"arguments":[{"id":5651,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"16676:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5652,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"16683:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5653,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"16695:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16708:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5650,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"16658:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16658:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"EmitStatement","src":"16653:60:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"15641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":5581,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"15645:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5583,"indexExpression":{"id":5582,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"15670:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15645:36:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15682:6:24","memberName":"length","nodeType":"MemberAccess","src":"15645:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15641:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5687,"initializationExpression":{"assignments":[5577],"declarations":[{"constant":false,"id":5577,"mutability":"mutable","name":"i","nameLocation":"15621:1:24","nodeType":"VariableDeclaration","scope":5687,"src":"15613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"15613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5579,"initialValue":{"hexValue":"30","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15625:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15613:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15703:3:24","subExpression":{"id":5586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"15703:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5588,"nodeType":"ExpressionStatement","src":"15703:3:24"},"nodeType":"ForStatement","src":"15594:1531:24"},{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5688,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"17166:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17175:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"17166:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17187:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17166:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"ExpressionStatement","src":"17166:25:24"}]},"functionSelector":"e13b7b31","id":5695,"implemented":true,"kind":"function","modifiers":[{"id":5491,"kind":"modifierInvocation","modifierName":{"id":5490,"name":"onlyOwner","nameLocations":["14338:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14338:9:24"},"nodeType":"ModifierInvocation","src":"14338:9:24"},{"id":5493,"kind":"modifierInvocation","modifierName":{"id":5492,"name":"nonReentrant","nameLocations":["14348:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1400,"src":"14348:12:24"},"nodeType":"ModifierInvocation","src":"14348:12:24"}],"name":"settleRewards","nameLocation":"14247:13:24","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"proposalId","nameLocation":"14279:10:24","nodeType":"VariableDeclaration","scope":5695,"src":"14271:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5488,"mutability":"mutable","name":"winningOptionId","nameLocation":"14308:15:24","nodeType":"VariableDeclaration","scope":5695,"src":"14300:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14300:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14260:70:24"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[],"src":"14361:0:24"},"scope":6065,"src":"14238:2961:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4342],"body":{"id":5811,"nodeType":"Block","src":"17326:1225:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"17345:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5704,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"17359:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17369:6:24","memberName":"length","nodeType":"MemberAccess","src":"17359:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17345:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17377:26:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":5702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17337:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17337:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5709,"nodeType":"ExpressionStatement","src":"17337:67:24"},{"assignments":[5712],"declarations":[{"constant":false,"id":5712,"mutability":"mutable","name":"proposal","nameLocation":"17432:8:24","nodeType":"VariableDeclaration","scope":5811,"src":"17415:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":5711,"nodeType":"UserDefinedTypeName","pathNode":{"id":5710,"name":"Proposal","nameLocations":["17415:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"17415:8:24"},"referencedDeclaration":3998,"src":"17415:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":5716,"initialValue":{"baseExpression":{"id":5713,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"17443:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5715,"indexExpression":{"id":5714,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"17453:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17443:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17415:50:24"},{"expression":{"arguments":[{"expression":{"id":5718,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17484:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17493:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"17484:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17501:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":5717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17476:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17476:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"ExpressionStatement","src":"17476:53:24"},{"expression":{"arguments":[{"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17548:19:24","subExpression":{"expression":{"id":5724,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17549:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17558:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"17549:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17569:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":5723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17540:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17540:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5729,"nodeType":"ExpressionStatement","src":"17540:53:24"},{"expression":{"arguments":[{"id":5731,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"17623:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"17604:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5733,"nodeType":"ExpressionStatement","src":"17604:31:24"},{"assignments":[5735],"declarations":[{"constant":false,"id":5735,"mutability":"mutable","name":"stakedAmount","nameLocation":"17693:12:24","nodeType":"VariableDeclaration","scope":5811,"src":"17685:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"17685:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5738,"initialValue":{"expression":{"id":5736,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17708:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17717:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"17708:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17685:43:24"},{"condition":{"expression":{"id":5739,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17743:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17752:9:24","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"17743:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5769,"nodeType":"Block","src":"18035:52:24","statements":[{"expression":{"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5763,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"18050:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18059:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"18050:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18071:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18050:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5768,"nodeType":"ExpressionStatement","src":"18050:25:24"}]},"id":5770,"nodeType":"IfStatement","src":"17739:348:24","trueBody":{"id":5762,"nodeType":"Block","src":"17763:266:24","statements":[{"assignments":[5742],"declarations":[{"constant":false,"id":5742,"mutability":"mutable","name":"currentDeposit","nameLocation":"17786:14:24","nodeType":"VariableDeclaration","scope":5762,"src":"17778:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"17778:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5747,"initialValue":{"baseExpression":{"id":5743,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"17803:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5746,"indexExpression":{"expression":{"id":5744,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17825:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17834:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"17825:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17803:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17778:65:24"},{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5748,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"17858:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5751,"indexExpression":{"expression":{"id":5749,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17880:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17889:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"17880:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17858:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17901:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5753,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"17933:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17901:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"17988:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5757,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"18005:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17988:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17901:116:24","trueExpression":{"hexValue":"30","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17967:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17858:159:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5761,"nodeType":"ExpressionStatement","src":"17858:159:24"}]}},{"assignments":[5772],"declarations":[{"constant":false,"id":5772,"mutability":"mutable","name":"serviceFee","nameLocation":"18105:10:24","nodeType":"VariableDeclaration","scope":5811,"src":"18097:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"18097:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5773,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"18119:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18128:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"18119:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18142:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"18119:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18118:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18147:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"18118:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18097:53:24"},{"assignments":[5782],"declarations":[{"constant":false,"id":5782,"mutability":"mutable","name":"reward","nameLocation":"18199:6:24","nodeType":"VariableDeclaration","scope":5811,"src":"18191:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"18191:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5790,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5783,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"18209:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18218:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"18209:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18232:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"18209:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18208:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18237:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"18208:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18191:49:24"},{"assignments":[5792],"declarations":[{"constant":false,"id":5792,"mutability":"mutable","name":"profit","nameLocation":"18284:6:24","nodeType":"VariableDeclaration","scope":5811,"src":"18276:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"18276:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5796,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"18293:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5794,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"18302:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18293:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18276:36:24"},{"expression":{"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5797,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"18325:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5800,"indexExpression":{"expression":{"id":5798,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"18334:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18343:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"18334:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18325:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5801,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"18356:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18325:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5803,"nodeType":"ExpressionStatement","src":"18325:37:24"},{"eventCall":{"arguments":[{"id":5805,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"18468:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5806,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"18494:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18503:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"18494:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5808,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"18526:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5804,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"18424:29:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18424:119:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5810,"nodeType":"EmitStatement","src":"18419:124:24"}]},"functionSelector":"9d678da1","id":5812,"implemented":true,"kind":"function","modifiers":[{"id":5700,"kind":"modifierInvocation","modifierName":{"id":5699,"name":"onlyOwner","nameLocations":["17316:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"17316:9:24"},"nodeType":"ModifierInvocation","src":"17316:9:24"}],"name":"settleFundsForAverageQuality","nameLocation":"17243:28:24","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"_proposalId","nameLocation":"17290:11:24","nodeType":"VariableDeclaration","scope":5812,"src":"17282:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"17282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17271:37:24"},"returnParameters":{"id":5701,"nodeType":"ParameterList","parameters":[],"src":"17326:0:24"},"scope":6065,"src":"17234:1317:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4347],"body":{"id":5928,"nodeType":"Block","src":"18654:1266:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5820,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"18673:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5821,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"18687:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18697:6:24","memberName":"length","nodeType":"MemberAccess","src":"18687:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18673:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18705:26:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":5819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18665:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18665:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5826,"nodeType":"ExpressionStatement","src":"18665:67:24"},{"assignments":[5829],"declarations":[{"constant":false,"id":5829,"mutability":"mutable","name":"proposal","nameLocation":"18760:8:24","nodeType":"VariableDeclaration","scope":5928,"src":"18743:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":5828,"nodeType":"UserDefinedTypeName","pathNode":{"id":5827,"name":"Proposal","nameLocations":["18743:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"18743:8:24"},"referencedDeclaration":3998,"src":"18743:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":5833,"initialValue":{"baseExpression":{"id":5830,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"18771:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5832,"indexExpression":{"id":5831,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"18781:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18771:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18743:50:24"},{"expression":{"arguments":[{"expression":{"id":5835,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"18812:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18821:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"18812:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18829:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":5834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18804:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18804:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5839,"nodeType":"ExpressionStatement","src":"18804:53:24"},{"expression":{"arguments":[{"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18876:19:24","subExpression":{"expression":{"id":5841,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"18877:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18886:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"18877:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18897:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":5840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18868:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18868:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5846,"nodeType":"ExpressionStatement","src":"18868:53:24"},{"expression":{"arguments":[{"id":5848,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"18951:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"18932:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18932:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5850,"nodeType":"ExpressionStatement","src":"18932:31:24"},{"assignments":[5852],"declarations":[{"constant":false,"id":5852,"mutability":"mutable","name":"stakedAmount","nameLocation":"19019:12:24","nodeType":"VariableDeclaration","scope":5928,"src":"19011:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"19011:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5855,"initialValue":{"expression":{"id":5853,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19034:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19043:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"19034:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19011:43:24"},{"condition":{"expression":{"id":5856,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19069:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19078:9:24","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"19069:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5886,"nodeType":"Block","src":"19402:52:24","statements":[{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5880,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19417:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19426:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"19417:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19438:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"19417:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"ExpressionStatement","src":"19417:25:24"}]},"id":5887,"nodeType":"IfStatement","src":"19065:389:24","trueBody":{"id":5879,"nodeType":"Block","src":"19089:307:24","statements":[{"assignments":[5859],"declarations":[{"constant":false,"id":5859,"mutability":"mutable","name":"currentDeposit","nameLocation":"19153:14:24","nodeType":"VariableDeclaration","scope":5879,"src":"19145:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"19145:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5864,"initialValue":{"baseExpression":{"id":5860,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"19170:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5863,"indexExpression":{"expression":{"id":5861,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19192:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19201:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"19192:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19170:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19145:65:24"},{"expression":{"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5865,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"19225:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5868,"indexExpression":{"expression":{"id":5866,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19247:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19256:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"19247:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19225:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"19268:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5870,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"19300:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19268:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"19355:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5874,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"19372:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19355:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19268:116:24","trueExpression":{"hexValue":"30","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19334:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19225:159:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5878,"nodeType":"ExpressionStatement","src":"19225:159:24"}]}},{"assignments":[5889],"declarations":[{"constant":false,"id":5889,"mutability":"mutable","name":"serviceFee","nameLocation":"19472:10:24","nodeType":"VariableDeclaration","scope":5928,"src":"19464:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5888,"name":"uint256","nodeType":"ElementaryTypeName","src":"19464:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5897,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5890,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19486:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19495:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"19486:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19509:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"19486:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19485:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19514:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"19485:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19464:53:24"},{"assignments":[5899],"declarations":[{"constant":false,"id":5899,"mutability":"mutable","name":"reward","nameLocation":"19566:6:24","nodeType":"VariableDeclaration","scope":5928,"src":"19558:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"19558:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5907,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5900,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19576:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19585:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"19576:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19599:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"19576:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19575:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19605:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"19575:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19558:50:24"},{"assignments":[5909],"declarations":[{"constant":false,"id":5909,"mutability":"mutable","name":"profit","nameLocation":"19653:6:24","nodeType":"VariableDeclaration","scope":5928,"src":"19645:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"19645:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5913,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5910,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"19662:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5911,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"19671:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19662:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19645:36:24"},{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5914,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"19694:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5917,"indexExpression":{"expression":{"id":5915,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19703:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19712:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"19703:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19694:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5918,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19725:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19694:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ExpressionStatement","src":"19694:37:24"},{"eventCall":{"arguments":[{"id":5922,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"19837:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5923,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"19863:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19872:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"19863:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5925,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19895:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"19793:29:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19793:119:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5927,"nodeType":"EmitStatement","src":"19788:124:24"}]},"functionSelector":"a24f8bd5","id":5929,"implemented":true,"kind":"function","modifiers":[{"id":5817,"kind":"modifierInvocation","modifierName":{"id":5816,"name":"onlyOwner","nameLocations":["18644:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"18644:9:24"},"nodeType":"ModifierInvocation","src":"18644:9:24"}],"name":"verifyComplianceAndExpectations","nameLocation":"18568:31:24","nodeType":"FunctionDefinition","parameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"_proposalId","nameLocation":"18618:11:24","nodeType":"VariableDeclaration","scope":5929,"src":"18610:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"18610:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18599:37:24"},"returnParameters":{"id":5818,"nodeType":"ParameterList","parameters":[],"src":"18654:0:24"},"scope":6065,"src":"18559:1361:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4352],"body":{"id":6029,"nodeType":"Block","src":"20031:1142:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"20050:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5938,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"20064:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20074:6:24","memberName":"length","nodeType":"MemberAccess","src":"20064:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20050:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20082:26:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":5936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20042:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20042:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5943,"nodeType":"ExpressionStatement","src":"20042:67:24"},{"assignments":[5946],"declarations":[{"constant":false,"id":5946,"mutability":"mutable","name":"proposal","nameLocation":"20137:8:24","nodeType":"VariableDeclaration","scope":6029,"src":"20120:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":5945,"nodeType":"UserDefinedTypeName","pathNode":{"id":5944,"name":"Proposal","nameLocations":["20120:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"20120:8:24"},"referencedDeclaration":3998,"src":"20120:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":5950,"initialValue":{"baseExpression":{"id":5947,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"20148:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":5949,"indexExpression":{"id":5948,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"20158:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20148:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20120:50:24"},{"expression":{"arguments":[{"expression":{"id":5952,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20189:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20198:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"20189:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20206:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":5951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20181:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20181:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"ExpressionStatement","src":"20181:53:24"},{"expression":{"arguments":[{"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20253:19:24","subExpression":{"expression":{"id":5958,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20254:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20263:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"20254:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20274:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":5957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20245:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20245:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5963,"nodeType":"ExpressionStatement","src":"20245:53:24"},{"expression":{"arguments":[{"id":5965,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"20328:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"20309:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20309:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"ExpressionStatement","src":"20309:31:24"},{"assignments":[5969],"declarations":[{"constant":false,"id":5969,"mutability":"mutable","name":"stakedAmount","nameLocation":"20398:12:24","nodeType":"VariableDeclaration","scope":6029,"src":"20390:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5972,"initialValue":{"expression":{"id":5970,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20413:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20422:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"20413:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20390:43:24"},{"condition":{"expression":{"id":5973,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20448:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20457:9:24","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"20448:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6003,"nodeType":"Block","src":"20781:52:24","statements":[{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5997,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20796:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20805:9:24","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"20796:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20817:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20796:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6002,"nodeType":"ExpressionStatement","src":"20796:25:24"}]},"id":6004,"nodeType":"IfStatement","src":"20444:389:24","trueBody":{"id":5996,"nodeType":"Block","src":"20468:307:24","statements":[{"assignments":[5976],"declarations":[{"constant":false,"id":5976,"mutability":"mutable","name":"currentDeposit","nameLocation":"20532:14:24","nodeType":"VariableDeclaration","scope":5996,"src":"20524:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"20524:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5981,"initialValue":{"baseExpression":{"id":5977,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"20549:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5980,"indexExpression":{"expression":{"id":5978,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20571:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20580:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"20571:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20549:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20524:65:24"},{"expression":{"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5982,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"20604:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5985,"indexExpression":{"expression":{"id":5983,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20626:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":5984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20635:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"20626:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20604:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"20647:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5987,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"20679:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20647:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"20734:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5991,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"20751:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20734:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20647:116:24","trueExpression":{"hexValue":"30","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20713:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20604:159:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5995,"nodeType":"ExpressionStatement","src":"20604:159:24"}]}},{"assignments":[6006],"declarations":[{"constant":false,"id":6006,"mutability":"mutable","name":"punishment","nameLocation":"20851:10:24","nodeType":"VariableDeclaration","scope":6029,"src":"20843:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"20843:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6014,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6007,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20865:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20874:11:24","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"20865:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20888:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"20865:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20864:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20893:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"20864:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20843:53:24"},{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6015,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"20938:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6018,"indexExpression":{"expression":{"id":6016,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"20947:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20956:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"20947:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20938:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6019,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"20969:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20938:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6021,"nodeType":"ExpressionStatement","src":"20938:41:24"},{"eventCall":{"arguments":[{"id":6023,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"21086:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6024,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"21112:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21121:8:24","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"21112:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6026,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"21144:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6022,"name":"FundsPenalizedForNonCompliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"21041:30:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21041:124:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6028,"nodeType":"EmitStatement","src":"21036:129:24"}]},"functionSelector":"df63ba91","id":6030,"implemented":true,"kind":"function","modifiers":[{"id":5934,"kind":"modifierInvocation","modifierName":{"id":5933,"name":"onlyOwner","nameLocations":["20021:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20021:9:24"},"nodeType":"ModifierInvocation","src":"20021:9:24"}],"name":"checkQualityComplianceBelowExpectations","nameLocation":"19937:39:24","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"_proposalId","nameLocation":"19995:11:24","nodeType":"VariableDeclaration","scope":6030,"src":"19987:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"19987:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19976:37:24"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[],"src":"20031:0:24"},"scope":6065,"src":"19928:1245:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4357],"body":{"id":6063,"nodeType":"Block","src":"21237:249:24","statements":[{"assignments":[6037],"declarations":[{"constant":false,"id":6037,"mutability":"mutable","name":"proposal","nameLocation":"21265:8:24","nodeType":"VariableDeclaration","scope":6063,"src":"21248:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"},"typeName":{"id":6036,"nodeType":"UserDefinedTypeName","pathNode":{"id":6035,"name":"Proposal","nameLocations":["21248:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3998,"src":"21248:8:24"},"referencedDeclaration":3998,"src":"21248:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal"}},"visibility":"internal"}],"id":6041,"initialValue":{"baseExpression":{"id":6038,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"21276:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$3998_storage_$dyn_storage","typeString":"struct IProposalLogic.Proposal storage ref[] storage ref"}},"id":6040,"indexExpression":{"id":6039,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"21286:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21276:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage","typeString":"struct IProposalLogic.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21248:50:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6042,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21313:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21319:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"21313:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6044,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"21331:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21340:7:24","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"21331:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21313:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":6047,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"21351:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21360:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"21351:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21313:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6062,"nodeType":"IfStatement","src":"21309:170:24","trueBody":{"id":6061,"nodeType":"Block","src":"21368:111:24","statements":[{"expression":{"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6050,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"21383:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$3998_storage_ptr","typeString":"struct IProposalLogic.Proposal storage pointer"}},"id":6052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21392:6:24","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"21383:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21401:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"21383:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"ExpressionStatement","src":"21383:23:24"},{"eventCall":{"arguments":[{"id":6057,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"21448:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21461:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6056,"name":"ProposalStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"21426:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21426:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6060,"nodeType":"EmitStatement","src":"21421:46:24"}]}}]},"functionSelector":"6bff47e6","id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"deactivateProposal","nameLocation":"21190:18:24","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"_proposalId","nameLocation":"21217:11:24","nodeType":"VariableDeclaration","scope":6064,"src":"21209:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6031,"name":"uint256","nodeType":"ElementaryTypeName","src":"21209:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21208:21:24"},"returnParameters":{"id":6034,"nodeType":"ParameterList","parameters":[],"src":"21237:0:24"},"scope":6065,"src":"21181:305:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6066,"src":"401:21088:24","usedErrors":[13,18,1272,1275,1381],"usedEvents":[24,1264,1269,4027,4033,4039,4049,4062,4074,4082,4090,4098,4106,4114,4120,4126,4141,4151,4157,4163,4173,4179]}],"src":"33:21458:24"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"paused()":"5c975abb"}},"irOptimized":""}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ShortStrings.sol:ShortStrings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f1377d24f124bea1381627a398fd4075033b68071ec473f75d27771f1a041548"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\nobject \"ShortStrings_1653\" {\n    code {\n        {\n            /// @src 13:1255:4308  \"library ShortStrings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ShortStrings_1653_deployed\")\n            codecopy(_1, dataoffset(\"ShortStrings_1653_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\n    object \"ShortStrings_1653_deployed\" {\n        code {\n            {\n                /// @src 13:1255:4308  \"library ShortStrings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201324f930bfef97a67db8782d5ba50c7999ed538db9e9b059a8aaf30f10f0020264736f6c63430008180033\"\n    }\n}\n","hash":"01000007ff92847613618c737f6b7ecdcfe352ba41a24585f9fe648179723c19","factoryDependencies":{}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000cb5ffcc40512e38d91cda3debec06a8082ed4bcf948101ef8fb852fffd13e12c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_1763\" {\n    code {\n        {\n            /// @src 14:1245:3930  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_1763_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_1763_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_1763_deployed\" {\n        code {\n            {\n                /// @src 14:1245:3930  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ee36ed20e70c22da90626582036e3a679dee91b3f15ccee0f24d02fb10965a3764736f6c63430008180033\"\n    }\n}\n","hash":"010000074ba1a97c8e9a1fcbdb4f70c5bfa81b0803374d134c72f23d2b56f6f9","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000719dd442c7f4a1b3b7344e8ab3d5cd1d6da319ca6721dae9564a410704957626"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2018\" {\n    code {\n        {\n            /// @src 15:251:3098  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2018_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2018_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2018_deployed\" {\n        code {\n            {\n                /// @src 15:251:3098  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122015d014e01afb0ec54a072eeeb5f8ed281f0bb3587d83e29541b7b7693f196da864736f6c63430008180033\"\n    }\n}\n","hash":"0100000730cc61659c47f5524816733bf79407e03d1ce574d37f15880aef4b3b","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000daca8e2ed8d4281133ea242f6004fc1e234e485a9d5899b5d4584424e98896a7"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_2366\" {\n    code {\n        {\n            /// @src 16:344:7730  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_2366_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_2366_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_2366_deployed\" {\n        code {\n            {\n                /// @src 16:344:7730  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207c3c195e5100821c671548b6ed995f6142a269275c5db7e386d120baf64e976964736f6c63430008180033\"\n    }\n}\n","hash":"010000073648ffd5dc48aa6cf3d5f3562bbe56f16e0bda73d26d4659fb5113bb","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MessageHashUtils.sol:MessageHashUtils\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000bf9dfca8513deedfc90a41464e2f0ac9addd32872170f4bb08bba550f8603336"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\nobject \"MessageHashUtils_2667\" {\n    code {\n        {\n            /// @src 18:521:3756  \"library MessageHashUtils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MessageHashUtils_2667_deployed\")\n            codecopy(_1, dataoffset(\"MessageHashUtils_2667_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\n    object \"MessageHashUtils_2667_deployed\" {\n        code {\n            {\n                /// @src 18:521:3756  \"library MessageHashUtils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212204ce762655d32f9207eb8f0d17e76369843d9b1f7e5e7d69f4bc92ca35eb8d02464736f6c63430008180033\"\n    }\n}\n","hash":"010000075a4d2172313fb23ebea2c536830cde976a1184491f74f9f9bee44553","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b9997343189305e65cb1366a8d51efc86b77737b7c76a554f55edcc565f09087"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 19:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3721\" {\n    code {\n        {\n            /// @src 19:203:15117  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_3721_deployed\")\n            codecopy(_1, dataoffset(\"Math_3721_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 19:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3721_deployed\" {\n        code {\n            {\n                /// @src 19:203:15117  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205f9cca639bfc745709167f3ff7c154ea15aa3cc71167e98b8be106877e78748064736f6c63430008180033\"\n    }\n}\n","hash":"0100000798911312f54a46dfcf8ab4dfaf71febeed3770b6f375f15f8fc28051","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f79ab5b3c6988eccc172b543a5015a9728de779674ffeb9e45aeaec19a0697f3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 20:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3826\" {\n    code {\n        {\n            /// @src 20:216:1263  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_3826_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_3826_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 20:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3826_deployed\" {\n        code {\n            {\n                /// @src 20:216:1263  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205f70028e67f81dfb99f16af1731a10f485e5aaed6a2a0c52bf4ae0b72e4c9ce264736f6c63430008180033\"\n    }\n}\n","hash":"0100000730007d14165d0f493f93f480def153d8b0f8ccf213eed4b871179fcb","factoryDependencies":{}}},"contracts/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009c6a089a610e7afef446673721105b184501732ea530e824498b25190629c8e2"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 21:\"contracts/Counters.sol\"\nobject \"Counters_3900\" {\n    code {\n        {\n            /// @src 21:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_3900_deployed\")\n            codecopy(_1, dataoffset(\"Counters_3900_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"contracts/Counters.sol\"\n    object \"Counters_3900_deployed\" {\n        code {\n            {\n                /// @src 21:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122028c3046287f2d18e7155ae8343bf61dcd4f438207468fbe91dff2f9160bdbfe064736f6c63430008180033\"\n    }\n}\n","hash":"010000076717ced082677e5aab24e9b41eb4d3d86b76f23ebea98ebf16b0a368","factoryDependencies":{}}},"contracts/FlareToken.sol":{"FlareToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlareToken.sol\":\"FlareToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/FlareToken.sol\":{\"keccak256\":\"0x752a166a29e3d741951ba4569ab09d22a19aaa89edb28deb6454e87e680753de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1043c38a82d68acbfce55011be2040e591687a75d72a7348e47209240172da2d\",\"dweb:/ipfs/QmRG2b3vmewHV6KKSHiF1aKpjNQSoC5jEawpQ9WgHk59Fq\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"FlareToken.sol:FlareToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_87\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.gt\t@.BB0_81\n\tsub.s!\t@CPI0_45[0], r2, r4\n\tjump.le\t@.BB0_76\n\tsub.s!\t@CPI0_46[0], r2, r4\n\tjump.eq\t@.BB0_115\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.eq\t@.BB0_118\n\tsub.s!\t@CPI0_48[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_139\n.BB0_1:\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r4\n\tst.1\t352, r4\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t384, r1\n\tadd\t10, r0, r1\n\tst.1\t416, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t448, r1\n\tadd\t3, r0, r5\n\tst.1\t480, r5\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t512, r1\n\tadd\t608, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1\t544, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t576, r1\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_87:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.gt\t@.BB0_94\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.le\t@.BB0_89\n\tsub.s!\t@CPI0_33[0], r2, r1\n\tjump.eq\t@.BB0_182\n\tsub.s!\t@CPI0_34[0], r2, r1\n\tjump.eq\t@.BB0_187\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_17[0], r1, r1\n\tjump\t@.BB0_139\n.BB0_6:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_11\n\tadd\tr3, r0, stack-[4]\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tld.1\t448, r1\n\tand\t@CPI0_6[0], r1, r1\n\tor\t20, r1, r1\n\tsstore\tr5, r1\n\tld.1\t480, r6\n\tsub.s!\t@CPI0_7[0], r6, r1\n\tjump.lt\t@.BB0_13\n.BB0_12:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_81:\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.le\t@.BB0_82\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.eq\t@.BB0_151\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tjump\t@.BB0_171\n.BB0_94:\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.le\t@.BB0_95\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.eq\t@.BB0_246\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_275\n\tsub.s!\t@CPI0_29[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_17[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_284\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_287\n\tadd\t@CPI0_22[0], r0, r1\n\tjump\t@.BB0_158\n.BB0_13:\n\tadd\t4, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tjump.lt\t@.BB0_18\n\tadd\tr3, r0, stack-[3]\n\tadd\tr6, r0, stack-[4]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump.ge\t@.BB0_18\n.BB0_19:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_19\n.BB0_18:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_64\n\tadd\tr6, r0, stack-[4]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\t480, r2, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB0_63\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\t480, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump\t@.BB0_20\n.BB0_76:\n\tsub.s!\t@CPI0_49[0], r2, r4\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_50[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_113\n.BB0_89:\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_173\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n.BB0_171:\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_172\n.BB0_82:\n\tsub.s!\t@CPI0_43[0], r2, r1\n\tjump.eq\t@.BB0_140\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_17[0], r3, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_144\n\tand!\t@CPI0_79[0], r3, r4\n\tjump.ne\t@.BB0_148\n\tadd\t@CPI0_88[0], r0, r1\n\tjump\t@.BB0_147\n.BB0_95:\n\tsub.s!\t@CPI0_30[0], r2, r4\n\tjump.eq\t@.BB0_233\n\tsub.s!\t@CPI0_31[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_113:\n\tadd\t1, r0, r1\n\tjump\t@.BB0_114\n.BB0_115:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_117\n.BB0_118:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s\t1, r0, r1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB0_125\n.BB0_126:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[4], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_182:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_17[0], r3, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_184\n\tand!\t@CPI0_79[0], r3, r4\n\tjump.ne\t@.BB0_160\n\tand\t@CPI0_19[0], r3, r3\n\tor\t@CPI0_80[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_81[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_82[0], r0, r4\n\tjump\t@.BB0_149\n.BB0_187:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld.1\t64, r7\n\tld\tr1, r1\n\tsub.s!\t255, r1, r2\n\tjump.ne\t@.BB0_199\n\tadd\t5, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1.inc\tr7, r1, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_195\n\tst.1\t0, r4\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_192\n\tadd\t@CPI0_75[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_198:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_198\n\tjump\t@.BB0_192\n.BB0_151:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_17[0], r1, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_155\n\tsub!\tstack-[6], r0, r2\n\tjump.ne\t@.BB0_159\n\tadd\t@CPI0_86[0], r0, r1\n.BB0_158:\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_165:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_79[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_139\n.BB0_246:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t224, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_254\n\tld.1\t64, r1\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tjump\t@.BB0_131\n.BB0_275:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[5], r0, r2\n.BB0_172:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_117:\n\tsload\tr1, r1\n.BB0_139:\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_104\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_103\n\tadd\t@CPI0_92[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_107:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_107\n\tadd\t192, r3, r2\n\tjump\t@.BB0_103\n.BB0_173:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_175\n\tand\t@CPI0_53[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_177\n.BB0_140:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n.BB0_114:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_233:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_237\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_236\n\tadd\t@CPI0_70[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_240:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_240\n\tadd\t192, r3, r2\n\tjump\t@.BB0_236\n.BB0_64:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tld.1\t512, r1\n.BB0_66:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB0_20:\n\tsstore\tr5, r1\n\tld.1\t352, r5\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB0_36\n\tsub.s!\t@CPI0_8[0], r5, r1\n\tjump.gt\t@.BB0_12\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tr5, r0, stack-[5]\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_28\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\tr2, r3, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[6], r0, r4\n\tjump.ge\t@.BB0_28\n.BB0_27:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_27\n.BB0_28:\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r2\n\tadd\t384, r0, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_33\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_31:\n\tadd\tr4, r0, r5\n\tadd\t352, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_31\n\tadd\t384, r5, r3\n.BB0_33:\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB0_35\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_35:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t255, r0, r1\n\tjump\t@.BB0_37\n.BB0_36:\n\tshl.s\t3, r5, r1\n\tsub\t256, r1, r2\n\tsub.s\t1, r0, r3\n\tshl\tr3, r2, r2\n\tsub\t0, r1, r1\n\tsub.s\t256, r0, r3\n\tsub!\tr1, r3, r1\n\tadd.lt\tr0, r0, r2\n\tld.1\t384, r1\n\tand\tr1, r2, r1\n\tor\tr1, r5, r1\n.BB0_37:\n\tst.1\t288, r1\n\tld.1\t544, r1\n\tsub.s!\t32, r1, r2\n\tjump.lt\t@.BB0_51\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tadd\t6, r0, r2\n\tsload\tr2, r4\n\tand!\t1, r4, r3\n\tshr.s\t1, r4, r5\n\tand\t127, r5, r3\n\tadd.ne\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr4, r5, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_45\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r5\n\tadd\t@CPI0_9[0], r5, r3\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tsub!\tr4, r5, r5\n\tjump.ge\t@.BB0_45\n\tadd\t@CPI0_9[0], r4, r4\n.BB0_43:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_43\n.BB0_45:\n\tst.1\t0, r2\n\tsub.s\t32, r0, r3\n\tand!\tr1, r3, r4\n\tadd\t576, r0, r5\n\tadd\t@CPI0_9[0], r0, r3\n\tjump.eq\t@.BB0_49\n\tadd\t@CPI0_9[0], r0, r3\n\tadd\t32, r0, r7\n\tadd\tr0, r0, r5\n.BB0_47:\n\tadd\tr7, r0, r6\n\tadd\t544, r6, r7\n\tld.1\tr7, r7\n\tsstore\tr3, r7\n\tadd\t32, r6, r7\n\tadd\t1, r3, r3\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r8\n\tjump.lt\t@.BB0_47\n\tadd\t576, r6, r5\n.BB0_49:\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB0_44\n\tshl.s\t3, r1, r4\n\tand\t248, r4, r4\n\tsub.s\t1, r0, r6\n\tshr\tr6, r4, r4\n\txor\tr4, r6, r4\n\tld.1\tr5, r5\n\tand\tr5, r4, r4\n\tsstore\tr3, r4\n.BB0_44:\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr2, r1\n\tadd\t255, r0, r1\n\tjump\t@.BB0_52\n.BB0_51:\n\tshl.s\t3, r1, r2\n\tsub\t256, r2, r3\n\tsub.s\t1, r0, r4\n\tshl\tr4, r3, r3\n\tsub\t0, r2, r2\n\tsub.s\t256, r0, r4\n\tsub!\tr2, r4, r2\n\tadd.lt\tr0, r0, r3\n\tld.1\t576, r2\n\tand\tr2, r3, r2\n\tor\tr2, r1, r1\n.BB0_52:\n\tst.1\t320, r1\n\tld.1\t352, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t224, r1\n\tld.1\t544, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t256, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tst.1\t160, r1\n\tld.1\t64, r4\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r4, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r4, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t160, r0, r3\n\tst.1.inc\tr4, r3, r1\n\tadd\t160, r4, r2\n\tcontext.this\tr5\n\tst.1\tr2, r5\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_15[0], r4, r2\n\tjump.gt\t@.BB0_12\n\tadd\tr5, r0, stack-[6]\n\tadd\tr3, r0, stack-[3]\n\tadd\t192, r4, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr4, r0, stack-[5]\n\tld.1\tr4, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t128, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t192, r1\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t@CPI0_22[0], r0, r1\n\tadd\tstack-[4], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[5], r0, r1\n\tadd\t196, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_184:\n.BB0_144:\n\tadd\t@CPI0_51[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_199:\n\tand\t255, r1, r2\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_201\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r7, r2\n\tadd.ge\tr1, r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_104:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_103\n.BB0_237:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n.BB0_236:\n.BB0_103:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation.1, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n.BB0_230:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_284:\n.BB0_175:\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_148:\n\tand\t@CPI0_19[0], r3, r3\n\tsstore\tr2, r3\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_81[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_87[0], r0, r4\n.BB0_149:\n.BB0_177:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_155:\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_201:\n\tsub.s!\t@CPI0_73[0], r7, r3\n\tjump.gt\t@.BB0_12\n\tadd\t64, r7, r3\n\tst.1\t64, r3\n\tadd\t32, r7, r3\n\tst.1\tr3, r1\n\tadd\tr7, r0, stack-[5]\n\tst.1\tr7, r2\n\tjump\t@.BB0_203\n.BB0_287:\n\tand\t@CPI0_53[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tjump\t@.BB0_177\n.BB0_159:\n\tand!\t@CPI0_79[0], r1, r1\n\tjump.ne\t@.BB0_160\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_163\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_160:\n\tadd\t@CPI0_83[0], r0, r1\n.BB0_147:\n\tst.1\t128, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_195:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB0_192:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_8[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\tr7, r0, stack-[5]\n\tst.1\t64, r1\n.BB0_203:\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tadd\t192, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t255, r1, r3\n\tjump.ne\t@.BB0_214\n\tadd\t6, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr4, r3, r3\n\tand!\t1, r3, r3\n\tadd\tstack-[5], r0, r8\n\tjump.ne\t@.BB0_4\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_210\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_207\n\tadd\t@CPI0_9[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_213:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_213\n\tjump\t@.BB0_207\n.BB0_125:\n\tsub.s!\tstack-[4], r3, r1\n\tjump.ge\t@.BB0_128\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[4], r0, r4\n\tnear_call\tr0, @abi_encode_address_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_214:\n\tand\t255, r1, r3\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_216\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_254:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t192, r1, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_57[0], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_58[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tadd\t224, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n\tadd\t@CPI0_59[0], r0, r2\n\tld.1\t64, r3\n\tst.1\tr3, r2\n\tadd\t2, r3, r2\n\tst.1\tr2, r1\n\tadd\t34, r3, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t164, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t@CPI0_61[0], r3, r3\n\tjump.le\t@.BB0_259\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[4], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_163:\n\tadd\tr4, r0, stack-[5]\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_85[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n\tjump\t@.BB0_177\n.BB0_128:\n\tadd\tr3, r0, stack-[1]\n\tsub!\tstack-[6], r0, r1\n\tjump.ne\t@.BB0_132\n\tld.1\t64, r1\n\tadd\t@CPI0_90[0], r0, r2\n\tjump\t@.BB0_130\n.BB0_216:\n\tsub.s!\t@CPI0_73[0], r2, r4\n\tadd\tstack-[5], r0, r7\n\tjump.gt\t@.BB0_12\n\tadd\t64, r2, r4\n\tst.1\t64, r4\n\tadd\t32, r2, r4\n\tst.1\tr4, r1\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tjump\t@.BB0_218\n.BB0_70:\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tr4, r0, stack-[4]\n\tand\t@CPI0_17[0], r4, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\tr6, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_19[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI0_20[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tld.1\t192, r3\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tadd\t96, r0, r2\n\tld.1\t224, r3\n\tst.2\t512, r2\n\tst.2\t544, r3\n\tadd\t128, r0, r2\n\tld.1\t256, r3\n\tst.2\t576, r2\n\tst.2\t608, r3\n\tld.1\t288, r2\n\tadd\tstack-[3], r0, r3\n\tst.2\t640, r3\n\tst.2\t672, r2\n\tadd\t192, r0, r2\n\tld.1\t320, r3\n\tst.2\t704, r2\n\tst.2\t736, r3\n\tst.2\t256, r1\n\tadd\t7, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_210:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_207:\n\tadd\t63, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr1, r2, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_8[0], r4, r3\n\tadd\tr8, r0, r7\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r4\n.BB0_218:\n\tsub.s!\t@CPI0_76[0], r4, r1\n\tjump.gt\t@.BB0_12\n\tadd\t32, r4, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t64, r1\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr4, r0\n\tld.1\t64, r4\n\tadd\t32, r4, r1\n\tadd\t224, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_77[0], r0, r1\n\tst.1\tr4, r1\n\tld.1\tr7, r1\n\tadd\t224, r4, r3\n\tst.1\tr3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\t256, r4, r3\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_222\n\tadd\tr0, r0, r4\n.BB0_221:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_221\n.BB0_222:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, stack-[3]\n\tand\tstack-[3], r1, r1\n\tadd\tr1, r3, r1\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r3\n\tadd\t64, r4, r4\n\tst.1\tr4, r3\n\tld.1\tr2, r6\n\tst.1.inc\tr1, r6, r5\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r1\n.BB0_224:\n\tadd\tr1, r5, r3\n\tadd\t32, r1, r1\n\tadd\tr1, r2, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB0_224\n.BB0_225:\n\tadd\tr5, r0, stack-[2]\n\tadd\tr6, r0, stack-[1]\n\tadd\tr6, r5, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tand\tstack-[3], r1, r1\n\tadd\tstack-[2], r1, r1\n\tsub\tr1, r4, r2\n\tadd\t192, r4, r3\n\tst.1\tr3, r2\n\tadd\t160, r4, r2\n\tst.1\tr2, r0\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r3\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB0_229\n\tadd\tr0, r0, r3\n.BB0_228:\n\tld.1.inc\tr5, r4, r5\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_228\n.BB0_229:\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB0_230\n.BB0_55:\n\trevert\n.BB0_132:\n\tsub!\tstack-[2], r0, r1\n\tjump.ne\t@.BB0_134\n\tld.1\t64, r1\n\tadd\t@CPI0_89[0], r0, r2\n.BB0_130:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_131:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_134:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_126\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_259:\n\tld\tr1, r1\n\tadd\t96, r2, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r3\n\tadd\tstack-[2], r0, r4\n\tst.1\tr3, r4\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_289\n\tadd\tr0, r0, r6\n.BB0_261:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_261\n.BB0_289:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_263\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB0_263:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld.1\t0, r1\n\tand!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_272\n\tld.1\t64, r1\n\tadd\t@CPI0_65[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_265:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_288\n\tadd\tr0, r0, r6\n.BB0_267:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_267\n.BB0_288:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_269\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_269:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_272:\n\tsub.s!\tstack-[6], r1, r2\n\tjump.ne\t@.BB0_273\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_273:\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tadd\tstack-[6], r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI0_63[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nfinalize_allocation.1:\n.func_begin2:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tjump.gt\t@.BB2_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_2\n\tst.1\t64, r1\n\tret\n.BB2_2:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_address_uint256_uint256:\n.func_begin3:\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI3_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end3:\n\nfun_transfer:\n.func_begin4:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[5]\n\tadd\tr1, r0, r4\n\tand!\t@CPI4_0[0], r4, r3\n\tjump.eq\t@.BB4_1\n\tand!\t@CPI4_0[0], r2, stack-[4]\n\tjump.eq\t@.BB4_4\n\tadd\tr4, r0, stack-[1]\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI4_1[0], r1, r1\n\tjump.ne\t@.BB4_6\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI4_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB4_10\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI4_3[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_3[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tadd\tstack-[2], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_3[0], r1, r2\n\tadd.ge\t@CPI4_3[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI4_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_7[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[4], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_8\n\tret\n.BB4_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t@CPI4_11[0], r0, r2\n\tjump\t@.BB4_2\n.BB4_4:\n\tld.1\t64, r1\n\tadd\t@CPI4_9[0], r0, r2\n.BB4_2:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI4_3[0], r0, r2\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_6:\n\tld.1\t64, r1\n\tadd\t@CPI4_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI4_3[0], r0, r2\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_10:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI4_8[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[5], r0, r4\n\tnear_call\tr0, @abi_encode_address_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI4_3[0], r0, r2\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI4_3[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_domainSeparatorV4:\n.func_begin5:\n\tnop\tstack+=[4]\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tand\t@CPI5_3[0], r1, r1\n\tcontext.this\tr2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB5_7\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI5_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI5_4[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ne\t@.BB5_7\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_3\n\tjump\t@.BB5_1\n.BB5_7:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t32, r1, r2\n\tadd\t@CPI5_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI5_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t64, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t128, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r4\n\tadd\t160, r4, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI5_7[0], r4, r1\n\tjump.ge\t@.BB5_11\n\tadd\tstack-[4], r0, r3\n\tadd\t192, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI5_1[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI5_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_13\n.BB5_3:\n\tld\tr1, r1\n\tret\n.BB5_1:\n\trevert\n.BB5_11:\n\tadd\t@CPI5_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_13:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_approve:\n.func_begin6:\n\tnop\tstack+=[3]\n\tand!\t@CPI6_0[0], r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI6_0[0], r2, stack-[3]\n\tjump.eq\t@.BB6_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB6_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tadd.ge\t@CPI6_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI6_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_6\n\tret\n.BB6_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t@CPI6_7[0], r0, r2\n\tjump\t@.BB6_2\n.BB6_4:\n\tld.1\t64, r1\n\tadd\t@CPI6_5[0], r0, r2\n.BB6_2:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin7:\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t@CPI8_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tret\n.BB8_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_3:\nCPI5_1:\nCPI6_1:\nCPI8_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 46327402591955337320058654089327405072754125992491898414525088445239176200192\nCPI0_2:\n\t.cell 31853391437325547532075873425304827213159102853847209866620799321950480498688\nCPI0_3:\n\t.cell 31796745720952241221411591473350268326918501199109356742053948525448337031168\nCPI0_4:\n\t.cell 22163329580580053030292883849319169862539958002407764210677428189014622470144\nCPI0_5:\nCPI4_6:\nCPI6_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_6:\n\t.cell -95780971304118053647396689196894323976171195136475136\nCPI0_7:\n\t.cell 18446744073709551616\nCPI0_8:\nCPI2_0:\n\t.cell 18446744073709551615\nCPI0_9:\n\t.cell -4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316913641812099366289145856\nCPI0_11:\n\t.cell 904625697166532776746648320380374280103671755200316917183586961518523056128\nCPI0_12:\nCPI5_4:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_13:\nCPI5_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_14:\nCPI5_6:\n\t.cell -52716064676786082020591434766380454285206545917311776621925683646084292198385\nCPI0_15:\n\t.cell 18446744073709551423\nCPI0_16:\nCPI5_8:\nCPI8_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_17:\nCPI3_0:\nCPI4_0:\nCPI5_3:\nCPI6_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_18:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_19:\n\t.cell -372682917519380244141939632342652170012262798458881\nCPI0_20:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_21:\n\t.cell 53919893334301279589334030174039261387839108057106852292971368284160\nCPI0_22:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_23:\nCPI2_2:\nCPI4_10:\nCPI5_10:\nCPI6_6:\n\t.cell 2852213850513516153367582212096\nCPI0_24:\n\t.cell 1901074597\nCPI0_25:\n\t.cell 2514000704\nCPI0_26:\n\t.cell 3573918926\nCPI0_27:\n\t.cell 3573918927\nCPI0_28:\n\t.cell 3714247998\nCPI0_29:\n\t.cell 4076725131\nCPI0_30:\n\t.cell 2514000705\nCPI0_31:\n\t.cell 2835717307\nCPI0_32:\n\t.cell 2220280664\nCPI0_33:\n\t.cell 2220280665\nCPI0_34:\n\t.cell 2226133358\nCPI0_35:\n\t.cell 2376452955\nCPI0_36:\n\t.cell 1901074598\nCPI0_37:\n\t.cell 2127478272\nCPI0_38:\n\t.cell 910484756\nCPI0_39:\n\t.cell 1086394136\nCPI0_40:\n\t.cell 1086394137\nCPI0_41:\n\t.cell 1553423035\nCPI0_42:\n\t.cell 1889567281\nCPI0_43:\n\t.cell 910484757\nCPI0_44:\n\t.cell 1061922874\nCPI0_45:\n\t.cell 404098524\nCPI0_46:\n\t.cell 404098525\nCPI0_47:\n\t.cell 599290589\nCPI0_48:\n\t.cell 826074471\nCPI0_49:\n\t.cell 117300739\nCPI0_50:\n\t.cell 157198259\nCPI0_51:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_52:\n\t.cell 2852213852874699394802404818944\nCPI0_53:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_54:\n\t.cell 2535301202817642044428229017600\nCPI0_55:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_56:\nCPI4_5:\nCPI6_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_57:\n\t.cell 49955707469362902507454157297736832118868343942642399513960811609542965143241\nCPI0_58:\n\t.cell 18446744073709551391\nCPI0_59:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI0_60:\n\t.cell 904625697166532776746648320380374280103671760429375632499708656235722047488\nCPI0_61:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI0_62:\n\t.cell 10141204801825835211973625643008\nCPI0_63:\n\t.cell 34149718579681734090623783807632257043644090228937683185826250611175605665792\nCPI0_64:\n\t.cell 5387515050969974956360988622848\nCPI0_65:\n\t.cell -4399567410664312436217910391711023685490938802098584046133129080549566054400\nCPI0_66:\nCPI4_4:\n\t.cell 316912650057057350374175801344\nCPI0_67:\n\t.cell -18297812966642927639546323119482596956946477707846785379148242173554237374464\nCPI0_68:\n\t.cell 44540578843098772919478587545923646303017899474682238397713263778553124618240\nCPI0_69:\n\t.cell 2535301200456458802993406410752\nCPI0_70:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_71:\nCPI5_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_72:\nCPI5_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_73:\n\t.cell 18446744073709551551\nCPI0_74:\n\t.cell -34684677630052190773999176006577974427879312898233739369776509575790472462336\nCPI0_75:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_76:\n\t.cell 18446744073709551583\nCPI0_77:\n\t.cell 6784692728748995825599862402852807100777538164002376799186967812963659939840\nCPI0_78:\nCPI2_1:\nCPI5_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_79:\nCPI4_1:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_80:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_81:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_82:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI0_83:\nCPI4_2:\n\t.cell -17534146137427991961187300527469025899936537448588222841481668375017980690432\nCPI0_84:\n\t.cell 316912652418240591808998408192\nCPI0_85:\nCPI4_7:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_86:\nCPI4_9:\n\t.cell -8925786854382365140803610566892621886666030076708212855559399484773745295360\nCPI0_87:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI0_88:\n\t.cell -51570510111590677826358578368815064033314002580121246528039059915098583728128\nCPI0_89:\nCPI6_5:\n\t.cell -48779021399624352913043740871316806255710487544085296571819983744317932961792\nCPI0_90:\nCPI6_7:\n\t.cell -11755061144800301697569464646051016592542027884323852438436504014981133500416\nCPI0_91:\n\t.cell -2008451700269974843276142548484964856347179961252680468036279050352537370624\nCPI0_92:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI4_8:\n\t.cell -12521951952277481918037692698396753805066444367861040067922658107645432430592\nCPI4_11:\n\t.cell -47593579280375979043157453241769130281332370874351131709864197298683662827520\nCPI5_7:\n\t.cell 18446744073709551424\nCPI6_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/interfaces/IERC5267.sol\", 2:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 7:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 8:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"@openzeppelin/contracts/utils/Nonces.sol\", 11:\"@openzeppelin/contracts/utils/Pausable.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 22:\"contracts/FlareToken.sol\"\nobject \"FlareToken_3981\" {\n    code {\n        {\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let _1 := memoryguard(0x0160)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            finalize_allocation(_1)\n            mstore(_1, 5)\n            let _3 := 32\n            let _4 := add(_1, _3)\n            mstore(_4, \"flare\")\n            let memPtr := mload(_2)\n            finalize_allocation(memPtr)\n            mstore(memPtr, 10)\n            mstore(add(memPtr, _3), \"FlareToken\")\n            let memPtr_1 := mload(_2)\n            finalize_allocation(memPtr_1)\n            let _5 := 3\n            mstore(memPtr_1, _5)\n            mstore(add(memPtr_1, _3), \"FLR\")\n            let memPtr_2 := mload(_2)\n            finalize_allocation(memPtr_2)\n            let _6 := 1\n            mstore(memPtr_2, _6)\n            let _7 := add(memPtr_2, _3)\n            mstore(_7, \"1\")\n            let newLen := mload(memPtr)\n            let _8 := sub(shl(64, 1), 1)\n            if gt(newLen, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n            }\n            let _9 := sload(_5)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            length := shr(_6, _9)\n            let outOfPlaceEncoding := and(_9, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n            }\n            let _10 := 31\n            if gt(length, _10)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _5)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _10)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _11 := add(data, shr(5, add(length, _10)))\n                let start := deleteStart\n                for { } lt(start, _11) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            srcOffset := _3\n            switch gt(newLen, _10)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _5)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(_5, newLen), 248), not(0)))))\n                }\n                sstore(_5, add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(_5, or(and(value, not(shr(shl(_5, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n            }\n            /// @src 3:1985:2002  \"_symbol = symbol_\"\n            let _12 := 0x04\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let _13 := sload(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            length_1 := shr(_6, _13)\n            let outOfPlaceEncoding_1 := and(_13, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n            }\n            if gt(length_1, _10)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _10)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _14 := add(data_1, shr(5, add(length_1, _10)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _14) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _10)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_5, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ or(and(value_1, not(shr(shl(_5, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            /// @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n            let _15 := fun_toShortStringWithFallback(_1)\n            /// @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n            let _16 := 288\n            mstore(_16, /** @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _15)\n            /// @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n            let _17 := fun_toShortStringWithFallback_8719(memPtr_2)\n            /// @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n            let _18 := 320\n            mstore(_18, /** @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _17)\n            /// @src 17:3542:3564  \"keccak256(bytes(name))\"\n            let _19 := keccak256(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4, mload(/** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _1))\n            /// @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n            mstore(224, /** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _19)\n            /// @src 17:3591:3616  \"keccak256(bytes(version))\"\n            let _20 := keccak256(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _7, mload(/** @src 17:3591:3616  \"keccak256(bytes(version))\" */ memPtr_2))\n            /// @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n            let _21 := 256\n            mstore(_21, /** @src 17:3591:3616  \"keccak256(bytes(version))\" */ _20)\n            /// @src 17:3627:3657  \"_cachedChainId = block.chainid\"\n            mstore(160, /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let expr_mpos := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let _22 := add(expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n            /// @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n            mstore(_22, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2), /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _19)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _20)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 17:4278:4282  \"this\" */ address())\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            mstore(expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            let newFreePtr := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            if or(gt(newFreePtr, _8), lt(newFreePtr, expr_mpos))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            /// @src 17:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _22, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n            /// @src 17:3725:3752  \"_cachedThis = address(this)\"\n            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 17:4278:4282  \"this\" */ address())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 22:408:418  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(newFreePtr, shl(224, 0x1e4fbdf7))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ expr_mpos, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 196), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(newFreePtr, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n            }\n            let _23 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x08)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _24 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(_23, sub(shl(160, 1), 1)), /** @src 22:408:418  \"msg.sender\" */ caller())\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            sstore(/** @src 0:3004:3010  \"_owner\" */ 0x08, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ or(and(_23, not(sub(shl(168, 1), 1))), and(/** @src 22:408:418  \"msg.sender\" */ caller(), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ not(shl(160, 255)))))\n            let _25 := datasize(\"FlareToken_3981_deployed\")\n            codecopy(_24, dataoffset(\"FlareToken_3981_deployed\"), _25)\n            setimmutable(_24, \"2387\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2389\", mload(/** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2391\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2393\", mload(/** @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2395\", mload(/** @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _21))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2398\", mload(/** @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _16))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            setimmutable(_24, \"2401\", mload(/** @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _18))\n            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n            return(_24, _25)\n        }\n        function finalize_allocation(memPtr)\n        {\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 1594 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback(var_value_mpos) -> var_\n        {\n            /// @src 13:3037:3056  \"bytes(value).length\"\n            let expr := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n            /// @src 13:3059:3061  \"32\"\n            let _1 := 0x20\n            /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n            case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _2 := 5\n                let _3 := sload(_2)\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _4 := 1\n                length := shr(_4, _3)\n                let outOfPlaceEncoding := and(_3, _4)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let _5 := add(data, shr(_2, add(length, 31)))\n                    let start := add(data, shr(_2, add(expr, 31)))\n                    for { } lt(start, _5) { start := add(start, _4) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _4)\n                        srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(_2, add(shl(_4, expr), _4))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                }\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                var_ := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    let _6 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    mstore(_6, shl(224, 0x305a27a9))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    {\n                        mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    revert(_6, add(sub(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 68))\n                }\n                /// @src 13:1957:1970  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_2)), not(0)))\n                }\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                var_ := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_2)\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                leave\n            }\n        }\n        /// @ast-id 1594 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback_8719(var_value_mpos) -> var\n        {\n            /// @src 13:3037:3056  \"bytes(value).length\"\n            let expr := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n            /// @src 13:3059:3061  \"32\"\n            let _1 := 0x20\n            /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n            case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _2 := sload(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _3 := 1\n                length := shr(_3, _2)\n                let outOfPlaceEncoding := and(_2, _3)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let _4 := add(data, shr(5, add(length, 31)))\n                    let start := add(data, shr(5, add(expr, 31)))\n                    for { } lt(start, _4) { start := add(start, _3) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _3)\n                        srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(shl(_3, expr), _3))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                }\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                var := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    let _5 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    mstore(_5, shl(224, 0x305a27a9))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    {\n                        mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    revert(_5, add(sub(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 68))\n                }\n                /// @src 13:1957:1970  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_2)), not(0)))\n                }\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                var := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ length_2)\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"@openzeppelin/contracts/utils/Nonces.sol\", 11:\"@openzeppelin/contracts/utils/Pausable.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\", 22:\"contracts/FlareToken.sol\"\n    object \"FlareToken_3981_deployed\" {\n        code {\n            {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 3:2151:2156  \"_name\" */ 0x03)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(_1, length)\n                        let _5 := 0x20\n                        let _6 := 1\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(_1, _5), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 3:2151:2156  \"_name\" */ 0x03)\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(_1, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(_1, i), _5)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        mstore(memPos, _5)\n                        return(memPos, sub(abi_encode_string(_1, add(memPos, _5)), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_10249()\n                        /// @src 3:9105:9109  \"true\"\n                        fun_approve(/** @src 9:735:745  \"msg.sender\" */ caller(), /** @src 3:9105:9109  \"true\" */ value0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ calldataload(36))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_10249()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        let _8 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(_4, _8)\n                        mstore(32, 1)\n                        let _9 := keccak256(_4, _2)\n                        mstore(_4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        mstore(32, _9)\n                        let _10 := sload(keccak256(_4, _2))\n                        /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 3:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_10, /** @src 3:10848:10865  \"type(uint256).max\" */ not(0)))\n                        /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                            if /** @src 3:10885:10909  \"currentAllowance < value\" */ lt(_10, value)\n                            /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                let _11 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                                /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(_11, shl(225, 0x7dc7a0d9))\n                                revert(_11, sub(abi_encode_address_uint256_uint256(add(_11, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), /** @src 9:735:745  \"msg.sender\" */ caller(), /** @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _10, value), _11))\n                            }\n                            /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                            if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _8)\n                            /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                let _12 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                mstore(_12, shl(224, 0xe602df05))\n                                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                                mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), _4)\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                revert(_12, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                            }\n                            /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                            if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 9:735:745  \"msg.sender\" */ caller())\n                            /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                let _13 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                mstore(_13, shl(225, 0x4a1406b1))\n                                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                                mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_13, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), _4)\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                revert(_13, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                            }\n                            mstore(_4, _8)\n                            mstore(32, 1)\n                            let _14 := keccak256(_4, _2)\n                            mstore(_4, /** @src 9:735:745  \"msg.sender\" */ caller())\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(32, _14)\n                            sstore(keccak256(_4, _2), sub(/** @src 3:11077:11101  \"currentAllowance - value\" */ _10, value))\n                        }\n                        /// @src 3:5249:5254  \"value\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, /** @src 3:3075:3077  \"18\" */ 0x12)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret_1 := /** @src 6:2741:2761  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, ret_1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _15 := sload(/** @src 11:1920:1927  \"_paused\" */ 0x08)\n                        /// @src 11:2260:2322  \"if (!paused()) {...\"\n                        if /** @src 11:2264:2273  \"!paused()\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(shr(160, _15), 0xff))\n                        /// @src 11:2260:2322  \"if (!paused()) {...\"\n                        {\n                            /// @src 11:2296:2311  \"ExpectedPause()\"\n                            let _16 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                            /// @src 11:2296:2311  \"ExpectedPause()\"\n                            mstore(_16, shl(224, 0x8dfc202b))\n                            revert(_16, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3)\n                        }\n                        sstore(/** @src 11:1920:1927  \"_paused\" */ 0x08, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(_15, not(shl(160, 255))))\n                        /// @src 11:2798:2820  \"Unpaused(_msgSender())\"\n                        let _17 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                        mstore(_17, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:2798:2820  \"Unpaused(_msgSender())\"\n                        log1(_17, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 32, /** @src 11:2798:2820  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(_4, _4)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_10249()\n                        let value_1 := calldataload(36)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _18 := and(/** @src 3:7791:7812  \"account == address(0)\" */ value0_2, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                        if /** @src 3:7791:7812  \"account == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _18)\n                        /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            let _19 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_19, shl(224, 0xec442f05))\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(/** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_19, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), _4)\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_19, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                        }\n                        /// @src 11:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _20 := sload(/** @src 3:6496:6517  \"_totalSupply += value\" */ 0x02)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let sum := add(_20, value_1)\n                        if gt(_20, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        sstore(/** @src 3:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sum)\n                        mstore(_4, _18)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ value_1))\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        let _21 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                        mstore(_21, value_1)\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_21, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 32, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ _18)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(_4, _4)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(shr(160, sload(/** @src 11:1920:1927  \"_paused\" */ 0x08)), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_2)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_10249(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _22 := sload(keccak256(_4, _2))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, _22)\n                        return(memPos_7, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _23 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x08)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x08, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(_23, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4, _4, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(_23, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_10249(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 10:624:631  \"_nonces\" */ 0x07)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _24 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _24)\n                        return(memPos_8, 32)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 11:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        sstore(/** @src 11:2522:2536  \"_paused = true\" */ 0x08, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ or(and(sload(/** @src 11:2522:2536  \"_paused = true\" */ 0x08), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ not(shl(160, 255))), shl(160, 1)))\n                        /// @src 11:2551:2571  \"Paused(_msgSender())\"\n                        let _25 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                        mstore(_25, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:2551:2571  \"Paused(_msgSender())\"\n                        log1(_25, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 32, /** @src 11:2551:2571  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(_4, _4)\n                    }\n                    case 0x84b0196e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 17:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                        let var_mpos := /** @src 17:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 17:6099:6104  \"_name\" */ loadimmutable(\"2398\"))\n                        /// @src 17:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                        let var_mpos_1 := /** @src 17:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_10260(/** @src 17:6554:6562  \"_version\" */ loadimmutable(\"2401\"))\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let memPtr := mload(_2)\n                        let _26 := 0x20\n                        let newFreePtr := add(memPtr, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr, _4)\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, shl(248, 15))\n                        mstore(add(memPos_9, 0x20), 224)\n                        let tail := abi_encode_string(var_mpos, add(memPos_9, 224))\n                        mstore(add(memPos_9, _2), sub(tail, memPos_9))\n                        let tail_1 := abi_encode_string(var_mpos_1, tail)\n                        mstore(add(memPos_9, 96), /** @src 17:5590:5603  \"block.chainid\" */ chainid())\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        mstore(add(memPos_9, 128), /** @src 17:5625:5629  \"this\" */ address())\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        mstore(add(memPos_9, 160), _4)\n                        mstore(add(memPos_9, 192), sub(tail_1, memPos_9))\n                        let pos := tail_1\n                        let length_1 := mload(memPtr)\n                        mstore(tail_1, length_1)\n                        pos := add(tail_1, 0x20)\n                        let srcPtr := newFreePtr\n                        let i_1 := _4\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _26)\n                            srcPtr := add(srcPtr, _26)\n                        }\n                        return(memPos_9, sub(pos, memPos_9))\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_3 := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x08), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sub(shl(160, 1), 1))\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, value_3)\n                        return(memPos_10, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_2 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_2 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_1, length_2)\n                        let _27 := 0x20\n                        let _28 := 1\n                        switch and(slotValue_1, 1)\n                        case 0 {\n                            mstore(add(memPtr_1, _27), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_2)))), _27)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_2 := _4\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, _27) }\n                            {\n                                mstore(add(add(memPtr_1, i_2), _27), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _28)\n                            }\n                            ret_2 := add(add(memPtr_1, i_2), _27)\n                        }\n                        finalize_allocation(memPtr_1, sub(ret_2, memPtr_1))\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, _27)\n                        return(memPos_11, sub(abi_encode_string(memPtr_1, add(memPos_11, _27)), memPos_11))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_10249()\n                        /// @src 3:3754:3759  \"value\"\n                        fun_transfer(/** @src 9:735:745  \"msg.sender\" */ caller(), /** @src 3:3754:3759  \"value\" */ value0_3, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ calldataload(36))\n                        let memPos_12 := mload(_2)\n                        mstore(memPos_12, 1)\n                        return(memPos_12, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_10249()\n                        let value1_1 := abi_decode_address()\n                        let value_4 := calldataload(68)\n                        let value_5 := calldataload(100)\n                        let value_6 := calldataload(132)\n                        if iszero(eq(value_6, and(value_6, 0xff))) { revert(_4, _4) }\n                        /// @src 6:1879:1976  \"if (block.timestamp > deadline) {...\"\n                        if /** @src 6:1883:1909  \"block.timestamp > deadline\" */ gt(/** @src 6:1883:1898  \"block.timestamp\" */ timestamp(), /** @src 6:1883:1909  \"block.timestamp > deadline\" */ value_5)\n                        /// @src 6:1879:1976  \"if (block.timestamp > deadline) {...\"\n                        {\n                            /// @src 6:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            let _29 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                            /// @src 6:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            mstore(_29, shl(225, 0x313c8981))\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(/** @src 6:1932:1965  \"ERC2612ExpiredSignature(deadline)\" */ add(_29, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), value_5)\n                            /// @src 6:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            revert(_29, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                        }\n                        let _30 := sub(shl(160, 1), 1)\n                        let _31 := and(value0_4, _30)\n                        mstore(_4, _31)\n                        mstore(32, /** @src 10:1121:1128  \"_nonces\" */ 0x07)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let dataSlot_1 := keccak256(_4, _2)\n                        let _32 := sload(/** @src 10:1121:1137  \"_nonces[owner]++\" */ dataSlot_1)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        sstore(dataSlot_1, add(/** @src 10:1121:1137  \"_nonces[owner]++\" */ _32, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 1))\n                        /// @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let expr_mpos := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                        /// @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let _33 := add(expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 32)\n                        mstore(_33, /** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2), _31)\n                        mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 96), and(value1_1, _30))\n                        mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 128), value_4)\n                        mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 160), _32)\n                        mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 192), value_5)\n                        /// @src 6:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        mstore(expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 192)\n                        let newFreePtr_1 := add(expr_mpos, 224)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        /// @src 6:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                        let _34 := keccak256(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _33, mload(/** @src 6:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                        /// @src 17:5053:5073  \"_domainSeparatorV4()\"\n                        let _35 := fun_domainSeparatorV4()\n                        /// @src 18:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                        /// @src 18:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _35)\n                        mstore(add(usr$ptr, 0x22), _34)\n                        /// @src 16:6967:6992  \"tryRecover(hash, v, r, s)\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 18:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 16:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ calldataload(164), calldataload(196))\n                        /// @src 16:7021:7029  \"errorArg\"\n                        fun_throwError(expr_component_1, expr_component_2)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _36 := and(/** @src 6:2220:2235  \"signer != owner\" */ expr_component, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _30)\n                        /// @src 6:2216:2304  \"if (signer != owner) {...\"\n                        if /** @src 6:2220:2235  \"signer != owner\" */ iszero(eq(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _36, _31))\n                        /// @src 6:2216:2304  \"if (signer != owner) {...\"\n                        {\n                            /// @src 6:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                            let _37 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                            /// @src 6:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                            mstore(_37, shl(225, 0x25c00723))\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(/** @src 6:2258:2293  \"ERC2612InvalidSigner(signer, owner)\" */ add(_37, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), _36)\n                            mstore(/** @src 6:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 6:2258:2293  \"ERC2612InvalidSigner(signer, owner)\" */ _37, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36), _31)\n                            /// @src 6:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                            revert(_37, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 68)\n                        }\n                        /// @src 3:9105:9109  \"true\"\n                        fun_approve(value0_4, value1_1, value_4)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(_4, _4)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_10249()\n                        let value1_2 := abi_decode_address()\n                        let _38 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _38))\n                        mstore(32, /** @src 3:3952:3963  \"_allowances\" */ 0x01)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _39 := keccak256(_4, _2)\n                        mstore(_4, and(value1_2, _38))\n                        mstore(32, _39)\n                        let _40 := sload(keccak256(_4, _2))\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, _40)\n                        return(memPos_13, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address_10249()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let _41 := sub(shl(160, 1), 1)\n                        let _42 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _41)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _42)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _43 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(_2)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_43, shl(224, 0x1e4fbdf7))\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_43, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _3), _4)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_43, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                        }\n                        let _44 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x08)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x08, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ or(and(_44, shl(160, 0xffffffffffffffffffffffff)), _42))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4, _4, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(_44, _41), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _42)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_10249() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_15291(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 554 @src 3:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 3:5739:5757  \"from == address(0)\" */ var_from, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _1)\n                /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                if /** @src 3:5739:5757  \"from == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    let _3 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    mstore(_3, shl(225, 0x4b637e8f))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 3:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    revert(_3, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                }\n                let _4 := and(/** @src 3:5834:5850  \"to == address(0)\" */ var_to, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _1)\n                /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                if /** @src 3:5834:5850  \"to == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4)\n                /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    let _5 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(_5, /** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    revert(_5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                }\n                /// @src 11:1439:1511  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6356:6896  \"if (from == address(0)) {...\"\n                let _6 := 0\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _7 := sload(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x40))\n                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                if /** @src 3:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    let _8 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(0x40)\n                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(_8, shl(226, 0x391434e3))\n                    revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                }\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                sstore(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x40), sub(/** @src 3:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4)\n                let dataSlot := keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ var_value))\n                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                let _9 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(0x40)\n                mstore(_9, var_value)\n                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                log3(_9, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x20, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n            }\n            /// @ast-id 2489 @src 17:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n            function fun_domainSeparatorV4() -> var\n            {\n                /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                let expr := /** @src 17:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 17:3929:3933  \"this\" */ address(), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(/** @src 17:3938:3949  \"_cachedThis\" */ loadimmutable(\"2391\"), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sub(shl(160, 1), 1)))\n                /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                if expr\n                {\n                    expr := /** @src 17:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 17:3953:3966  \"block.chainid\" */ chainid(), /** @src 17:3970:3984  \"_cachedChainId\" */ loadimmutable(\"2389\"))\n                }\n                /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                switch expr\n                case 0 {\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(_1, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 64), /** @src 17:4226:4237  \"_hashedName\" */ loadimmutable(\"2393\"))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 17:4239:4253  \"_hashedVersion\" */ loadimmutable(\"2395\"))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:4255:4268  \"block.chainid\" */ chainid())\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 17:3929:3933  \"this\" */ address())\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let newFreePtr := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                    var := /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _1, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                    /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                    leave\n                }\n                default /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                {\n                    /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                    var := /** @src 17:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"2387\")\n                    /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                    leave\n                }\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x08), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 9:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                }\n            }\n            /// @ast-id 775 @src 3:9949:10381  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_value)\n            {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 3:10061:10080  \"owner == address(0)\" */ var_owner, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _1)\n                /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                {\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    let _3 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    mstore(_3, shl(224, 0xe602df05))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    revert(_3, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                }\n                let _4 := and(/** @src 3:10159:10180  \"spender == address(0)\" */ var_spender, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _1)\n                /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4)\n                /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                {\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    let _5 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    mstore(_5, shl(225, 0x4a1406b1))\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    revert(_5, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                }\n                mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _2)\n                mstore(0x20, /** @src 3:9105:9109  \"true\" */ 0x01)\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                let _6 := keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x40)\n                mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ _4)\n                mstore(0x20, _6)\n                sstore(keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x40), var_value)\n                /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                let _7 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(0x40)\n                mstore(_7, var_value)\n                /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                log3(_7, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x20, /** @src 3:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n            }\n            /// @ast-id 1321 @src 11:2002:2130  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 11:2063:2124  \"if (paused()) {...\"\n                if /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(shr(160, sload(/** @src 11:1920:1927  \"_paused\" */ 0x08)), /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0xff)\n                /// @src 11:2063:2124  \"if (paused()) {...\"\n                {\n                    /// @src 11:2098:2113  \"EnforcedPause()\"\n                    let _1 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 11:2098:2113  \"EnforcedPause()\"\n                    mstore(_1, shl(224, 0xd93c0665))\n                    revert(_1, 4)\n                }\n            }\n            /// @ast-id 1621 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback(var_value) -> var_mpos\n            {\n                /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let slotValue := sload(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let dataPos := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 13:3623:3635  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    {\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        let _3 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_15291(memPtr_1)\n                    /// @src 13:2367:2457  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                    /// @src 13:3570:3592  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 1621 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback_10260(var_value) -> var_mpos\n            {\n                /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let slotValue := sload(/** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        let dataPos := 111414077815863400510004064629973595961579173665589224203503662149373724986687\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 13:3623:3635  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    {\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        let _3 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_15291(memPtr_1)\n                    /// @src 13:2367:2457  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                    /// @src 13:3570:3592  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 2280 @src 16:5140:6670  \"function tryRecover(...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n            {\n                /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 16:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 16:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var := /** @src 16:6297:6298  \"0\" */ 0x00\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_1 := /** @src 16:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_2 := var_s\n                    leave\n                }\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 32))\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                {\n                    /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                if /** @src 16:6495:6515  \"signer == address(0)\" */ iszero(/** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ and(/** @src 16:6495:6515  \"signer == address(0)\" */ _3, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ sub(shl(160, 1), 1)))\n                /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_1 := /** @src 16:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_2 := /** @src -1:-1:-1 */ _2\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    leave\n                }\n                /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n                /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var_2 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 2365 @src 16:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n            function fun_throwError(var_error, var_errorArg)\n            {\n                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                if iszero(lt(var_error, 4))\n                {\n                    mstore(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 0x24)\n                }\n                /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 16:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 16:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 1)\n                    case /** @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 16:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 16:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 16:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 16:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                let _1 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                mstore(_1, shl(226, 0x35e2f383))\n                                /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                                mstore(/** @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 4), var_errorArg)\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                revert(_1, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                            }\n                        }\n                        default /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            let _2 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            mstore(_2, shl(224, 0xfce698f7))\n                            /// @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\"\n                            mstore(/** @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 4), var_errorArg)\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            revert(_2, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 36)\n                        }\n                    }\n                    default /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                        let _3 := /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ mload(64)\n                        /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                        mstore(_3, shl(224, 0xf645eedf))\n                        revert(_3, /** @src 22:273:998  \"contract FlareToken is ERC20Permit, Ownable, ERC20Pausable{...\" */ 4)\n                    }\n                }\n                default /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 16:7327:7334  \"return;\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f82eac3bbe9c3b244e7127825ea579cc5809c50f0ff799549c4f2e43f0d8667164736f6c63430008180033\"\n    }\n}\n","hash":"01000289fb44a4c009f61e70e31bd7935041b51c8960fd783a664bec99d80069","factoryDependencies":{}}},"contracts/IProposalLogic.sol":{"IProposalLogic":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"staked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"DepositForProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"points","type":"uint256"}],"name":"ExchangePoints","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"FundsPenalizedForNonCompliance","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"}],"name":"FundsSettledForAverageQuality","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalAndOptionsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalConcluded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ProposalEndTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalForUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isWinner","type":"bool"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"},{"indexed":false,"internalType":"uint256","name":"amountReleased","type":"uint256"}],"name":"StakeReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isForProposal","type":"bool"}],"name":"TokensStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newUnlockTime","type":"uint256"}],"name":"UnlockTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":true,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_optionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountWithdrawn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceAfterWithdrawal","type":"uint256"}],"name":"WithdrawalDetailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"checkQualityComplianceBelowExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createProposalWithOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"deactivateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"exchangePoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionIndex","type":"uint256"}],"name":"getOptionVoteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getOptionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotingHistory","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"bool","name":"penalizeStake","type":"bool"}],"name":"handleStakeRelease","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"processUserStakedProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposalsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"settleFundsForAverageQuality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winningOptionId","type":"uint256"}],"name":"settleRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"submitProposalForReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"verifyComplianceAndExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"DepositForProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"ExchangePoints\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"FundsPenalizedForNonCompliance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"name\":\"FundsSettledForAverageQuality\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalAndOptionsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ProposalEndTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWinner\",\"type\":\"bool\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isForProposal\",\"type\":\"bool\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UnlockTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceAfterWithdrawal\",\"type\":\"uint256\"}],\"name\":\"WithdrawalDetailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"checkQualityComplianceBelowExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createProposalWithOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"deactivateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchangePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"}],\"name\":\"getOptionVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"penalizeStake\",\"type\":\"bool\"}],\"name\":\"handleStakeRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"processUserStakedProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"settleFundsForAverageQuality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"}],\"name\":\"settleRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"submitProposalForReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"verifyComplianceAndExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IProposalLogic.sol\":\"IProposalLogic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IProposalLogic.sol\":{\"keccak256\":\"0x44f5375f8ddbbb1d6625d859587e85ef3ddc3c5266bd73024c28b1c2518779a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28ec6745a84350dd4476eb420843de8e682166a96fe7429c4761902af7ff5d37\",\"dweb:/ipfs/QmcEHUsmDpRxfZKhvS6dhKJJZNJeTd1p3nt1RnsmELf3LD\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"checkQualityComplianceBelowExpectations(uint256)":"df63ba91","createProposalWithOptions(string,string[],uint256,uint256)":"3257917a","deactivateProposal(uint256)":"6bff47e6","deposit(uint256)":"b6b55f25","exchangePoints(uint256)":"7c7b66f7","getAvailableWithdrawBalance(address)":"bcfc4429","getContractBalance()":"6f9fb98a","getCurrentProposalId()":"fe10226d","getOptionVoteCount(uint256,uint256)":"63e9a61d","getOptionsCount(uint256)":"517a6257","getProposalStatus(uint256)":"401853b7","getUserBalance(address)":"47734892","getUserVotingHistory(address)":"0ff7c4a5","getUserVotingRights(address)":"6e16c790","handleStakeRelease(address,uint256,bool)":"cc4d6345","pause()":"8456cb59","processUserStakedProposal(address,string,uint256,string[],uint256,uint256)":"a46188ad","proposalsLength()":"44c7c867","settleFundsForAverageQuality(uint256)":"9d678da1","settleRewards(uint256,uint256)":"e13b7b31","submitProposalForReview(uint256)":"bbebdd25","unpause()":"3f4ba83a","verifyComplianceAndExpectations(uint256)":"a24f8bd5","vote(uint256,uint256,uint256)":"8a6655d6","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":""}},"contracts/ProposalLogic.sol":{"ProposalLogic":{"abi":[{"inputs":[{"internalType":"address","name":"_myToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"staked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"DepositForProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"points","type":"uint256"}],"name":"ExchangePoints","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"FundsPenalizedForNonCompliance","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"}],"name":"FundsSettledForAverageQuality","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalAndOptionsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalConcluded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ProposalEndTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"ProposalForUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isWinner","type":"bool"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"},{"indexed":false,"internalType":"uint256","name":"amountReleased","type":"uint256"}],"name":"StakeReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isForProposal","type":"bool"}],"name":"TokensStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newUnlockTime","type":"uint256"}],"name":"UnlockTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":true,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_optionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountWithdrawn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceAfterWithdrawal","type":"uint256"}],"name":"WithdrawalDetailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserSstakeAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserStakerAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"added_proposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"checkQualityComplianceBelowExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createProposalWithOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"deactivateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"points","type":"uint256"}],"name":"exchangePoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionIndex","type":"uint256"}],"name":"getOptionVoteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getOptionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotingHistory","outputs":[{"internalType":"uint256[]","name":"proposalIds","type":"uint256[]"},{"internalType":"uint256[]","name":"optionIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"bool","name":"penalizeStake","type":"bool"}],"name":"handleStakeRelease","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"myToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"optionIdsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"processUserStakedProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalOptions","outputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"proposalTokenDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bool","name":"isWagered","type":"bool"},{"internalType":"uint256","name":"endTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"settleFundsForAverageQuality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winningOptionId","type":"uint256"}],"name":"settleRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakesForUser","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"unlockTime","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"bool","name":"isWagered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"submitProposalForReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"usedVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVotingHistory","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"verifyComplianceAndExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteCountsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterAddressesByProposal","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterIndexInProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingEndTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingRecords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"DepositForProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"ExchangePoints\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"FundsPenalizedForNonCompliance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"name\":\"FundsSettledForAverageQuality\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalAndOptionsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ProposalEndTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"ProposalForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWinner\",\"type\":\"bool\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isForProposal\",\"type\":\"bool\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UnlockTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceAfterWithdrawal\",\"type\":\"uint256\"}],\"name\":\"WithdrawalDetailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserSstakeAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserStakerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"added_proposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"checkQualityComplianceBelowExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createProposalWithOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"deactivateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"exchangePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"}],\"name\":\"getOptionVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"optionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"penalizeStake\",\"type\":\"bool\"}],\"name\":\"handleStakeRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"optionIdsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"processUserStakedProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalOptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalTokenDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSettled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"settleFundsForAverageQuality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"}],\"name\":\"settleRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakesForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"submitProposalForReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usedVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVotingHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"verifyComplianceAndExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteCountsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterAddressesByProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterIndexInProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingEndTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProposalLogic.sol\":\"ProposalLogic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/IProposalLogic.sol\":{\"keccak256\":\"0x44f5375f8ddbbb1d6625d859587e85ef3ddc3c5266bd73024c28b1c2518779a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28ec6745a84350dd4476eb420843de8e682166a96fe7429c4761902af7ff5d37\",\"dweb:/ipfs/QmcEHUsmDpRxfZKhvS6dhKJJZNJeTd1p3nt1RnsmELf3LD\"]},\"contracts/ProposalLogic.sol\":{\"keccak256\":\"0x1d8da74f90c2960692d8c6913962177d02127f75102491c4b6191ec05da4335e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b4934d1bb3d889bc467ac71c4003c0c90860b25bbf08568aef27afeab451553\",\"dweb:/ipfs/QmYxgxUNQEYT37nQDe2kTjzossETdDj55EATLgbbxQz51N\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ProposalLogic.sol:ProposalLogic\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tptr.add\tr1, r0, r15\n\tptr.add\tr15, r0, stack[@ptr_calldata]\n\tadd\tr15, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr15, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.gt\t@.BB0_47\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_67[0], r2, r3\n\tjump.gt\t@.BB0_22\n\tsub.s!\t@CPI0_71[0], r2, r3\n\tjump.eq\t@.BB0_78\n\tsub.s!\t@CPI0_72[0], r2, r3\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_73[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r8\n\tsload\tr8, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_155[0], r1, r1\n\tjump.ge\t@.BB0_90\n\tadd\tstack-[12], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r1\n\tadd\tr2, r0, stack-[11]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_110[0], r1, r5\n\tjump.gt\t@.BB0_90\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr2, r1, r9\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_751\n\tadd\tr0, r0, r5\n.BB0_96:\n\tshl.s\t5, r5, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_96\n.BB0_751:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_98\n.BB0_98:\n\tld.1\t64, r6\n\tadd\tr6, r4, r5\n\tadd\tr6, r0, stack-[10]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_110[0], r5, r7\n\tjump.gt\t@.BB0_90\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_90\n\tadd\tr9, r0, stack-[8]\n\tadd\tr8, r0, stack-[16]\n\tst.1\t64, r5\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[10], r0, r6\n\tst.1.inc\tr6, r5, r8\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_750\n\tadd\tr0, r0, r5\n.BB0_102:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_102\n.BB0_750:\n\tadd\tr8, r0, stack-[7]\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_104\n.BB0_104:\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[9]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_110[0], r4, r6\n\tjump.gt\t@.BB0_90\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r4\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r4, r7\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_749\n\tadd\tr0, r0, r4\n.BB0_108:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_108\n.BB0_749:\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_110\n.BB0_110:\n\tsub!\tstack-[12], r0, r1\n\tadd\tstack-[16], r0, r3\n\tjump.ne\t@.BB0_111\n.BB0_123:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t96, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t96, r2, r2\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tsub.s\tstack-[17], r2, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[17], r0, r3\n\tadd\t64, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_548\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t159, r1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_762\n\tadd\tr0, r0, r4\n.BB0_5:\n\tshl.s\t5, r4, r5\n\tptr.add\tr15, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_5\n.BB0_762:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r3, r3\n\tptr.add\tr15, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_7:\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.le\t@.BB0_9\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_63\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_56\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.gt\t@.BB0_53\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.eq\t@.BB0_329\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.eq\t@.BB0_337\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r4\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_341\n\tadd\t7, r0, r5\n\tsload\tr5, r1\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB0_347\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr2, r0, stack-[17]\n\tadd\tr3, r0, stack-[16]\n\tst.1\t0, r3\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_350\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[16], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_113\n\tst.1\t0, r3\n\tmul\t5, r2, r2, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI0_97[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tld\tr1, r1\n\tsub.s!\tstack-[12], r1, r1\n\tjump.ge\t@.BB0_354\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.le\t@.BB0_113\n\tst.1\t0, r3\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI0_85[0], r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_361\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_135[0], r0, r3\n.BB0_358:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tjump\t@.BB0_359\n.BB0_32:\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tsub.s!\t@CPI0_52[0], r2, r3\n\tjump.gt\t@.BB0_37\n\tsub.s!\t@CPI0_56[0], r2, r3\n\tjump.eq\t@.BB0_274\n\tsub.s!\t@CPI0_57[0], r2, r3\n\tjump.eq\t@.BB0_277\n\tsub.s!\t@CPI0_58[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tjump\t@.BB0_139\n.BB0_9:\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_12\n\tld.1\t64, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_11:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_63:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_71\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_68\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_586\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_605\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[15]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_614\n\tadd\t6, r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[16], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_616\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_106[0], r2, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[14], r2, r3\n\tjump.lt\t@.BB0_149\n\tsub.s\tstack-[14], r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[15], r0, r1\n\tjump.ne\t@.BB0_620\n.BB0_622:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.le\t@.BB0_113\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tsstore\tr1, r0\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_91[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_107[0], r0, r4\n\tjump\t@.BB0_581\n.BB0_25:\n\tsub.s!\t@CPI0_60[0], r2, r3\n\tjump.gt\t@.BB0_29\n\tsub.s!\t@CPI0_64[0], r2, r3\n\tjump.eq\t@.BB0_140\n\tsub.s!\t@CPI0_65[0], r2, r3\n\tjump.eq\t@.BB0_176\n\tsub.s!\t@CPI0_66[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_110[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tadd\t@CPI0_117[0], r0, r4\n\tsub!\tr2, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_117[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_117[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr15, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_110[0], r2, r5\n\tjump.gt\t@.BB0_90\n\tadd\t191, r2, r5\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r5, r5\n\tsub.s!\t@CPI0_110[0], r5, r6\n\tjump.gt\t@.BB0_90\n\tst.1\t64, r5\n\tst.1\t128, r2\n\tadd\tr3, r2, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r4, r3\n\tptr.add\tr15, r3, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_755\n\tadd\tr0, r0, r6\n.BB0_191:\n\tshl.s\t5, r6, r7\n\tptr.add\tr3, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_191\n.BB0_755:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_193\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tshl.s\t3, r4, r4\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_193:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_110[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r2\n\tptr.add\tr15, r2, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_110[0], r5, r4\n\tjump.gt\t@.BB0_90\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\tstack-[16], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[15]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_110[0], r6, r8\n\tjump.gt\t@.BB0_90\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r6\n\tadd\tstack-[15], r0, r6\n\tst.1.inc\tr6, r5, r6\n\tadd\tr6, r0, stack-[9]\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r4\n\tsub!\tr4, r1, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_200\n.BB0_212:\n\tptr.add.s\t100, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsload\tr2, r2\n\tshr.s\t8, r2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_213\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\t1, r3, r3\n\tsstore\tr2, r3\n\tmul\t@CPI0_121[0], r1, stack-[12], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_216\n\tdiv\tstack-[12], r1, r1, r2\n\tsub.s!\t@CPI0_121[0], r1, r1\n\tjump.ne\t@.BB0_149\n.BB0_216:\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tld\tr1, r1\n\tadd\tstack-[12], r1, stack-[3]\n\tsub!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_149\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_122[0], r1, r2\n\tjump.gt\t@.BB0_90\n\tadd\t224, r1, r2\n\tst.1\t64, r2\n\tadd\t192, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_221\n.BB0_222:\n\tld.1\t64, r1\n\tadd\t96, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\t96, r1, r4\n\tld.1\t128, r2\n\tst.1\tr4, r2\n\tadd\t128, r1, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r5\n.BB0_224:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_224\n.BB0_225:\n\tadd\tr2, r4, r5\n\tst.1\tr5, r0\n\tadd\t31, r2, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r4, r2\n\tsub\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[15], r0, r12\n\tld.1\tr12, r3\n\tst.1\tr2, r3\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r4\n\tadd\t32, r4, r6\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_226\n.BB0_231:\n\tadd\t64, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_145[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_258\n.BB0_56:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_60\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.eq\t@.BB0_458\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_542\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_553\n.BB0_40:\n\tsub.s!\t@CPI0_45[0], r2, r3\n\tjump.gt\t@.BB0_44\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.eq\t@.BB0_297\n\tsub.s!\t@CPI0_50[0], r2, r3\n\tjump.eq\t@.BB0_300\n\tsub.s!\t@CPI0_51[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_deactivateProposal, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tshl.s\t8, r6, r2\n\tand\t@CPI0_3[0], r2, r2\n\tadd\tr3, r0, stack-[17]\n\tsload\tr1, r3\n\tand\t@CPI0_4[0], r3, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tshr.s\t8, r3, r2\n\tand\t@CPI0_2[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.gt\t@.BB0_75\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_715\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_720\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_558\n.BB0_22:\n\tsub.s!\t@CPI0_68[0], r2, r3\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_69[0], r2, r3\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_70[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n.BB0_139:\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tjump\t@.BB0_128\n.BB0_53:\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.eq\t@.BB0_401\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_403\n\tsub.s!\t@CPI0_39[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_437\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_408\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_96[0], r6, r4\n\tadd\t@CPI0_85[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_410\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_412\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\t@CPI0_97[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_444\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_446\n.BB0_444:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_100[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_446:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI0_101[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tand!\t@CPI0_102[0], r2, r1\n\tjump.ne\t@.BB0_450\n\tand\t@CPI0_90[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_447:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB0_448\n.BB0_454:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tsub\tstack-[17], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tjump\t@.BB0_430\n.BB0_37:\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.eq\t@.BB0_285\n\tsub.s!\t@CPI0_54[0], r2, r3\n\tjump.eq\t@.BB0_290\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tr15, r0, stack-[17]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[17], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_299\n.BB0_68:\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_627\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_631\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_656\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_143\n\tadd\t2, r0, r1\n\tsstore\tr0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr3, r0, stack-[14]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_113\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[17]\n\tadd\tr0, r0, stack-[4]\n\tjump.ne\t@.BB0_661\n.BB0_672:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[9], r2, r2\n\tjump.le\t@.BB0_113\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[8]\n\tsub!\tstack-[4], r2, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[14], r0, r1\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI0_85[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_677\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_679\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_682\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n\tjump\t@.BB0_359\n.BB0_29:\n\tsub.s!\t@CPI0_61[0], r2, r3\n\tjump.eq\t@.BB0_259\n\tsub.s!\t@CPI0_62[0], r2, r3\n\tjump.eq\t@.BB0_264\n\tsub.s!\t@CPI0_63[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @storage_array_index_access_struct_Proposal__dyn, @DEFAULT_UNWIND\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_726\n.BB0_60:\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_554\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.eq\t@.BB0_559\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_585\n.BB0_44:\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.eq\t@.BB0_305\n\tsub.s!\t@CPI0_47[0], r2, r1\n\tjump.eq\t@.BB0_309\n\tsub.s!\t@CPI0_48[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_327\n\tand\t@CPI0_77[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_432\n.BB0_75:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_732\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_740\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t1, r0, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_748\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_149\n\tsub.s\t1, r2, r1\n\tjump\t@.BB0_748\n.BB0_82:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tjump\t@.BB0_128\n.BB0_337:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tshr.s\t8, r2, r1\n\tand\t@CPI0_2[0], r1, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_339\n\tand!\t255, r2, r4\n\tjump.ne\t@.BB0_341\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tor\t1, r2, r2\n\tsstore\tr3, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_138[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_139[0], r0, r4\n\tjump\t@.BB0_582\n.BB0_277:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_263\n.BB0_605:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_getAvailableWithdrawBalance, @DEFAULT_UNWIND\n\tjump\t@.BB0_726\n.BB0_176:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t2, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tst.1\tr5, r1\n\tadd\t64, r4, r1\n\tand\t@CPI0_2[0], r2, r5\n\tst.1\tr1, r5\n\tand!\t@CPI0_146[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_147[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_542:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_Option__dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[17]\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t64, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t64, r3, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[15], r0, r4\n\tjump\t@.BB0_547\n.BB0_300:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getOptionVoteCount, @DEFAULT_UNWIND\n\tjump\t@.BB0_726\n.BB0_720:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_address_dyn_37533, @DEFAULT_UNWIND\n\tjump\t@.BB0_724\n.BB0_130:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_154[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_403:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_406\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_408\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_96[0], r6, r4\n\tadd\t@CPI0_85[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_410\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_412\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\t@CPI0_97[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_416\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_418\n.BB0_416:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_100[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_418:\n\tadd\tstack-[15], r0, r1\n\tadd\t@CPI0_101[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tand!\t@CPI0_102[0], r2, r1\n\tjump.ne\t@.BB0_422\n\tand\t@CPI0_90[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_419:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB0_420\n.BB0_426:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tsub\tstack-[17], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n.BB0_430:\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_125[0], r0, r4\n\tjump\t@.BB0_431\n.BB0_290:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tjump\t@.BB0_128\n.BB0_631:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_634\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_408\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_96[0], r6, r4\n\tadd\t@CPI0_85[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_637\n.BB0_410:\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_127[0], r0, r1\n\tjump\t@.BB0_333\n.BB0_264:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tshr.s\t8, r2, r1\n\tand\t@CPI0_2[0], r1, r4\n\tcontext.caller\tr1\n\tsub!\tr4, r1, r4\n\tjump.ne\t@.BB0_266\n\tand!\t255, r2, r4\n\tjump.ne\t@.BB0_269\n\tadd\t@CPI0_144[0], r0, r1\n\tjump\t@.BB0_144\n.BB0_559:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t@CPI0_114[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t132, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\tr3, r0, stack-[16]\n\tst.1\t196, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_563\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_573\n.BB0_309:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_142[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_312\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_322\n.BB0_740:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n\tjump\t@.BB0_263\n.BB0_78:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_struct_Proposal__dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t1, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tadd\t2, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t3, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t4, r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t224, r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[13]\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[15], r0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tst.1\tr4, r2\n\tadd\t224, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tadd\t192, r4, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r5\n\tand!\t@CPI0_102[0], r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tand!\t65280, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tand!\t255, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tadd\t64, r4, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n.BB0_547:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n.BB0_548:\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_329:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_334\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_141[0], r0, r1\n\tjump\t@.BB0_333\n.BB0_274:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tjump\t@.BB0_276\n.BB0_586:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_591\n.BB0_590:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_113[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n.BB0_359:\n\tst.1\tr2, r3\n\tadd\t@CPI0_81[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_360\n.BB0_140:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r2\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB0_145\n.BB0_143:\n\tadd\t@CPI0_153[0], r0, r1\n\tjump\t@.BB0_144\n.BB0_458:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t192, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_110[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tadd\t@CPI0_117[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_117[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_117[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr15, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_110[0], r3, r6\n\tjump.gt\t@.BB0_90\n\tadd\t191, r3, r6\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r6, r6\n\tsub.s!\t@CPI0_110[0], r6, r7\n\tjump.le\t@.BB0_465\n.BB0_90:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB0_91\n.BB0_297:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n.BB0_299:\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_748\n.BB0_715:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_553:\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n.BB0_724:\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tjump\t@.BB0_725\n.BB0_124:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tjump\t@.BB0_127\n.BB0_401:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n.BB0_585:\n\tand\t@CPI0_2[0], r1, r1\n\tjump\t@.BB0_748\n.BB0_285:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_address_dyn_37521, @DEFAULT_UNWIND\n\tjump\t@.BB0_289\n.BB0_627:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tjump\t@.BB0_128\n.BB0_259:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB0_263:\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tr15, r0, stack-[17]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[17], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tstack-[16], r0, r1\n\tjump\t@.BB0_129\n.BB0_554:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_558:\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n.BB0_289:\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_2[0], r1, r1\n.BB0_725:\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n.BB0_726:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_79[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_305:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n.BB0_127:\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n.BB0_128:\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n.BB0_129:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_276:\n\tsload\tr1, r1\n.BB0_748:\n\tst.1\t128, r1\n\tadd\t@CPI0_74[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_732:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_736\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_739\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_408:\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t24, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_80[0], r0, r1\n\tjump\t@.BB0_333\n.BB0_341:\n\tadd\t@CPI0_136[0], r0, r1\n.BB0_144:\n\tst.1\t128, r1\n\tadd\t@CPI0_137[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_339:\n\tjump\t@.BB0_266\n.BB0_312:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_757\n\tadd\tr0, r0, r7\n.BB0_314:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_314\n.BB0_757:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_316\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_316:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_317\n.BB0_322:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tst.1\tr1, r2\n.BB0_324:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_79[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_406:\n\tjump\t@.BB0_266\n.BB0_634:\n\tjump\t@.BB0_266\n.BB0_563:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_105[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_761\n\tadd\tr0, r0, r7\n.BB0_565:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_565\n.BB0_761:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_567\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_567:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_568\n.BB0_573:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_577\n\tadd\t@CPI0_81[0], r0, r3\n\tst.1\tr1, r3\n\tor\t132, r2, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r3\n\tadd\t@CPI0_116[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r2, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n.BB0_360:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_334:\n\tadd\tr2, r0, stack-[17]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[17], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_336\n.BB0_149:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_91\n.BB0_145:\n\tadd\tr2, r0, stack-[17]\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsstore\tr0, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_149\n\tsub\tstack-[13], r1, r3\n\tsub.s!\tstack-[13], r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr1, r0, r1\n\tadd.ne\tr0, r0, r3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\t4, r5, r2\n\tsub.s!\tstack-[17], r3, r3\n\tjump.ge\t@.BB0_152\n\tadd\t@CPI0_81[0], r0, r3\n\tst.1\tr5, r3\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t40, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r5, r1\n\tadd\t@CPI0_151[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r5, r1\n\tadd\t@CPI0_152[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r2\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r1\n\tor\t@CPI0_88[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_437:\n\tjump\t@.BB0_266\n.BB0_656:\n.BB0_266:\n\tadd\t@CPI0_75[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_269:\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tsstore\tr3, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_138[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_143[0], r0, r4\n\tjump\t@.BB0_432\n.BB0_317:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_756\n\tadd\tr0, r0, r6\n.BB0_319:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_319\n.BB0_756:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_321\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_321:\n\tjump\t@.BB0_163\n.BB0_568:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_760\n\tadd\tr0, r0, r6\n.BB0_570:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_570\n.BB0_760:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_572\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_572:\n.BB0_163:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_591:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_149\n\tsub\tr3, r1, r1\n\tsub.s!\tstack-[17], r1, r1\n\tjump.lt\t@.BB0_590\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tld\tr1, r1\n\tadd\t@CPI0_108[0], r1, stack-[15]\n\tsub.s!\t@CPI0_109[0], r1, r1\n\tjump.gt\t@.BB0_149\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[17], r0, r1\n\tjump.ne\t@.BB0_599\n.BB0_598:\n\tsub!\tstack-[17], r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_110[0], r2, r4\n\tjump.gt\t@.BB0_90\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tadd\t@CPI0_111[0], r2, r2\n\tsload\tr2, r3\n\tand\t@CPI0_7[0], r3, r3\n\tor\tstack-[16], r3, r3\n\tsstore\tr2, r3\n\tadd\t6, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_110[0], r2, r4\n\tjump.gt\t@.BB0_90\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tadd\t@CPI0_106[0], r2, r2\n\tadd\tstack-[17], r0, r4\n\tsstore\tr2, r4\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tadd\tstack-[15], r0, r5\n\tst.1\tr3, r5\n\tand\t1, r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_91[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_112[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n.BB0_258:\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_324\n.BB0_736:\n.BB0_327:\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_347:\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t27, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_128[0], r0, r1\n\tjump\t@.BB0_333\n.BB0_637:\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_412\n\tadd\tr5, r0, stack-[17]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr3, r0, stack-[13]\n\tadd\tr6, r0, stack-[14]\n\tadd\t@CPI0_97[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tadd\tstack-[17], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.gt\t@.BB0_641\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_643\n.BB0_641:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_100[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r2\n.BB0_643:\n\tadd\tstack-[14], r0, r1\n\tadd\t@CPI0_101[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tand!\t@CPI0_102[0], r2, r1\n\tjump.ne\t@.BB0_647\n\tand\t@CPI0_90[0], r2, r1\n\tor\t256, r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n.BB0_644:\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tmul\t5, r1, stack-[17], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_650\n\tdiv\tstack-[17], r1, r1, r2\n\tsub.s!\t5, r1, r1\n\tjump.ne\t@.BB0_149\n.BB0_650:\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_149\n\tsub\tr3, r2, r3\n\tsstore\tr1, r3\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_103[0], r0, r4\n.BB0_431:\n\tadd\tstack-[13], r0, r5\n\tjump\t@.BB0_432\n.BB0_412:\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t21, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_126[0], r0, r1\n\tjump\t@.BB0_333\n.BB0_739:\n\tand\t@CPI0_77[0], r2, r2\n\tshl.s\t8, r6, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tjump\t@.BB0_433\n.BB0_336:\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_140[0], r0, r4\n\tadd\tstack-[16], r0, r5\n.BB0_582:\n.BB0_432:\n.BB0_433:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_614:\n\tjump\t@.BB0_266\n.BB0_577:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[16], r1, stack-[14]\n\tsub!\tstack-[14], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_149\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_115[0], r0, r4\n.BB0_581:\n\tadd\tstack-[17], r0, r5\n\tjump\t@.BB0_582\n.BB0_465:\n\tst.1\t64, r6\n\tst.1\t128, r3\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r4\n\tptr.add\tr15, r0, r2\n\tptr.add\tr15, r4, r4\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_759\n\tadd\tr0, r0, r7\n.BB0_468:\n\tshl.s\t5, r7, r8\n\tptr.add\tr4, r8, r9\n\tld\tr9, r9\n\tadd\t160, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_468\n.BB0_759:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_470\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tadd\t160, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_470:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add\tr2, r0, r15\n\tptr.add.s\t68, r15, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[3]\n\tptr.add.s\t100, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_110[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r3\n\tptr.add\tr15, r3, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_110[0], r6, r5\n\tjump.gt\t@.BB0_90\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r7\n\tand\tstack-[16], r7, r7\n\tld.1\t64, r8\n\tadd\tr8, r7, r7\n\tadd\tr8, r0, stack-[14]\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_110[0], r7, r9\n\tjump.gt\t@.BB0_90\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r7\n\tadd\tstack-[14], r0, r7\n\tst.1.inc\tr7, r6, r7\n\tadd\tr7, r0, stack-[8]\n\tadd\t36, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB0_477\n.BB0_489:\n\tptr.add.s\t164, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t132, r15, r3\n\tld\tr3, r3\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsload\tr2, r4\n\tshr.s\t8, r4, r4\n\tand\t@CPI0_2[0], r4, r5\n\tcontext.caller\tr4\n\tsub!\tr5, r4, r5\n\tjump.ne\t@.BB0_490\n\tadd\t5, r0, r4\n\tsload\tr4, r4\n\tsub!\tr4, r3, r4\n\tjump.le\t@.BB0_113\n\tadd\t6, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r3, r5\n\tjump.le\t@.BB0_113\n\tadd\t@CPI0_111[0], r3, r5\n\tsload\tr5, r5\n\tst.1\t0, r4\n\tadd\tstack-[15], r0, r2\n\tand\t@CPI0_2[0], r2, stack-[2]\n\tand\t@CPI0_2[0], r5, r2\n\tsub.s!\tstack-[2], r2, r2\n\tjump.ne\t@.BB0_494\n\tadd\t@CPI0_106[0], r3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[3], r2, r2\n\tjump.ne\t@.BB0_497\n\tmul\t@CPI0_121[0], r1, stack-[15], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_502\n\tdiv\tstack-[15], r1, r1, r2\n\tsub.s!\t@CPI0_121[0], r1, r1\n\tjump.ne\t@.BB0_149\n.BB0_502:\n\tadd\t@CPI0_98[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tld\tr1, r1\n\tadd\tstack-[15], r1, stack-[1]\n\tsub!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_149\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_122[0], r1, r2\n\tjump.gt\t@.BB0_90\n\tadd\t224, r1, r2\n\tst.1\t64, r2\n\tadd\t192, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[3], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_506\n.BB0_507:\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t128, r1, r4\n\tld.1\t128, r3\n\tst.1\tr4, r3\n\tadd\t160, r1, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_510\n\tadd\tr0, r0, r5\n.BB0_509:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_509\n.BB0_510:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\tstack-[3], r0, r5\n\tst.1\tr2, r5\n\tadd\t31, r3, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r4, r2\n\tsub\tr2, r1, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[14], r0, r12\n\tld.1\tr12, r3\n\tst.1\tr2, r3\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r4\n\tadd\t32, r4, r6\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_511\n.BB0_516:\n\tadd\t96, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_124[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_258\n.BB0_217:\n\trevert\n.BB0_350:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_129[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tjump\t@.BB0_359\n.BB0_616:\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_104[0], r0, r1\n.BB0_333:\n\tst.1\t196, r1\n\tadd\t@CPI0_105[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_661:\n\tadd\t32784, r0, stack-[16]\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n.BB0_662:\n\tadd\tr4, r0, stack-[17]\n\tadd\tr3, r0, stack-[15]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_663\n\tst.1\t0, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_666\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r4\n\tshl.s\t1, r4, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_149\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[11], r4, r1\n\tjump.lt\t@.BB0_662\n\tsub!\tr3, r0, r1\n\tadd\tr0, r0, stack-[17]\n\tadd\tr0, r0, stack-[4]\n\tjump.eq\t@.BB0_672\n\tmul\t80, r3, stack-[17], r1\n\tdiv\tstack-[17], r3, r1, r2\n\tsub.s!\t80, r1, r1\n\tadd\tr3, r0, stack-[4]\n\tjump.ne\t@.BB0_149\n\tjump\t@.BB0_672\n.BB0_152:\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r3\n\tadd\t@CPI0_148[0], r0, r4\n\tadd\tr5, r0, stack-[13]\n\tst.1\tr5, r4\n\tadd\tstack-[16], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_154\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_164\n.BB0_422:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_419\n.BB0_647:\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_644\n.BB0_450:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_447\n.BB0_154:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_149[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_753\n\tadd\tr0, r0, r7\n.BB0_156:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_156\n.BB0_753:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_158\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_158:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_159\n.BB0_164:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_110[0], r1, r4\n\tjump.gt\t@.BB0_90\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_170\n\tadd\t68, r1, r2\n\tadd\t@CPI0_116[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\tstack-[11], r0, r3\n\tjump\t@.BB0_359\n.BB0_354:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_130[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_131[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n.BB0_499:\n\tst.1\tr2, r3\n\tadd\t@CPI0_81[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_88[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_620:\n\tadd\tstack-[14], r0, r2\n\tmul\t10, r2, stack-[11], r1\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_624\n\tadd\tstack-[11], r0, r2\n\tdiv.s\tstack-[14], r2, r1, r2\n\tsub.s!\t10, r1, r1\n\tjump.ne\t@.BB0_149\n.BB0_624:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_149\n\tsub\tstack-[14], r2, stack-[14]\n\tsub\tr3, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_622\n.BB0_111:\n\tadd\t32784, r0, stack-[13]\n\tadd\tr0, r0, r4\n.BB0_112:\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_113\n\tadd\tr4, r0, stack-[17]\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_113\n\tmul\t3, r4, stack-[15], r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tshl.s\t5, r4, r5\n\tadd\tr5, r0, stack-[14]\n\tadd\tstack-[8], r5, r2\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_113\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_113\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[7], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_113\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[16], r0, r3\n\tjump.le\t@.BB0_113\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[6], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_112\n\tjump\t@.BB0_123\n.BB0_420:\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_149\n\tmul\t5, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[17], r3\n\tsub.s!\t5, r2, r2\n\tjump.ne\t@.BB0_149\n\tjump\t@.BB0_426\n.BB0_448:\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_149\n\tmul\t10, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[17], r3\n\tsub.s!\t10, r2, r2\n\tjump.ne\t@.BB0_149\n\tjump\t@.BB0_454\n.BB0_663:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_359\n.BB0_666:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tjump\t@.BB0_359\n.BB0_159:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_752\n\tadd\tr0, r0, r6\n.BB0_161:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_161\n.BB0_752:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_163\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_163\n.BB0_361:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[10]\n\tsub!\tstack-[12], r2, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tsub\tstack-[12], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_149\n\tsub\tr2, r1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_368\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_134[0], r0, r3\n\tjump\t@.BB0_358\n.BB0_599:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[17], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r2\n\tjump\t@.BB0_598\n.BB0_677:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_86[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_87[0], r0, r3\n.BB0_498:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB0_499\n.BB0_200:\n\tadd\t@CPI0_117[0], r0, r5\n\tadd\tstack-[15], r0, r6\n\tjump\t@.BB0_201\n.BB0_211:\n\tadd\t32, r6, r6\n\tadd\tr9, r7, r7\n\tst.1\tr7, r0\n\tst.1\tr6, r8\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r7\n\tjump.ge\t@.BB0_212\n.BB0_201:\n\tptr.add\tr15, r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_110[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr7, r2, r10\n\tadd\t63, r10, r7\n\tsub!\tr7, r1, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr5, r0, r8\n\tand\t@CPI0_117[0], r7, r7\n\tsub!\tr7, r0, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tsub.s!\t@CPI0_117[0], r7, r7\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB0_2\n\tadd\t32, r10, r11\n\tptr.add\tr15, r11, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_110[0], r7, r8\n\tjump.gt\t@.BB0_90\n\tadd\t63, r7, r8\n\tand\tstack-[16], r8, r9\n\tld.1\t64, r8\n\tadd\tr8, r9, r9\n\tsub!\tr9, r8, r12\n\tadd\t0, r0, r12\n\tadd.lt\t1, r0, r12\n\tsub.s!\t@CPI0_110[0], r9, r13\n\tjump.gt\t@.BB0_90\n\tand!\t1, r12, r12\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r9\n\tst.1.inc\tr8, r7, r9\n\tadd\tr10, r7, r10\n\tadd\t64, r10, r10\n\tsub!\tr10, r1, r10\n\tjump.gt\t@.BB0_2\n\tadd\t32, r11, r10\n\tptr.add\tr15, r10, r10\n\tshr.s!\t5, r7, r11\n\tjump.eq\t@.BB0_754\n\tadd\tr0, r0, r12\n.BB0_209:\n\tshl.s\t5, r12, r13\n\tadd\tr9, r13, r14\n\tptr.add\tr10, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r11, r13\n\tjump.lt\t@.BB0_209\n.BB0_754:\n\tand!\t31, r7, r12\n\tjump.eq\t@.BB0_211\n\tshl.s\t5, r11, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r11\n\tshl.s\t3, r12, r12\n\tld.1\tr11, r13\n\tshl\tr13, r12, r13\n\tshr\tr13, r12, r13\n\tld\tr10, r10\n\tsub\t256, r12, r12\n\tshr\tr10, r12, r10\n\tshl\tr10, r12, r10\n\tor\tr10, r13, r10\n\tst.1\tr11, r10\n\tjump\t@.BB0_211\n.BB0_170:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\tstack-[17], r2, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r4\n\tsub\tstack-[15], r4, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tst.1\tr1, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_150[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_175\n.BB0_213:\n\tld.1\t64, r1\n\tadd\t@CPI0_75[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_11\n.BB0_679:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_89[0], r0, r3\n.BB0_495:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tjump\t@.BB0_359\n.BB0_477:\n\tadd\t@CPI0_117[0], r0, r6\n\tadd\tstack-[14], r0, r7\n\tjump\t@.BB0_478\n.BB0_488:\n\tadd\t32, r7, r7\n\tadd\tr10, r8, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r9\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r8\n\tptr.add\tr2, r0, r15\n\tjump.ge\t@.BB0_489\n.BB0_478:\n\tptr.add\tr15, r4, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_110[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r3, r11\n\tadd\t63, r11, r8\n\tsub!\tr8, r1, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr6, r0, r9\n\tand\t@CPI0_117[0], r8, r8\n\tsub!\tr8, r0, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr6, r0, r10\n\tsub.s!\t@CPI0_117[0], r8, r8\n\tadd.ne\tr9, r0, r10\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB0_2\n\tadd\t32, r11, r12\n\tptr.add\tr15, r12, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_110[0], r8, r9\n\tjump.gt\t@.BB0_90\n\tadd\t63, r8, r9\n\tand\tstack-[16], r9, r10\n\tld.1\t64, r9\n\tadd\tr9, r10, r10\n\tsub!\tr10, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI0_110[0], r10, r14\n\tjump.gt\t@.BB0_90\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB0_90\n\tst.1\t64, r10\n\tst.1.inc\tr9, r8, r10\n\tadd\tr11, r8, r11\n\tadd\t64, r11, r11\n\tsub!\tr11, r1, r11\n\tjump.gt\t@.BB0_2\n\tadd\t32, r12, r11\n\tptr.add\tr15, r11, r11\n\tshr.s!\t5, r8, r12\n\tjump.eq\t@.BB0_758\n\tadd\tr0, r0, r13\n.BB0_486:\n\tshl.s\t5, r13, r14\n\tadd\tr10, r14, r15\n\tptr.add\tr11, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r12, r14\n\tjump.lt\t@.BB0_486\n.BB0_758:\n\tand!\t31, r8, r13\n\tjump.eq\t@.BB0_488\n\tshl.s\t5, r12, r12\n\tptr.add\tr11, r12, r11\n\tadd\tr10, r12, r12\n\tshl.s\t3, r13, r13\n\tld.1\tr12, r14\n\tshl\tr14, r13, r14\n\tshr\tr14, r13, r14\n\tld\tr11, r11\n\tsub\t256, r13, r13\n\tshr\tr11, r13, r11\n\tshl\tr11, r13, r11\n\tor\tr11, r14, r11\n\tst.1\tr12, r11\n\tjump\t@.BB0_488\n.BB0_490:\n\tld.1\t64, r1\n\tadd\t@CPI0_75[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tjump\t@.BB0_11\n.BB0_682:\n\tadd\tstack-[8], r0, r2\n\tsub\tstack-[4], r2, stack-[3]\n\tadd\tstack-[17], r0, r1\n\tdiv.s\t100, r1, stack-[10], r1\n\tadd\t19, r0, stack-[7]\n\tadd\t32784, r0, stack-[13]\n\tadd\t20, r0, stack-[6]\n\tadd\tr0, r0, stack-[17]\n.BB0_683:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_685\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[16]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_113\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_113\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[15], r1, r1\n\tjump.lt\t@.BB0_695\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_149\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tmul\tstack-[10], r4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tsub.s!\tstack-[9], r3, r2\n\tjump.ne\t@.BB0_700\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_711\n\tdiv\tr1, r4, r2, r3\n\tsub.s!\tstack-[10], r2, r2\n\tjump.ne\t@.BB0_149\n.BB0_711:\n\tdiv.s\tstack-[8], r1, stack-[12], r1\n\tsub!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t64, r1, r3\n\tadd\tstack-[5], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_708\n.BB0_700:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_702\n\tdiv\tr1, r4, r2, r3\n\tsub.s!\tstack-[10], r2, r2\n\tjump.ne\t@.BB0_149\n.BB0_702:\n\tadd\tstack-[8], r0, r3\n\tsub!\tstack-[4], r3, r2\n\tjump.eq\t@.BB0_703\n\tdiv.s\tstack-[3], r1, stack-[12], r1\n\tsub!\tstack-[12], r4, r1\n\tjump.lt\t@.BB0_149\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_149\n\tsub\tr3, r2, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n.BB0_708:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_91[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_92[0], r0, r4\n\tadd\tstack-[16], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tadd\t1, r1, stack-[17]\n\tjump\t@.BB0_683\n.BB0_494:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_118[0], r0, r3\n\tjump\t@.BB0_495\n.BB0_368:\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_149\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_113\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_149\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_132[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[13], r0, r3\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tadd\t64, r3, r4\n\tadd\tstack-[14], r0, r2\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r2\n\tadd\tstack-[16], r0, r2\n\tst.1.inc\tr3, r2, r3\n\tadd\tstack-[17], r0, r2\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr3, r2\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_110[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[12], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_110[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tstack-[15], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[13]\n\tor\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_110[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_110[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_110[0], r2, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_149\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tsub.s\t1, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_133[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[17], r0, r7\n\tjump\t@.BB0_433\n.BB0_221:\n\tadd\t13, r0, stack-[7]\n\tadd\t32784, r0, stack-[6]\n\tadd\tr0, r0, stack-[17]\n\tjump\t@.BB0_232\n.BB0_252:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[14], r0, r4\n.BB0_256:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[17], r0, r2\n\tadd\t1, r2, stack-[17]\n\tld.1\tr5, r1\n\tsub!\tstack-[17], r1, r1\n\tjump.ge\t@.BB0_222\n.BB0_232:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.le\t@.BB0_113\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_123[0], r4, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[17], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[9], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_110[0], r3, r2\n\tjump.gt\t@.BB0_90\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_110[0], r6, r2\n\tadd\tstack-[13], r0, r2\n\tjump.gt\t@.BB0_90\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_239\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[10]\n\tjump.lt\t@.BB0_244\n\tadd\tr3, r0, stack-[5]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[13], r0, r7\n\tjump.ge\t@.BB0_244\n.BB0_245:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_245\n.BB0_244:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_253\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r6\n\tand!\tstack-[16], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r7\n\tjump.eq\t@.BB0_250\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_249:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_249\n.BB0_250:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[15], r0, r5\n\tjump.ge\t@.BB0_252\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_252\n.BB0_253:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r5\n\tjump.eq\t@.BB0_255\n\tld.1\tr7, r1\n.BB0_255:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_256\n.BB0_497:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_119[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_120[0], r0, r3\n\tjump\t@.BB0_498\n.BB0_685:\n\tadd\tstack-[2], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_90[0], r1, r1\n\tor\t256, r1, r1\n\tsstore\tr3, r1\n\tadd\tstack-[5], r0, r1\n.BB0_175:\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_695:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_94[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tjump\t@.BB0_359\n.BB0_226:\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n\tjump\t@.BB0_227\n.BB0_230:\n\tadd\tr7, r6, r8\n\tst.1\tr8, r0\n\tadd\t31, r7, r7\n\tand\tstack-[16], r7, r7\n\tadd\tr7, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.ge\t@.BB0_231\n.BB0_227:\n\tsub\tr6, r2, r7\n\tsub.s\t32, r7, r7\n\tadd\t32, r5, r5\n\tst.1\tr5, r7\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_230\n\tadd\tr0, r0, r9\n.BB0_229:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_229\n\tjump\t@.BB0_230\n.BB0_703:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_91\n.BB0_506:\n\tadd\t13, r0, stack-[6]\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, stack-[15]\n\tjump\t@.BB0_517\n.BB0_536:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[13], r0, r4\n.BB0_540:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r2\n\tadd\t1, r2, stack-[15]\n\tld.1\tr5, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_507\n.BB0_517:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_113\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_123[0], r4, r2\n\tjump.gt\t@.BB0_90\n\tadd\tstack-[15], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[8], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_110[0], r3, r2\n\tjump.gt\t@.BB0_90\n\tadd\tr4, r0, stack-[13]\n\tadd\tr3, r0, stack-[12]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_110[0], r6, r2\n\tadd\tstack-[12], r0, r2\n\tjump.gt\t@.BB0_90\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_239\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\tr6, r0, stack-[10]\n\tadd\tr5, r0, stack-[9]\n\tjump.lt\t@.BB0_528\n\tadd\tr3, r0, stack-[4]\n\tadd\tr7, r0, stack-[12]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[12], r0, r7\n\tjump.ge\t@.BB0_528\n.BB0_529:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_529\n.BB0_528:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_537\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r6\n\tand!\tstack-[16], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r7\n\tjump.eq\t@.BB0_534\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_533:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_533\n.BB0_534:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[14], r0, r5\n\tjump.ge\t@.BB0_536\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_536\n.BB0_537:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r5\n\tjump.eq\t@.BB0_539\n\tld.1\tr7, r1\n.BB0_539:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_540\n.BB0_113:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n.BB0_91:\n\tst.1\t4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_239:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_91\n.BB0_511:\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n\tjump\t@.BB0_512\n.BB0_515:\n\tadd\tr7, r6, r8\n\tst.1\tr8, r0\n\tadd\t31, r7, r7\n\tand\tstack-[16], r7, r7\n\tadd\tr7, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.ge\t@.BB0_516\n.BB0_512:\n\tsub\tr6, r2, r7\n\tsub.s\t32, r7, r7\n\tadd\t32, r5, r5\n\tst.1\tr5, r7\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_515\n\tadd\tr0, r0, r9\n.BB0_514:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_514\n\tjump\t@.BB0_515\n.func_end0:\n\nstorage_array_index_access_struct_Proposal__dyn:\n.func_begin1:\n\tadd\t7, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin2:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB2_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB2_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_10\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB2_4\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB2_13:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB2_13\n\tjump\t@.BB2_4\n.BB2_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB2_4:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_2[0], r1, r3\n\tjump.gt\t@.BB2_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB2_2\n.BB2_6:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB2_2:\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end3:\n\nabi_encode_array_uint256_dyn:\n.func_begin4:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB4_3\n\tadd\tr0, r0, r2\n.BB4_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB4_2\n.BB4_3:\n\tret\n.func_end4:\n\nstorage_array_index_access_struct_VoteRecord__dyn:\n.func_begin5:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB5_1\n\tst.1\t0, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_3\n\tadd\tstack-[1], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nstorage_array_index_access_address_dyn_37521:\n.func_begin6:\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB6_1\n\tst.1\t0, r2\n\tadd\t@CPI6_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB6_1:\n\tadd\t@CPI6_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nstorage_array_index_access_address_dyn_37533:\n.func_begin7:\n\tadd\t6, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB7_1\n\tst.1\t0, r2\n\tadd\t@CPI7_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nstorage_array_index_access_address_dyn:\n.func_begin8:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB8_1\n\tst.1\t0, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_uint256t_uint256:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nstorage_array_index_access_struct_Option__dyn:\n.func_begin10:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB10_1\n\tst.1\t0, r1\n\tadd\t@CPI10_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB10_1:\n\tadd\t@CPI10_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\narray_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr:\n.func_begin11:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r5\n\tadd\t7, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tjump.ge\t@.BB11_1\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tst.1\t0, r2\n\tld.1.inc\tr5, r2, r3\n\tand\t@CPI11_1[0], r2, r2\n\tmul\t5, r1, r6, r1\n\tadd\t@CPI11_2[0], r6, r1\n\tsload\tr1, r4\n\tand\t@CPI11_3[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_4[0], r6, r4\n\tld.1\tr3, r3\n\tld.1.inc\tr3, r7, r8\n\tsub.s!\t@CPI11_5[0], r7, r1\n\tjump.gt\t@.BB11_1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r9\n\tadd.ne\tr1, r0, r9\n\tsub.s!\t31, r9, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB11_5\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t32, r9, r1\n\tadd\tr5, r0, stack-[7]\n\tadd\tr6, r0, stack-[6]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr7, r0, stack-[4]\n\tjump.lt\t@.BB11_11\n\tadd\tr9, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI11_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_8\n\tadd\tstack-[4], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB11_11\n.BB11_12:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB11_12\n.BB11_11:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB11_21\n\tst.1\t0, r4\n\tadd\t@CPI11_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_8\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB11_18\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB11_17:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB11_17\n.BB11_18:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB11_20\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB11_20:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB11_13\n.BB11_21:\n\tsub!\tr7, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB11_23\n\tld.1\tr8, r1\n.BB11_23:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r7, r2\n\tor\tr1, r2, r1\n.BB11_13:\n\tsstore\tr4, r1\n\tadd\t64, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI11_8[0], r6, r2\n\tsstore\tr2, r1\n\tadd\t160, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI11_9[0], r0, r2\n\tsub!\tr1, r0, r1\n\tadd.eq\tr0, r0, r2\n\tadd\t96, r5, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\t@CPI11_10[0], r6, r1\n\tsload\tr1, r3\n\tand\t@CPI11_11[0], r3, r3\n\tor.ne\t1, r3, r3\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tor.ne\t256, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_12[0], r6, r1\n\tadd\t192, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB11_1:\n\tadd\t@CPI11_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB11_2\n.BB11_5:\n\tadd\t@CPI11_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n.BB11_2:\n\tst.1\t4, r1\n\tadd\t@CPI11_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_getOptionVoteCount:\n.func_begin12:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB12_1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_4\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[1], r2, r2\n\tjump.le\t@.BB12_6\n\tst.1\t0, r1\n\tadd\t@CPI12_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_4\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tret\n.BB12_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB12_2\n.BB12_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n.BB12_2:\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tsub.s!\t@CPI12_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_deactivateProposal:\n.func_begin13:\n\tnop\tstack+=[3]\n\tadd\t7, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB13_1\n\tst.1\t0, r3\n\tadd\tr1, r0, stack-[1]\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[2]\n\tadd\t@CPI13_2[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI13_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI13_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_3\n\tadd\tstack-[2], r0, r2\n\tadd\t@CPI13_6[0], r2, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.gt\t@.BB13_6\n\tand!\t255, r3, r1\n\tjump.eq\t@.BB13_7\n.BB13_6:\n\tsub.s\t256, r0, r1\n\tand\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[1], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI13_4[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI13_8[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_8\n.BB13_7:\n\tret\n.BB13_1:\n\tadd\t@CPI13_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\trevert\n.BB13_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_getAvailableWithdrawBalance:\n.func_begin14:\n\tnop\tstack+=[2]\n\tand\t@CPI14_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_1[0], r1, r2\n\tadd.ge\t@CPI14_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_5\n\tsub\tstack-[2], r1, r1\n\tsub.s!\tstack-[2], r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub!\tr2, r0, r2\n\tadd.ne\tr0, r0, r1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_5:\n\tadd\t@CPI14_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin15:\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_2\n\tld\tr1, r1\n\tret\n.BB16_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\n__farcall:\n.func_begin16:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n__staticcall:\n.func_begin17:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\nCPI5_2:\nCPI8_2:\nCPI10_2:\nCPI11_6:\nCPI12_2:\nCPI13_4:\nCPI14_1:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI11_1:\nCPI14_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_4:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_5:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\nCPI11_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_8:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_9:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_10:\nCPI1_1:\nCPI2_4:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI10_1:\nCPI11_14:\nCPI13_1:\nCPI14_4:\n\t.cell 2852213850513516153367582212096\nCPI0_11:\n\t.cell 2088462070\nCPI0_12:\n\t.cell 3152796964\nCPI0_13:\n\t.cell 3803331015\nCPI0_14:\n\t.cell 4076725130\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 4103518880\nCPI0_17:\n\t.cell 4262470253\nCPI0_18:\n\t.cell 3803331016\nCPI0_19:\n\t.cell 3980728009\nCPI0_20:\n\t.cell 3986733060\nCPI0_21:\n\t.cell 3713797537\nCPI0_22:\n\t.cell 3713797538\nCPI0_23:\n\t.cell 3747854993\nCPI0_24:\n\t.cell 3778771761\nCPI0_25:\n\t.cell 3152796965\nCPI0_26:\n\t.cell 3170649129\nCPI0_27:\n\t.cell 3427623749\nCPI0_28:\n\t.cell 2757855404\nCPI0_29:\n\t.cell 2877899643\nCPI0_30:\n\t.cell 2877899644\nCPI0_31:\n\t.cell 3065339685\nCPI0_32:\n\t.cell 3103586615\nCPI0_33:\n\t.cell 2757855405\nCPI0_34:\n\t.cell 2839235489\nCPI0_35:\n\t.cell 2847684369\nCPI0_36:\n\t.cell 2376452954\nCPI0_37:\n\t.cell 2376452955\nCPI0_38:\n\t.cell 2640809377\nCPI0_39:\n\t.cell 2723122133\nCPI0_40:\n\t.cell 2088462071\nCPI0_41:\n\t.cell 2220280665\nCPI0_42:\n\t.cell 2321962454\nCPI0_43:\n\t.cell 1153943654\nCPI0_44:\n\t.cell 1553423034\nCPI0_45:\n\t.cell 1846986639\nCPI0_46:\n\t.cell 1846986640\nCPI0_47:\n\t.cell 1872738698\nCPI0_48:\n\t.cell 1901074598\nCPI0_49:\n\t.cell 1553423035\nCPI0_50:\n\t.cell 1676256797\nCPI0_51:\n\t.cell 1811892198\nCPI0_52:\n\t.cell 1222874530\nCPI0_53:\n\t.cell 1222874531\nCPI0_54:\n\t.cell 1366975063\nCPI0_55:\n\t.cell 1544768870\nCPI0_56:\n\t.cell 1153943655\nCPI0_57:\n\t.cell 1155179047\nCPI0_58:\n\t.cell 1198737554\nCPI0_59:\n\t.cell 773487948\nCPI0_60:\n\t.cell 977132944\nCPI0_61:\n\t.cell 977132945\nCPI0_62:\n\t.cell 1061922874\nCPI0_63:\n\t.cell 1075336119\nCPI0_64:\n\t.cell 773487949\nCPI0_65:\n\t.cell 793533407\nCPI0_66:\n\t.cell 844599674\nCPI0_67:\n\t.cell 423634830\nCPI0_68:\n\t.cell 423634831\nCPI0_69:\n\t.cell 602814139\nCPI0_70:\n\t.cell 669136355\nCPI0_71:\n\t.cell 20770955\nCPI0_72:\n\t.cell 253181954\nCPI0_73:\n\t.cell 267895973\nCPI0_74:\n\t.cell 2535301202817642044428229017600\nCPI0_75:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_76:\n\t.cell 2852213852874699394802404818944\nCPI0_77:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_78:\nCPI12_4:\nCPI13_7:\nCPI14_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_79:\n\t.cell 2535301200456458802993406410752\nCPI0_80:\nCPI12_0:\n\t.cell 36387217577141696539834861424258368761420197673782181793414050108270671036416\nCPI0_81:\nCPI12_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_82:\nCPI12_3:\n\t.cell 7922816251426433759354395033600\nCPI0_83:\nCPI12_5:\n\t.cell 35931405354438819285617658595495920097445416950975553418838194011793141006336\nCPI0_84:\nCPI2_1:\nCPI5_3:\nCPI8_3:\nCPI10_3:\nCPI11_7:\nCPI12_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_85:\nCPI11_10:\nCPI13_6:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207157\nCPI0_86:\n\t.cell 52659807869801627832262510997813479345293585015266786474190641726690624012288\nCPI0_87:\n\t.cell 36387217577141696539835725718333351628711840515630656354712003733776015517044\nCPI0_88:\n\t.cell 10458117451882892562347801444352\nCPI0_89:\n\t.cell 37268929072347479319882973977646622039547198692478371896653154821649582784512\nCPI0_90:\n\t.cell -65281\nCPI0_91:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_92:\n\t.cell 9320874622402338414002265186837945751613745187773596752754247302760547834106\nCPI0_93:\nCPI1_0:\nCPI2_3:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI10_0:\nCPI11_13:\nCPI13_0:\nCPI14_3:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_94:\n\t.cell 35477323689661671948852797192714902841531780316315243652547593457851088270080\nCPI0_95:\n\t.cell 35476746262579530006295505699313365636224236574709885331482285976688160407552\nCPI0_96:\nCPI1_2:\nCPI11_2:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207160\nCPI0_97:\nCPI11_12:\nCPI13_2:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207156\nCPI0_98:\nCPI13_3:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_99:\nCPI13_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_100:\nCPI13_8:\n\t.cell 47443033188551058709262449094704824964971970972350694975387646557955244442895\nCPI0_101:\nCPI11_8:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207158\nCPI0_102:\n\t.cell 16711680\nCPI0_103:\n\t.cell -15448274557970599020342357832252787846699662468216016471202955423099222326424\nCPI0_104:\n\t.cell 37747593056685209803443802286123549407705676235929409745208007568515101884416\nCPI0_105:\n\t.cell 7922816253787617000789217640448\nCPI0_106:\nCPI7_2:\n\t.cell -4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_107:\n\t.cell -39994767581283235888763294866136160713765770987569152610075762752638452984405\nCPI0_108:\n\t.cell 604800\nCPI0_109:\n\t.cell -604801\nCPI0_110:\nCPI2_2:\nCPI11_5:\n\t.cell 18446744073709551615\nCPI0_111:\nCPI6_2:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_112:\n\t.cell 42001972239423703571445541791532579481923828429046493072436209271122319847557\nCPI0_113:\n\t.cell 33213987989631693067883787898814815401940191597450698095377559960427851415552\nCPI0_114:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_115:\n\t.cell 20644549604082266639320257001935285394590065917650136896563126397825491550916\nCPI0_116:\n\t.cell 38196372293521921433411762994267191979435640421026993835185098046675554926592\nCPI0_117:\nCPI9_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_118:\n\t.cell 52652740479751763535009941535404145553681129640394898682527796418059897405440\nCPI0_119:\n\t.cell 47687999144296217495830161024715922219131381522400987873099915989063997325312\nCPI0_120:\n\t.cell 37747593056713065993060345481711466832112961560299923234275860844699068625440\nCPI0_121:\n\t.cell 86400\nCPI0_122:\n\t.cell 18446744073709551391\nCPI0_123:\n\t.cell 18446744073709551551\nCPI0_124:\n\t.cell 46568107024888644402963050616218326356669501393391917594788281012692919682643\nCPI0_125:\n\t.cell 31814455593045371808710356632721295737477827034060732347023710796849866057672\nCPI0_126:\n\t.cell 31869382407624765961839443156653874141101739777257194269273696000328205336576\nCPI0_127:\n\t.cell 36387217577141696539835341724850825828704487447770704987832489809917434134528\nCPI0_128:\n\t.cell 38178729326672700412052026471650177188377947303277119371474230891316403765248\nCPI0_129:\n\t.cell 38178729326566573358854814593691048060526621130111590168150889920220215902208\nCPI0_130:\n\t.cell 52188108014675451492885792905289607055164646762442067769437487926260617183232\nCPI0_131:\n\t.cell 38178729327303348024370194221094171269603331930812759559094865152464403787887\nCPI0_132:\n\t.cell 18446744073709551519\nCPI0_133:\n\t.cell -27514650628698614327385758459027185577806530076164398494097370979218518502413\nCPI0_134:\n\t.cell 33213987989631693067883787898815262639149058089589072814951568724554042834944\nCPI0_135:\n\t.cell 38178729326672700412052026471650289017067364532791592966292656364482157608960\nCPI0_136:\n\t.cell -17534146137427991961187300527469025899936537448588222841481668375017980690432\nCPI0_137:\n\t.cell 316912652418240591808998408192\nCPI0_138:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_139:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI0_140:\n\t.cell -43067023955033480567853467081775867294279059859270083075164962988079633625764\nCPI0_141:\n\t.cell 36381875572075844324894750588325429381126206888783052179668393946721502458479\nCPI0_142:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_143:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI0_144:\n\t.cell -51570510111590677826358578368815064033314002580121246528039059915098583728128\nCPI0_145:\n\t.cell -9685120155672097683973861192804685257473605254391586424766234667955514533005\nCPI0_146:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_147:\n\t.cell 10141204801825835211973625643008\nCPI0_148:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_149:\n\t.cell 5387515050969974956360988622848\nCPI0_150:\n\t.cell 38843706945183341624331870532237280948374425637807400008023894331521926152796\nCPI0_151:\n\t.cell 54011551340199394326802475052324827152176255806260853321975479828561184948224\nCPI0_152:\n\t.cell 35477323689661671948852797176678302992950977540387061004118189797849269825312\nCPI0_153:\n\t.cell 28449210373611454402985489541711497976320196644878638971820198805980867198976\nCPI0_154:\n\t.cell 7605903601369376408980219232256\nCPI0_155:\nCPI11_0:\n\t.cell 18446744073709551616\nCPI11_4:\n\t.cell -40515948540925020973265170959111588746623062155340076979737421334906745207159\nCPI11_9:\n\t.cell 65536\nCPI11_11:\n\t.cell -16777216\n","bytecode":{"object":"00030000000000020011000000000002000000000f01034f00020000000f035500000000010f00190000006001100270000005870010019d00000587011001970000000102200190000000b80000c13d0000008002000039001100000002001d000000400020043f000000040210008c000000de0000413d00000000020f043b000000e002200270000005920320009c000000e00000213d000005b20320009c000001410000213d000005c20320009c000001cc0000213d000005ca0320009c000003410000213d000005ce0320009c000006b50000613d000005cf0320009c000004c30000613d000005d00220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000000b01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000801043b000000000108041a000c00000001001d000006220110009c000007720000813d0000000c0100002900000005031002100000003f01300039000000200200008a000000000421016f000000400200043d0000000001420019000b00000002001d000000000221004b00000000020000190000000102004039000005f50510009c000007720000213d0000000102200190000007720000c13d000000400010043f0000000c010000290000000b0200002900000000091204360000001f0130018f0000000002000031000000020220036700000005033002720000005c0000613d000000000500001900000005065002100000000007690019000000000662034f000000000606043b00000000006704350000000105500039000000000635004b000000540000413d000000000501004b0000005e0000613d000000400600043d0000000005460019000a00000006001d000000000665004b00000000060000190000000106004039000005f50750009c000007720000213d0000000106600190000007720000c13d000800000009001d001000000008001d000000400050043f0000000c050000290000000a060000290000000008560436000000000503004b000000790000613d000000000500001900000005065002100000000007680019000000000662034f000000000606043b00000000006704350000000105500039000000000635004b000000710000413d000700000008001d000000000501004b0000007c0000613d000000400500043d0000000004450019000900000005001d000000000554004b00000000050000190000000105004039000005f50640009c000007720000213d0000000105500190000007720000c13d000000400040043f0000000c0400002900000009050000290000000007450436000000000403004b000000950000613d000000000400001900000005054002100000000006570019000000000552034f000000000505043b00000000005604350000000104400039000000000534004b0000008d0000413d000600000007001d000000000101004b000000980000613d0000000c0100006b000000100300002900000d3c0000c13d000000400200043d001100000002001d00000060010000390000000001120436001000000001001d00000060022000390000000b01000029161713f30000040f0000000002010019000000110120006a000000100300002900000000001304350000000a01000029161713f30000040f000000000201001900000011030000290000004001300039000000000332004900000000003104350000000901000029161713f30000040f000000110400002900000000014100490000058702000041000005870340009c0000000004028019000005870310009c0000000001028019000006f90000013d0000000002000416000000000202004b000000de0000c13d0000009f021000390000058802200197000000400020043f0000001f0210018f0000000503100272000000ca0000613d0000000004000019000000050540021000000000065f034f000000000606043b000000800550003900000000006504350000000104400039000000000534004b000000c20000413d000000000402004b000000d90000613d000000050330021000000000043f034f00000003022002100000008003300039000000000503043300000000052501cf000000000525022f000000000404043b0000010002200089000000000424022f00000000022401cf000000000252019f0000000000230435000000200110008c000000de0000413d000000800300043d000005890130009c000001560000a13d00000000010000190000161900010430000005930320009c000001660000213d000005a30320009c000002c40000213d000005ab0320009c000003540000213d000005af0320009c000006fd0000613d000005b00320009c000004ce0000613d000005b10220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000600110008c000000de0000413d0000004401f00370000000000401043b0000002401f00370000000000201043b0000000401f00370000000000301043b0000000101000039000000000101041a000000ff01100190000008460000c13d0000000705000039000000000105041a000000000113004b00000a080000813d000f00000005001d000e00000004001d001100000002001d001000000003001d00000000003004350000000d01000039000d00000001001d000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000000110110006b00000bd70000813d0000000f03000029000000000103041a0000001002000029000000000121004b0000135c0000a13d000000000030043500000005122000c9000b00000002001d000005e801200041000000000101041a000c00000001001d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d000000000101043b0000000c0110006c00000d070000813d0000000f03000029000000000103041a000000100110006c0000135c0000a13d00000000003004350000000b01000029000005dc01100041000000000101041a000000ff0110019000000dcf0000c13d000000400100043d00000044021000390000060e03000041000000000032043500000024021000390000001a03000039000007360000013d000005b30320009c000002e90000213d000005bb0320009c000003e00000213d000005bf0320009c0000070e0000613d000005c00320009c000004e80000613d000005c10220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d000003510000013d0000000101000039000000000010041b0000000006000411000000000206004b000002fc0000c13d000000400100043d00000590020000410000000000210435000000040210003900000000000204350000058702000041000005870310009c0000000001028019000000400110021000000591011001c70000161900010430000005940320009c0000031c0000213d0000059c0320009c000003ff0000213d000005a00320009c000007130000613d000005a10320009c000004f50000613d000005a20220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000600110008c000000de0000413d0000000401f00370000000000101043b001100000001001d000005890110009c000000de0000213d0000002401f00370000000000101043b001000000001001d0000004401f00370000000000201043b000000000102004b0000000001000019000000010100c039000f00000002001d000000000112004b000000de0000c13d0000000101000039000000000101041a000000080110027000000589021001970000000001000411000000000212004b00000ab10000c13d0000000603000039000000000103041a0000001002000029000000000112004b00000bde0000813d000d00000003001d000005f101200041000c00000001001d000000000101041a000e00000001001d000000110100002900000000001004350000000f01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a0000000e0320006c000008e10000413d0000000e0220006a000000000021041b0000000f0100006b00000d1c0000c13d0000000d01000029000000000101041a000000100110006c0000135c0000a13d0000000d0100002900000000001004350000000c01000029000000000001041b000000400100043d00000040021000390000000e03000029000000000032043500000020021000390000000f0300002900000000003204350000001002000029000000000021043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005e2011001c70000800d020000390000000203000039000005f20400004100000aea0000013d000005c30320009c000004710000213d000005c70320009c000007400000613d000005c80320009c000005010000613d000005c90220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040210008a000000800220008c000000de0000413d0000000402f00370000000000302043b000005f50230009c000000de0000213d0000002302300039000005fc04000041000000000512004b00000000050000190000000005048019000005fc02200197000000000602004b0000000004008019000005fc0220009c000000000405c019000000000204004b000000de0000c13d000000040430003900000000024f034f000000000202043b000005f50520009c000007720000213d000000bf052000390010002000000092000000100550017f000005f50650009c000007720000213d000000400050043f000000800020043f00000000032300190000002403300039000000000313004b000000de0000213d000000200340003900000000033f034f0000001f0420018f0000000505200272000002080000613d00000000060000190000000507600210000000000873034f000000000808043b000000a00770003900000000008704350000000106600039000000000756004b000002000000413d000000000604004b000002170000613d0000000505500210000000000353034f0000000304400210000000a005500039000000000605043300000000064601cf000000000646022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000363019f0000000000350435000000a00220003900000000000204350000002402f00370000000000302043b000005f50230009c000000de0000213d0000002302300039000000000212004b000000de0000813d000000040230003900000000042f034f000000000504043b000005f50450009c000007720000213d00000005045002100000003f06400039000000100660017f000000400700043d0000000006670019000f00000007001d000000000776004b00000000070000190000000107004039000005f50860009c000007720000213d0000000107700190000007720000c13d000000400060043f0000000f060000290000000006560436000900000006001d00000024033000390000000004340019000000000614004b000000de0000213d000000000505004b00000e2f0000c13d0000006401f00370000000000101043b0000004402f00370000000000202043b000e00000002001d0000000102000039000d00000002001d000000000202041a000000080220027000000589022001970000000003000411000400000003001d000000000232004b00000eb90000c13d0000000302000039000000000302041a000800000003001d0000000103300039000000000032041b000c0600201000d5000000000201004b000002550000613d0000000c211000f9000006000110009c000008e10000c13d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d000000000101043b0003000c0010002d000000030110006b000000000100001900000001010040390000000101100190000008e10000c13d000000400100043d000006010210009c000007720000213d000000e002100039000000400020043f000000c002100039000000030300002900000000003204350000000e04000029000000000204004b0000000002000019000000010200c039000000a003100039000000000023043500000060021000390000000d030000290000000000320435000000400210003900000000004204350000002002100039000000110300002900000000003204350000000402000029000000000021043500000080021000390000000000020435161714860000040f0000000f010000290000000001010433000000000101004b000011c70000c13d000000400100043d000000600200003900000000032104360000006004100039000000800200043d00000000002404350000008004100039000000000502004b000002980000613d00000000050000190000000006450019000000a007500039000000000707043300000000007604350000002005500039000000000625004b000002910000413d000000000542001900000000000504350000001f02200039000000100220017f0000000002420019000000000412004900000000004304350000000f0c00002900000000030c04330000000000320435000000050430021000000000044200190000002006400039000000000403004b0000128c0000c13d00000040021000390000000303000029000000000032043500000000021600490000058704000041000005870310009c00000000010480190000004001100210000005870320009c00000000020480190000006002200210000000000112019f0000000002000414000005870320009c0000000002048019000000c002200210000000000121019f0000058c011001c70000800d0200003900000003030000390000061804000041000000040500002900000008060000291617160d0000040f0000000101200190000000de0000613d000000400100043d0000000802000029000009ff0000013d000005a40320009c000004860000213d000005a80320009c0000074d0000613d000005a90320009c000005380000613d000005aa0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b001100000001001d0000000401f00370000000000101043b00000000001004350000001501000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000079b0000013d000005b40320009c000004920000213d000005b80320009c000007760000613d000005b90320009c000005680000613d000005ba0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b161715760000040f0000000001000019000016180001042e00000008026002100000058a02200197001100000003001d000000000301041a0000058b04300197000000000224019f000000000021041b00000587010000410000000002000414000005870420009c0000000002018019000000c0012002100000058c011001c7000000080230027000000589052001970000800d0200003900000003030000390000058d040000411617160d0000040f00000011030000290000000101200190000000de0000613d0000000201000039000000000201041a0000058e02200197000000000232019f000000000021041b0000002001000039000001000010044300000120000004430000058f01000041000016180001042e000005950320009c000004af0000213d000005990320009c0000077f0000613d0000059a0320009c0000056e0000613d0000059b0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b001100000001001d0000000401f00370000000000101043b00000000001004350000001301000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d000008030000013d000005cb0320009c000007a10000613d000005cc0320009c0000057c0000613d000005cd0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d000000000010043500000009010000390000081f0000013d000005ac0320009c000007ac0000613d000005ad0320009c000005ad0000613d000005ae0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000301043b0000000101000039000000000101041a000000080110027000000589021001970000000001000411000000000212004b0000093d0000c13d0000000701000039000000000201041a000000000223004b0000083e0000813d000000000010043500000005163000c9000005e704600041000005dc05600041000000000105041a000000ff02100190000006640000613d0000ff000110019000000a840000c13d001100000005001d000e00000004001d000d00000003001d000f00000006001d000005e801600041000000000101041a001000000001001d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d0000001103000029000000000203041a000000000101043b000000100110006c000003900000213d000000ff01200190000003a90000613d000001000100008a000000000112016f000000000013041b000000400100043d0000000d020000290000000002210436000000000002043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005d5011001c70000800d020000390000000103000039000005eb040000411617160d0000040f0000000101200190000000de0000613d0000001101000029000000000201041a0000000f01000029000005ec01100041001000000001001d000000000101041a000f00000001001d000005ed0120019800000c8f0000c13d000005e10120019700000100011001bf0000001102000029000000000012041b0000001001000029000000000201041a00000003312000c9000000000302004b001100000000001d00000d9b0000c13d000000641210011a001000000002001d000000110120006b000008e10000413d0000000e01000029000000000101041a000005890110019700000000001004350000000901000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d00000010030000290000001102300069000000000101043b000000000401041a0000000003240019000000000443004b000000000400001900000001040040390000000104400190000008e10000c13d000000000031041b0000000e01000029000000000301041a000000400100043d000000000021043500000587020000410000000004000414000006320000013d000005bc0320009c000007b40000613d000005bd0320009c0000063f0000613d000005be0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000000e01000039000000200010043f0000004001000039001000000001001d00110000000f0353161715fb0000040f000000110200035f0000002402200370000000000202043b0000000000200435000000200010043f0000001001000029161715fb0000040f0000077a0000013d0000059d0320009c000007c20000613d0000059e0320009c0000064a0000613d0000059f0220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b000900000001001d0000000401f00370000000000301043b0000000101000039000500000001001d000000000101041a000000080110027000000589021001970000000001000411000000000212004b0000093e0000c13d000000000100041a000000020110008c0000074b0000613d0000000201000039000000000010041b0000000701000039000d00000001001d000000000101041a000e00000003001d000000000131004b0000135c0000a13d0000000e0100002900000000001004350000000d01000039000c00000001001d000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000b00000001001d000000000101004b001100000000001d000400000000001d00000be80000c13d0000000e0100002900000000001004350000000c01000029000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000090220006c0000135c0000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d00000009020000290000000102200210000000000101043b00000000012100190000000101100039000000000201041a000800000002001d000000040120006b000008e10000413d0000000e0100002900000005211000c9000005dc01100041000200000001001d000000000101041a000000ff0210019000000e250000c13d0000ff000110019000000ec00000c13d000000080100006b00000f1c0000c13d000000400100043d0000004402100039000005e603000041000000000032043500000024021000390000001b03000039000007360000013d000005c40320009c000007cf0000613d000005c50320009c0000066c0000613d000005c60220009c000000de0000c13d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b161713840000040f0000000301100039000000000101041a000000ff011001900000000001000019000000010100c0390000080b0000013d000005a50320009c000007e70000613d000005a60320009c0000067a0000613d000005a70120009c000000de0000c13d0000000001000416000000000101004b000000de0000c13d0000000201000039000000000101041a000007b20000013d000005b50320009c000008130000613d000005b60120009c000006960000613d000005b70120009c000000de0000c13d0000000001000416000000000101004b000000de0000c13d0000000101000039000000000201041a000000080320027000000589033001970000000005000411000000000353004b00000a030000c13d000005d402200197000000000021041b00000587010000410000000002000414000005870320009c0000000002018019000000c0012002100000058c011001c70000800d0200003900000003030000390000058d04000041000000000600001900000aac0000013d000005960320009c000008260000613d000005970320009c000006a80000613d000005980120009c000000de0000c13d0000000001000416000000000101004b000000de0000c13d000000010100008a0000000702000039000000000202041a0000000303000039000000000303041a000000000332004b000008230000c13d000000000102004b000008e10000613d000000010120008a000008230000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000000000010043500000008010000390000081f0000013d0000000001000416000000000101004b000000de0000c13d0000000103000039000000000203041a000000080120027000000589041001970000000001000411000000000414004b0000084a0000c13d000000ff04200190000008460000c13d000001000400008a000000000242016f00000001022001bf000000000023041b000000800010043f00000587010000410000000002000414000005870420009c0000000002018019000000c00120021000000611011001c70000800d02000039000006120400004100000aac0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000001201000039000007db0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d161715b70000040f0000080b0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d0000002402f00370000000000202043b001100000002001d00000000001004350000000c01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000001102000029161714000000040f0000000202100039000000000202041a000000000301041a0000000101100039000000000101041a000000400400043d0000002005400039000000000015043500000040014000390000058905200197000000000051043500000619012001980000000001000019000000010100c0390000006002400039000000000012043500000000003404350000058701000041000005870240009c000000000401801900000040014002100000061a011001c7000016180001042e0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b001100000001001d0000000401f00370000000000101043b00000000001004350000000d01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000001102000029161714690000040f001100000001001d161713920000040f00000011020000290000000102200039000000000202041a001100000002001d000000400300043d000f00000003001d00000040020000390000000002230436001000000002001d0000004002300039161713e00000040f0000001102000029000000100300002900000000002304350000000f04000029000006f30000013d0000000002000416000000000202004b000000de0000c13d161714550000040f161715320000040f0000080b0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b0000000602000039000000000202041a000000000221004b000000de0000813d1617142b0000040f0000079d0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d0000002402f00370000000000202043b001100000002001d00000000001004350000000b01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000001102000029161714000000040f0000000102100039000000000202041a000000000301041a0000000201100039000000000101041a000000400400043d000000400540003900000000001504350000002001400039000000000021043500000000003404350000058701000041000005870240009c0000000004018019000000400140021000000621011001c7000016180001042e0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000301043b0000000101000039000000000101041a000000080110027000000589021001970000000001000411000000000212004b000008800000c13d0000000701000039000000000201041a000000000223004b0000083e0000813d000000000010043500000005163000c9000005e704600041000005dc05600041000000000105041a000000ff02100190000006640000613d0000ff000110019000000a840000c13d001100000005001d000e00000004001d000d00000003001d000f00000006001d000005e801600041000000000101041a001000000001001d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d0000001103000029000000000203041a000000000101043b000000100110006c000005e30000213d000000ff01200190000005fc0000613d000001000100008a000000000112016f000000000013041b000000400100043d0000000d020000290000000002210436000000000002043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005d5011001c70000800d020000390000000103000039000005eb040000411617160d0000040f0000000101200190000000de0000613d0000001101000029000000000201041a0000000f01000029000005ec01100041001000000001001d000000000101041a000f00000001001d000005ed0120019800000c370000c13d000005e10120019700000100011001bf0000001102000029000000000012041b0000001001000029000000000201041a00000003312000c9000000000302004b001100000000001d00000d920000c13d000000641210011a001000000002001d000000110120006b000008e10000413d0000000e01000029000000000101041a000005890110019700000000001004350000000901000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d00000010030000290000001102300069000000000101043b000000000401041a0000000003240019000000000443004b000000000400001900000001040040390000000104400190000008e10000c13d000000000031041b0000000e01000029000000000301041a000000400100043d000000000021043500000587020000410000000004000414000005870540009c0000000004028019000005870510009c00000000010280190000004001100210000000c002400210000000000112019f000005db011001c700000589063001970000800d020000390000000303000039000006040400004100000a820000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b00000000001004350000000d010000390000081f0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000301043b0000000101000039000000000101041a000000080110027000000589021001970000000001000411000000000212004b000008810000c13d0000000701000039000000000201041a000000000223004b0000083e0000813d000000000010043500000005163000c9000005e704600041000005dc05600041000000000105041a000000ff0210019000000a100000c13d000005d801000041000000800010043f0000002001000039000000840010043f0000001901000039000000a40010043f000006060100004100000be50000013d0000000001000416000000000101004b000000de0000c13d0000000103000039000000000203041a000000080120027000000589041001970000000001000411000000000414004b0000093e0000c13d000000ff04200190000009430000c13d0000061701000041000008470000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000201000039000000000201041a0000000401f00370000000000301043b000005f901000041000000800010043f0000000001000411001100000001001d000000840010043f0000000001000410000000a40010043f001000000003001d000000c40030043f00000000010004140000058902200197000000040320008c000008820000c13d0000000103000031000000200130008c00000000040300190000002004008039000008ac0000013d0000000001000416000000000101004b000000de0000c13d0000000201000039000000000201041a0000061501000041000000800010043f0000000001000410000000840010043f00000000010004140000058902200197000000040320008c0000084b0000c13d0000000103000031000000200130008c00000000040300190000002004008039000008750000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000001601000039000007db0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b0000000702000039000000000202041a000000000221004b000000de0000813d161713840000040f0000000002010019000e00000002001d000000000102041a000f00000001001d0000000101200039161713920000040f0000000e030000290000000202300039000000000202041a001100000002001d0000000302300039000000000202041a001000000002001d0000000402300039000000000202041a000e00000002001d000000e002000039000000400400043d000d00000004001d000000200340003900000000002304350000000f0200002900000589022001970000000000240435000000e002400039161713e00000040f0000000d04000029000000c0024000390000000e0300002900000000003204350000001005000029000005ed025001980000000002000019000000010200c039000000a00340003900000000002304350000ff00025001900000000002000019000000010200c03900000080034000390000000000230435000000ff025001900000000002000019000000010200c0390000006003400039000000000023043500000040024000390000001103000029000000000032043500000000014100490000058702000041000005870310009c0000000001028019000005870340009c000000000402801900000040024002100000006001100210000000000121019f000016180001042e0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000201043b000000000102004b000008c80000c13d000005d801000041000000800010043f0000002001000039000000840010043f000000a40010043f000006140100004100000be50000013d0000000001000416000000000101004b000000de0000c13d0000000701000039000008220000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b001100000001001d0000000001000411001000000001001d00000000001004350000000901000039000f00000001001d000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000000110110006c000009900000813d000000400100043d0000004402100039000005f8030000410000000000320435000000240210003900000014030000390000000000320435000005d80200004100000000002104350000000402100039000000200300003900000000003204350000058702000041000005870310009c0000000001028019000008c50000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000201043b000000000100041a000000020110008c000008e50000c13d0000062001000041000008470000013d0000000002000416000000000202004b000000de0000c13d000000040210008a000000c00220008c000000de0000413d0000000402f00370000000000202043b000f00000002001d000005890320009c000000de0000213d0000002403f00370000000000403043b000005f50340009c000000de0000213d0000002303400039000005fc05000041000000000613004b00000000060000190000000006058019000005fc03300197000000000703004b0000000005008019000005fc0330009c000000000506c019000000000305004b000000de0000c13d000000040540003900000000035f034f000000000303043b000005f50630009c000007720000213d000000bf063000390010002000000092000000100660017f000005f50760009c00000aec0000a13d000005e401000041000000000010043500000041010000390000135f0000013d0000000001000416000000000101004b000000de0000c13d0000000101000039000000000101041a000000ff011001900000000001000019000000010100c039000008230000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b001100000001001d0000000401f00370000000000101043b00000000001004350000001401000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000001102000029161714390000040f0000000302200210000000000101041a000000000121022f000008090000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d0000081d0000013d0000000001000416000000000101004b000000de0000c13d0000000101000039000000000101041a00000008011002700000058901100197000008230000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b0000000502000039000000000202041a000000000221004b000000de0000813d1617141d0000040f000008050000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000000f010000390000081f0000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000001101000039000000200010043f0000004001000039001000000001001d00110000000f0353161715fb0000040f000000110200035f0000002402200370000000000202043b0000000000200435000000200010043f0000001001000029000008210000013d0000000002000416000000000202004b000000de0000c13d000000040110008a000000400110008c000000de0000413d0000002401f00370000000000101043b001100000001001d0000000401f00370000000000101043b00000000001004350000000a01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b000000de0000813d0000001102000029161714390000040f0000000302200210000000000101041a000000000121022f0000058901100197000000ff0220008c0000000001002019000000400200043d00000000001204350000058701000041000005870320009c00000000020180190000004001200210000005d6011001c7000016180001042e0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000101043b000005890210009c000000de0000213d00000000001004350000001001000039000000200010043f0000004001000039161715fb0000040f000000000101041a000000800010043f000005d101000041000016180001042e0000000002000416000000000202004b000000de0000c13d000000040110008a000000200110008c000000de0000413d0000000401f00370000000000601043b000005890160009c000000de0000213d0000000101000039000000000201041a000000080320027000000589033001970000000005000411000000000353004b00000a030000c13d000000000306004b00000a8c0000c13d0000059001000041000000800010043f000000840000043f000005d3010000410000161900010430000005d801000041000000800010043f0000002001000039000000840010043f0000001801000039000000a40010043f000005d70100004100000be50000013d0000060f01000041000000800010043f000006100100004100001619000104300000093e0000013d0000058703000041000005870410009c0000000001038019000000c001100210000005d3011001c7161716120000040f000000000301001900000060033002700000058703300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000008630000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b0000085b0000413d000000000705004b000008720000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000009500000613d0000001f01400039000000600110018f00000080011001bf000000400010043f000000200230008c000000de0000413d000000800200043d00000000002104350000004001100210000005d6011001c7000016180001042e0000093e0000013d0000093e0000013d0000058703000041000005870410009c0000000001038019000000c001100210000005f0011001c71617160d0000040f000000000301001900000060033002700000058703300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000089a0000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000008920000413d000000000705004b000008a90000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00000001022001900000096d0000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200330008c000000de0000413d000000800300043d000000000403004b0000000004000019000000010400c039000000000443004b000000de0000c13d000000000303004b00000ab20000c13d000005d803000041000000000031043500000084032001bf00000020040000390000000000430435000000c403200039000005fb040000410000000000430435000000a4022000390000000f0300003900000000003204350000004001100210000005d9011001c70000161900010430001100000002001d0000000001000411001000000001001d00000000001004350000000901000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000301041a00000011040000290000000002430019000000000332004b00000000030000190000000103004039000000010330019000000a9b0000613d000005e401000041000000000010043500000011010000390000135f0000013d001100000002001d0000000201000039000f00000001001d000000000010041b0000000001000411001000000001001d000005890110019700000000001004350000000901000039000e00000001001d000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000d00000001001d0000001001000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000c00000001001d0000000f01000039000b00000001001d000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a0000000c01200029000000000221004b000000000200001900000001020040390000000102200190000008e10000c13d0000000d031000690000000d0130006c00000000010000190000000101002039000000000101004b000000000300c019000000400500043d00000024015000390000000402500039000000110330006c00000c250000813d000005d8030000410000000000350435000000200300003900000000003204350000002802000039000000000021043500000064015000390000061e02000041000000000021043500000044015000390000061f0200004100000000002104350000058701000041000005870250009c00000000050180190000004001500210000005df011001c700001619000104300000093e0000013d000005d202000041000000800020043f000000840010043f000005d3010000410000161900010430000001000400008a000000000242016f000000000023041b000000800010043f00000587010000410000000002000414000005870420009c0000000002018019000000c00120021000000611011001c70000800d02000039000006160400004100000aac0000013d000000400200043d0000001f0430018f00000005053002720000095d0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000009550000413d000000000604004b0000096c0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009890000013d000000400200043d0000001f0430018f00000005053002720000097a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000009720000413d000000000604004b000009890000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f00000000001504350000058701000041000005870420009c000000000201801900000040012002100000006002300210000000000121019f0000161900010430000000100100002900000000001004350000000f01000029000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000f00000001001d0000001001000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a0000000f03000029000000000213004b000008e10000413d0000000001130049000000110110006c000007300000413d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d000000000101043b000f05f300100045000005f40110009c000008e10000213d0000000401000039000000000201041a000e00000002001d0000000102200039000000000021041b000000110100006b00000e0d0000c13d000000110100006b0000000001000019000000010100c0390000000503000039000000000203041a000005f50420009c000007720000213d0000000104200039000000000043041b000005f602200041000000000302041a0000058e0330019700000010033001af000000000032041b0000000603000039000000000203041a000005f50420009c000007720000213d0000000104200039000000000043041b0000000000300435000005f1022000410000001104000029000000000042041b000000400200043d00000040032000390000000f050000290000000000530435000000010110018f00000020032000390000000000130435000000000042043500000587040000410000000001000414000005870310009c0000000001048019000005870320009c00000000020480190000004002200210000000c001100210000000000121019f000005e2011001c70000800d020000390000000303000039000005f70400004100000010050000290000000e060000291617160d0000040f0000000101200190000000de0000613d000000400100043d0000000e020000290000000000210435000005870210009c00000587010080410000087d0000013d000005d201000041000000800010043f000000840050043f000005d3010000410000161900010430000005d801000041000000800010043f0000002001000039000000840010043f0000001b01000039000000a40010043f000006070100004100000be50000013d0000ff000110019000000a840000c13d001100000005001d000f00000004001d000d00000003001d000e00000006001d000005e801600041000000000101041a001000000001001d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d0000001103000029000000000203041a000000000101043b000000100110006c00000a2c0000213d000000ff0120019000000a450000613d000001000100008a000000000112016f000000000013041b000000400100043d0000000d020000290000000002210436000000000002043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005d5011001c70000800d020000390000000103000039000005eb040000411617160d0000040f0000000101200190000000de0000613d0000001101000029000000000201041a0000000e01000029000005ec01100041001000000001001d000000000101041a000e00000001001d000005ed0120019800000c630000c13d000005e10120019700000100011001bf0000001102000029000000000012041b0000001001000029000000000101041a00110005201000cd000000000201004b00000a580000613d00000011211000f9000000050110008c000008e10000c13d0000000f01000029000000000101041a000005890110019700000000001004350000000901000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000001102000029000000643220011a000000000101043b000000000301041a000000000423004b000008e10000413d0000000003230049000000000031041b0000000f01000029000000000301041a000000400100043d000000000021043500000587020000410000000004000414000005870540009c0000000004028019000005870510009c00000000010280190000004001100210000000c002400210000000000112019f000005db011001c700000589063001970000800d020000390000000303000039000005ee040000410000000d0500002900000aac0000013d000005d801000041000000800010043f0000002001000039000000840010043f0000001501000039000000a40010043f000006050100004100000be50000013d000005d40220019700000008036002100000058a03300197000000000232019f000000000021041b00000587010000410000000002000414000005870320009c0000000002018019000000c0012002100000058c011001c70000800d0200003900000003030000390000058d0400004100000aac0000013d000000000021041b000000400100043d000000000041043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005db011001c70000800d020000390000000203000039000006130400004100000010050000291617160d0000040f0000000101200190000000de0000613d0000000001000019000016180001042e0000093e0000013d000000110100002900000000001004350000000901000039000f00000001001d000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000e00100010002d0000000e0110006b000000000100001900000001010040390000000101100190000008e10000c13d000000110100002900000000001004350000000f01000029000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000e02000029000000000021041b000000400100043d000000100200002900000000002104350000000002000414000005870320009c00000587040000410000000002048019000005870310009c00000000010480190000004001100210000000c002200210000000000112019f000005db011001c70000800d020000390000000203000039000005fa04000041000000110500002900000aac0000013d000000400060043f000000800030043f00000000043400190000002404400039000000000414004b000000de0000213d000000200450003900000000020f034f00000000044f034f0000001f0530018f000000050630027200000b010000613d00000000070000190000000508700210000000000984034f000000000909043b000000a00880003900000000009804350000000107700039000000000867004b00000af90000413d000000000705004b00000b100000613d0000000506600210000000000464034f0000000305500210000000a006600039000000000706043300000000075701cf000000000757022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000474019f0000000000460435000000a0033000390000000000030435000000000f02034f0000004403f00370000000000303043b000300000003001d0000006403f00370000000000403043b000005f50340009c000000de0000213d0000002303400039000000000313004b000000de0000813d000000040340003900000000053f034f000000000605043b000005f50560009c000007720000213d00000005056002100000003f07500039000000100770017f000000400800043d0000000007780019000e00000008001d000000000887004b00000000080000190000000108004039000005f50970009c000007720000213d0000000108800190000007720000c13d000000400070043f0000000e070000290000000007670436000800000007001d00000024044000390000000005450019000000000715004b000000de0000213d000000000606004b00000ec70000c13d000000a401f00370000000000101043b0000008403f00370000000000303043b0000000102000039000d00000002001d000000000402041a000000080440027000000589054001970000000004000411000000000545004b00000f160000c13d0000000504000039000000000404041a000000000434004b0000135c0000a13d0000000604000039000000000504041a000000000535004b0000135c0000a13d000005f605300041000000000505041a00000000004004350000000f02000029000205890020019b0000058902500197000000020220006c000010120000c13d000005f102300041000000000202041a000000030220006b000012750000c13d000f0600201000d5000000000201004b00000b5f0000613d0000000f211000f9000006000110009c000008e10000c13d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f000000010220019000000bd60000613d000000000101043b0001000f0010002d000000010110006b000000000100001900000001010040390000000101100190000008e10000c13d000000400100043d000006010210009c000007720000213d000000e002100039000000400020043f000000c002100039000000010300002900000000003204350000000304000029000000000204004b0000000002000019000000010200c039000000a003100039000000000023043500000060021000390000000d030000290000000000320435000000400210003900000000004204350000002002100039000000110300002900000000003204350000000202000029000000000021043500000080021000390000000000020435161714860000040f0000000301000039000000000201041a000700000002001d0000000102200039000000000021041b0000000e010000290000000001010433000000000101004b000012ae0000c13d000000400100043d000000110200002900000000022104360000008004100039000000800300043d0000000000340435000000a004100039000000000503004b00000ba70000613d00000000050000190000000006450019000000a007500039000000000707043300000000007604350000002005500039000000000635004b00000ba00000413d00000000054300190000000000050435000000030500002900000000005204350000001f02300039000000100220017f00000000024200190000000003120049000000400410003900000000003404350000000e0c00002900000000030c04330000000000320435000000050430021000000000044200190000002006400039000000000403004b000013660000c13d00000060021000390000000103000029000000000032043500000000021600490000058704000041000005870310009c00000000010480190000004001100210000005870320009c00000000020480190000006002200210000000000112019f0000000002000414000005870320009c0000000002048019000000c002200210000000000121019f0000058c011001c70000800d0200003900000003030000390000060304000041000000020500002900000007060000291617160d0000040f0000000101200190000000de0000613d000000400100043d0000000702000029000009ff0000013d000000000001042f000000400100043d00000044021000390000060803000041000000000032043500000024021000390000001903000039000007360000013d000005d801000041000000800010043f0000002001000039000000840010043f0000001901000039000000a40010043f000005ef01000041000000c40010043f000005f0010000410000161900010430001080100000003d00000000040000190000000003000019001100000004001d000f00000003001d0000000d01000029000000000101041a0000000e02000029000000000121004b00000da40000a13d00000000002004350000000c01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000001002000029161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006c00000dab0000a13d00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000001002000029161716120000040f0000000102200190000000de0000613d00000011040000290000000102400210000000000101043b00000000012100190000000101100039000000000101041a0000000f03100029000000000113004b000000000100001900000001010040390000000101100190000008e10000c13d00000001044000390000000b0140006c00000beb0000413d000000000103004b001100000000001d000400000000001d000004390000613d00110050103000cd00000011213000f9000000500110008c000400000003001d000008e10000c13d000004390000013d0000000f03000029000000000303041a0000061b04000041000d00000005001d0000000000450435000000100400002900000000004204350000001102000029000000000021043500000000010004140000058902300197000000040320008c00000cbb0000c13d0000000103000031000000200130008c0000000004030019000000200400803900000ceb0000013d0000000e01000029000000000101041a0000058901100197001100000001001d00000000001004350000000f01000039000c00000001001d000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000b00000001001d000000110100002900000000001004350000000c01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b030000290000000f0230006a000000000332004b00000000030000190000000103002039000000000303004b000000000200c019000000000101043b000000000021041b000006070000013d0000000f01000029000000000101041a0000058901100197001100000001001d00000000001004350000000f01000039000c00000001001d000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000b00000001001d000000110100002900000000001004350000000c01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b030000290000000e0230006a000000000332004b00000000030000190000000103002039000000000303004b000000000200c019000000000101043b000000000021041b00000a500000013d0000000e01000029000000000101041a0000058901100197001100000001001d00000000001004350000000f01000039000c00000001001d000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000b00000001001d000000110100002900000000001004350000000c01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b030000290000000f0230006a000000000332004b00000000030000190000000103002039000000000303004b000000000200c019000000000101043b000000000021041b000003b40000013d0000058703000041000005870410009c00000000010380190000000d05000029000005870450009c00000000030540190000004003300210000000c001100210000000000131019f0000061c011001c71617160d0000040f0000000d0a000029000000000301001900000060033002700000058703300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200000cd90000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000cd10000413d000000000705004b00000ce80000613d0000000506600210000000000761034f0000000d066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000000db20000613d0000001f01400039000000600210018f0000000d01200029000000000221004b00000000020000190000000102004039000005f50410009c000007720000213d0000000102200190000007720000c13d000000400010043f000000200230008c000000de0000413d0000000d020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b000000de0000c13d000000000202004b00000e7d0000c13d0000004402100039000005fb03000041000000000032043500000024021000390000000b03000029000007360000013d000000400100043d00000064021000390000060903000041000000000032043500000044021000390000060a03000041000000000032043500000024021000390000002d030000390000000000320435000005d80200004100000000002104350000000402100039000000200300003900000000003204350000058702000041000005870310009c00000000010280190000004001100210000005df011001c700001619000104300000000e02000029000b000a102000cd000000000102004b00000d240000613d0000000b020000290000000e212000fa0000000a0110008c000008e10000c13d000000110100002900000000001004350000000901000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b02000029000000643220011a000000000101043b000000000301041a000000000423004b000008e10000413d000e000e002000710000000002230049000000000021041b000001ad0000013d000d80100000003d0000000004000019000000000103041a000000000141004b0000135c0000a13d001100000004001d00000000003004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000000d02000029161716120000040f0000000102200190000000de0000613d0000000b0200002900000000020204330000001104000029000000000242004b00000010030000290000135c0000a13d000f0003204000cd000000000101043b0000000f011000290000000505400210000e00000005001d0000000802500029000000000101041a0000000000120435000000000103041a000000000141004b0000135c0000a13d00000000003004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000000d02000029161716120000040f0000000102200190000000de0000613d0000000a0200002900000000020204330000001104000029000000000242004b00000010030000290000135c0000a13d0000000e050000290000000702500029000000000101043b0000000f011000290000000101100039000000000101041a0000000000120435000000000103041a000000000141004b0000135c0000a13d00000000003004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000090200002900000000020204330000001104000029000000000242004b00000010030000290000135c0000a13d0000000e050000290000000602500029000000000101043b0000000f011000290000000201100039000000000101041a000000000012043500000001044000390000000c0140006c00000d3e0000413d0000009b0000013d00000000432100d9000000030330008c000008e10000c13d00000005432000c900000000422300d90011006430300122000000050220008c000008e10000c13d0000060d0000013d00000000432100d9000000030330008c000008e10000c13d0000000a432000c900000000422300d900110064303001220000000a0220008c000008e10000c13d000003ba0000013d000000400100043d0000004402100039000005d703000041000000000032043500000024021000390000001803000039000007360000013d000000400100043d0000004402100039000005da03000041000000000032043500000024021000390000001603000039000007360000013d000000400200043d0000001f0430018f000000050530027200000dbf0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000db70000413d000000000604004b000009890000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009890000013d0000000001000411000f00000001001d00000000001004350000000901000039000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000c00000001001d0000001001000039000b00000001001d000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000a00000002001d0000000c0120006b000008e10000413d0000000f0100002900000000001004350000000f01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000a030000290000000c02300069000000000101043b000000000101041a000000000312004b000008e10000413d00000000011200490000000e0110006c000010160000813d000000400100043d00000044021000390000060d030000410000013d0000013d000000100100002900000000001004350000000f01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000301041a0000001102300029000000000332004b000000000300001900000001030040390000000103300190000008e10000c13d000000000021041b000009cb0000013d000000400100043d0000006402100039000005dd0300004100000000003204350000004402100039000005de03000041000000000032043500000024021000390000002c0300003900000d100000013d000005fc050000410000000f0600002900000e390000013d00000020066000390000000007790019000000000007043500000000008604350000002003300039000000000743004b0000023c0000813d00000000073f034f000000000707043b000005f50870009c000000de0000213d000000000a2700190000003f07a00039000000000817004b00000000080000190000000008058019000005fc07700197000000000907004b00000000090000190000000009054019000005fc0770009c000000000908c019000000000709004b000000de0000c13d000000200ba000390000000007bf034f000000000707043b000005f50870009c000007720000213d0000003f08700039000000100980017f000000400800043d0000000009980019000000000c89004b000000000c000019000000010c004039000005f50d90009c000007720000213d000000010cc00190000007720000c13d000000400090043f0000000009780436000000000a7a0019000000400aa00039000000000a1a004b000000de0000213d000000200ab00039000000000aaf034f000000050b70027200000e6d0000613d000000000c000019000000050dc00210000000000ed90019000000000dda034f000000000d0d043b0000000000de0435000000010cc00039000000000dbc004b00000e650000413d0000001f0c70019000000e320000613d000000050bb00210000000000aba034f000000000bb90019000000030cc00210000000000d0b0433000000000dcd01cf000000000dcd022f000000000a0a043b000001000cc00089000000000aca022f000000000aca01cf000000000ada019f0000000000ab043500000e320000013d000000100100002900000000001004350000000e01000029000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000f00000002001d000000110120006c000008e10000413d000000100100002900000000001004350000000e01000029000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d00000011040000290000000f02400069000000000101043b000000000021041b000000400100043d0000002003100039000000000023043500000000004104350000000002000414000005870320009c00000587040000410000000002048019000005870310009c00000000010480190000004001100210000000c002200210000000000112019f000005d5011001c70000800d0200003900000002030000390000061d0400004100000010050000291617160d0000040f0000000101200190000000de0000613d0000000101000039000012820000013d000000400100043d000005d2020000410000000000210435000000040210003900000004030000290000000000320435000001600000013d000000400100043d0000004402100039000005e003000041000000000032043500000024021000390000001703000039000007360000013d000005fc060000410000000e0700002900000ed20000013d000000200770003900000000088a0019000000000008043500000000009704350000002004400039000000000854004b000000000f02034f00000b390000813d00000000084f034f000000000808043b000005f50980009c000000de0000213d000000000b3800190000003f08b00039000000000918004b00000000090000190000000009068019000005fc08800197000000000a08004b000000000a000019000000000a064019000005fc0880009c000000000a09c01900000000080a004b000000de0000c13d000000200cb000390000000008cf034f000000000808043b000005f50980009c000007720000213d0000003f09800039000000100a90017f000000400900043d000000000aa90019000000000d9a004b000000000d000019000000010d004039000005f50ea0009c000007720000213d000000010dd00190000007720000c13d0000004000a0043f000000000a890436000000000b8b0019000000400bb00039000000000b1b004b000000de0000213d000000200bc00039000000000bbf034f000000050c80027200000f060000613d000000000d000019000000050ed00210000000000fea0019000000000eeb034f000000000e0e043b0000000000ef0435000000010dd00039000000000ecd004b00000efe0000413d0000001f0d80019000000eca0000613d000000050cc00210000000000bcb034f000000000cca0019000000030dd00210000000000e0c0433000000000ede01cf000000000ede022f000000000b0b043b000001000dd00089000000000bdb022f000000000bdb01cf000000000beb019f0000000000bc043500000eca0000013d000000400100043d000005d202000041000000000021043500000004021000390000000000420435000001600000013d000000080200002900030004002000710000001101000029000a006410100122000700130000003d000d80100000003d000600140000003d001100000000001d0000000e0100002900000000001004350000000701000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000000d02000029161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006b0000127c0000813d00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000000d02000029161716120000040f0000000102200190000000de0000613d000000000101043b0000001101100029000000000101041a001000000001001d0000000e0100002900000000001004350000000601000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000001003000029001005890030019b0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006c0000135c0000a13d00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000001101100029000000000101041a000c00000001001d0000000e0100002900000000001004350000001501000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006c0000135c0000a13d00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000001101100029000000000101041a000f00000001001d000000100100002900000000001004350000001001000039000b00000001001d000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a0000000f0110006c000012850000413d000000100100002900000000001004350000000b01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a0000000f04000029000000000342004b000008e10000413d0000000002420049000000000021041b0000000a214000b90000000c03000029000000090230006c00000fd70000c13d000000000204004b00000fb20000613d00000000324100d90000000a0220006c000008e10000c13d000c0008101001020000000c0140006b000008e10000413d000000100100002900000000001004350000000901000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000c030000290000000f0230006a000000000101043b000000000401041a0000000003240019000000000443004b000000000400001900000001040040390000000104400190000008e10000c13d000000000031041b000000400100043d000000400310003900000005040000290000000000430435000000200310003900000000002304350000000e020000290000000000210435000000000200041400000fff0000013d000000000204004b00000fdc0000613d00000000324100d90000000a0220006c000008e10000c13d0000000803000029000000040230006b000012aa0000613d000c0003101001020000000c0140006b000008e10000413d000000100100002900000000001004350000000901000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000c030000290000000f0230006a000000000101043b000000000301041a000000000423004b000008e10000413d0000000003230049000000000031041b000000400100043d000000200310003900000000002304350000000e020000290000000000210435000000400210003900000000000204350000000002000414000005870320009c00000587040000410000000002048019000005870310009c00000000010480190000004001100210000000c002200210000000000112019f000005e2011001c70000800d020000390000000203000039000005e30400004100000010050000291617160d0000040f0000000101200190000000de0000613d0000001101000029001100010010003d00000f240000013d000000400100043d0000004402100039000005fd0300004100000ec30000013d0000000f0100002900000000001004350000000b01000029000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000c000e0010002d0000000c0110006b000000000100001900000001010040390000000101100190000008e10000c13d0000000f0100002900000000001004350000000b01000029000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000c02000029000000000021041b000000100100002900000000001004350000000d01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000000110220006c0000135c0000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d00000011020000290000000102200210000000000101043b00000000012100190000000101100039000000000301041a0000000e02300029000000000332004b000000000300001900000001030040390000000103300190000008e10000c13d000000000021041b0000000f0100002900000000001004350000001101000039000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b00000010020000290000000000200435000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000301041a0000000e02300029000000000332004b000000000300001900000001030040390000000103300190000008e10000c13d000000000021041b0000000f0100002900000000001004350000000e01000039000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b00000010020000290000000000200435000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000000f0100002900000000001004350000000b01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000400200043d000d00000002001d0000060b0220009c000007720000213d0000000d030000290000006002300039000000400020043f00000040043000390000000e02000029000b00000004001d0000000000240435000000100200002900000000032304360000001102000029000a00000003001d0000000000230435000000000201041a000c00000002001d000005f50220009c000007720000213d0000000c020000290000000102200039000000000021041b000000000010043500000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000c0200002900000003322000c9000000000101043b00000000012100190000000d020000290000000002020433000000000021041b0000000a0200002900000000020204330000000103100039000000000023041b00000002011000390000000b020000290000000002020433000000000021041b000000100100002900000000001004350000000a01000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000d00000002001d000005f50220009c000007720000213d0000000d020000290000000102200039000000000021041b000000000010043500000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000d01100029000000000201041a0000058e022001970000000f03000029000d05890030019b0000000d022001af000000000021041b000000100100002900000000001004350000001301000039000c00000001001d000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000b00000002001d000005f50220009c000007720000213d0000000b020000290000000102200039000000000021041b000000000010043500000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000b01100029000000000201041a0000058e022001970000000d022001af000000000021041b000000100100002900000000001004350000001401000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000d00000002001d000005f50220009c000007720000213d0000000d020000290000000102200039000000000021041b000000000010043500000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000d011000290000001102000029000000000021041b000000100100002900000000001004350000001501000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000201041a000d00000002001d000005f50220009c000007720000213d0000000d020000290000000102200039000000000021041b000000000010043500000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000d011000290000000e02000029000000000021041b000000100100002900000000001004350000000c01000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b000000000101041a000d00000001001d000000000101004b000008e10000613d0000000f0100002900000000001004350000001601000039000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b00000010020000290000000000200435000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000d02000029000000010220008a000000000101043b000000000021041b000000400100043d0000000e02000029000000000021043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000121019f000005db011001c70000800d0200003900000004030000390000060c040000410000000f050000290000001006000029000000110700002900000aac0000013d0007000d0000003d000680100000003d001100000000001d000011d80000013d000000010160021000000001011001bf0000000e04000029000000000014041b00000001014000390000000c020000290000000002020433000000000021041b0000001102000029001100010020003d0000000001050433000000110110006b000002870000813d000000080100002900000000001004350000000701000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000000602000029161716120000040f0000000102200190000000de0000613d000000000101043b0000000f020000290000000002020433000000110220006c0000135c0000a13d000000400400043d000006020240009c000007720000213d00000011020000290000000502200210000000090220002900000000020204330000004003400039000000400030043f0000000002240436000c00000002001d0000000000020435000000000301041a000005f50230009c000007720000213d000e00000004001d000d00000003001d0000000102300039000000000021041b00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000e0200002900000000050204330000000076050434000005f50260009c0000000d02000029000007720000213d00000001022002100000000004210019000000000104041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b000013620000c13d000000200130008c000e00000004001d000b00000006001d000a00000005001d0000123f0000413d000500000003001d000d00000007001d00000000004004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b060000290000001f026000390000000502200270000000200360008c0000000002004019000000000301043b00000005010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000000e040000290000000d070000290000123f0000813d000000000002041b0000000102200039000000000312004b0000123b0000413d0000001f0160008c000012680000a13d00000000004004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000b0600002900000010036001800000002002000039000000000101043b0000000a070000290000125b0000613d0000002002000039000000000400001900000000057200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000012530000413d000000000363004b0000000f05000029000011cb0000813d0000000303600210000000f80330018f000000010400008a000000000334022f000000000343013f00000000027200190000000002020433000000000232016f000000000021041b000011cb0000013d000000000106004b00000000010000190000000f050000290000126d0000613d00000000010704330000000302600210000000010300008a000000000223022f000000000232013f000000000121016f0000000102600210000000000121019f000011ce0000013d000000400100043d0000006402100039000005fe0300004100000000003204350000004402100039000005ff0300004100000e2b0000013d0000000203000029000000000103041a000005e10110019700000100011001bf000000000013041b0000000501000029000000000010041b0000000001000019000016180001042e000000400100043d0000004402100039000005e503000041000000000032043500000024021000390000001f03000039000007360000013d00000000040000190000000005020019000012970000013d000000000867001900000000000804350000001f07700039000000100770017f00000000066700190000000104400039000000000734004b000002a70000813d0000000007260049000000200770008a00000020055000390000000000750435000000200cc0003900000000080c043300000000070804330000000006760436000000000907004b0000128f0000613d0000000009000019000000000a6900190000002009900039000000000b890019000000000b0b04330000000000ba0435000000000a79004b000012a20000413d0000128f0000013d000005e401000041000000000010043500000012010000390000135f0000013d0006000d0000003d000580100000003d000f00000000001d000012bf0000013d000000010160021000000001011001bf0000000d04000029000000000014041b00000001014000390000000b020000290000000002020433000000000021041b0000000f02000029000f00010020003d00000000010504330000000f0110006b00000b960000813d000000070100002900000000001004350000000601000029000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000000502000029161716120000040f0000000102200190000000de0000613d000000000101043b0000000e0200002900000000020204330000000f0220006c0000135c0000a13d000000400400043d000006020240009c000007720000213d0000000f020000290000000502200210000000080220002900000000020204330000004003400039000000400030043f0000000002240436000b00000002001d0000000000020435000000000301041a000005f50230009c000007720000213d000d00000004001d000c00000003001d0000000102300039000000000021041b00000000001004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d000000000101043b0000000d0200002900000000050204330000000076050434000005f50260009c0000000c02000029000007720000213d00000001022002100000000004210019000000000104041a000000010210019000000001021002700000007f0320018f000000000302c0190000001f0230008c00000000020000190000000102002039000000000121013f0000000101100190000013620000c13d000000200130008c000d00000004001d000a00000006001d000900000005001d000013260000413d000400000003001d000c00000007001d00000000004004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000a060000290000001f026000390000000502200270000000200360008c0000000002004019000000000301043b00000004010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000000d040000290000000c07000029000013260000813d000000000002041b0000000102200039000000000312004b000013220000413d0000001f0160008c0000134f0000a13d00000000004004350000000001000414000005870210009c0000058701008041000000c001100210000005db011001c70000801002000039161716120000040f0000000102200190000000de0000613d0000000a0600002900000010036001800000002002000039000000000101043b0000000907000029000013420000613d0000002002000039000000000400001900000000057200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000133a0000413d000000000363004b0000000e05000029000012b20000813d0000000303600210000000f80330018f000000010400008a000000000334022f000000000343013f00000000027200190000000002020433000000000232016f000000000021041b000012b20000013d000000000106004b00000000010000190000000e05000029000013540000613d00000000010704330000000302600210000000010300008a000000000223022f000000000232013f000000000121016f0000000102600210000000000121019f000012b50000013d000005e40100004100000000001004350000003201000039000000040010043f00000591010000410000161900010430000005e401000041000000000010043500000022010000390000135f0000013d00000000040000190000000005020019000013710000013d000000000867001900000000000804350000001f07700039000000100770017f00000000066700190000000104400039000000000734004b00000bb90000813d0000000007260049000000200770008a00000020055000390000000000750435000000200cc0003900000000080c043300000000070804330000000006760436000000000907004b000013690000613d0000000009000019000000000a6900190000002009900039000000000b890019000000000b0b04330000000000ba0435000000000a79004b0000137c0000413d000013690000013d0000000702000039000000000302041a000000000313004b0000138c0000a13d000000000020043500000005211000c9000005e701100041000000000001042d000005e40100004100000000001004350000003201000039000000040010043f000005910100004100001619000104300003000000000002000000000201041a000000010320019000000001042002700000007f0640018f000000000604c0190000001f0460008c00000000040000190000000104002039000000010440018f000000000443004b000013d40000c13d000000400500043d0000000004650436000000000303004b000013c00000613d000100000004001d000200000006001d000300000005001d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000013de0000613d0000000206000029000000000206004b000000000200001900000003050000290000000107000029000013c60000613d000000000101043b00000000020000190000000003270019000000000401041a000000000043043500000001011000390000002002200039000000000362004b000013b80000413d000013c60000013d000001000100008a000000000112016f0000000000140435000000000106004b000000200200003900000000020060190000003f01200039000000200200008a000000000221016f0000000001520019000000000221004b00000000020000190000000102004039000005f50310009c000013d80000213d0000000102200190000013d80000c13d000000400010043f0000000001050019000000000001042d000005e40100004100000000001004350000002201000039000013db0000013d000005e40100004100000000001004350000004101000039000000040010043f000005910100004100001619000104300000000001000019000016190001043000000000030104330000000002320436000000000403004b000013ec0000613d000000000400001900000000054200190000002004400039000000000614001900000000060604330000000000650435000000000534004b000013e50000413d000000000132001900000000000104350000001f01300039000000200300008a000000000131016f0000000001120019000000000001042d000000000301001900000000040304330000000001420436000000000204004b000013ff0000613d00000000020000190000002003300039000000000503043300000000015104360000000102200039000000000542004b000013f90000413d000000000001042d0001000000000002000000000301041a000100000002001d000000000223004b000014150000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f00000001022001900000141b0000613d000000010200002900000003322000c9000000000101043b0000000001210019000000000001042d000005e40100004100000000001004350000003201000039000000040010043f00000591010000410000161900010430000000000100001900001619000104300000000502000039000000000302041a000000000313004b000014250000a13d0000000000200435000005f6011000410000000002000019000000000001042d000005e40100004100000000001004350000003201000039000000040010043f000005910100004100001619000104300000000602000039000000000302041a000000000313004b000014330000a13d0000000000200435000005f1011000410000000002000019000000000001042d000005e40100004100000000001004350000003201000039000000040010043f000005910100004100001619000104300001000000000002000000000301041a000100000002001d000000000223004b0000144d0000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000014530000613d000000000101043b00000001011000290000000002000019000000000001042d000005e40100004100000000001004350000003201000039000000040010043f0000059101000041000016190001043000000000010000190000161900010430000000040110008a000005fc020000410000003f0310008c00000000030000190000000003022019000005fc01100197000000000401004b0000000002008019000005fc0110009c000000000203c019000000000102004b000014670000613d00000002020003670000000401200370000000000101043b0000002402200370000000000202043b000000000001042d000000000100001900001619000104300001000000000002000000000301041a000100000002001d000000000223004b0000147e0000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000014840000613d00000001020000290000000102200210000000000101043b0000000001210019000000000001042d000005e40100004100000000001004350000003201000039000000040010043f0000059101000041000016190001043000000000010000190000161900010430000700000000000200000000050100190000000702000039000000000102041a000006220310009c000015260000813d0000000103100039000000000032041b00000000002004350000000032050434000005890220019700000005161000c9000005e701600041000000000401041a0000058e04400197000000000224019f000000000021041b000006230460004100000000030304330000000087030434000005f50170009c000015260000213d000000000104041a000000010210019000000001011002700000007f0910018f000000000901c0190000001f0190008c00000000010000190000000101002039000000010110018f000000000112004b0000152a0000c13d000300000003001d000000200190008c000700000005001d000600000006001d000500000004001d000400000007001d000014d00000413d000100000009001d000200000008001d000000000040043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000015300000613d00000004070000290000001f027000390000000502200270000000200370008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000000705000029000000060600002900000005040000290000000208000029000014d00000813d000000000002041b0000000102200039000000000312004b000014cc0000413d0000001f0170008c000014ff0000a13d000000000040043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f0000000102200190000015300000613d000000200200008a000000040700002900000000032701700000002002000039000000000101043b00000006060000290000000308000029000014ef0000613d0000002002000039000000000400001900000000058200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000014e70000413d000000000373004b000014fa0000813d0000000303700210000000f80330018f000000010400008a000000000334022f000000000343013f00000000028200190000000002020433000000000232016f000000000021041b000000010170021000000001011001bf000000070500002900000005040000290000150a0000013d000000000107004b0000000001000019000015030000613d00000000010804330000000302700210000000010300008a000000000223022f000000000232013f000000000121016f0000000102700210000000000121019f000000000014041b00000040015000390000000001010433000005ec02600041000000000012041b000000a00150003900000000010104330000062402000041000000000101004b000000000200601900000060015000390000000001010433000000000101004b000005dc01600041000000000301041a0000062503300197000000010330c1bf00000080045000390000000004040433000000000404004b000001000330c1bf000000000223019f000000000021041b000005e801600041000000c0025000390000000002020433000000000021041b000000000001042d000005e401000041000000000010043500000041010000390000152d0000013d000005e40100004100000000001004350000002201000039000000040010043f00000591010000410000161900010430000000000100001900001619000104300001000000000002000100000002001d0000000702000039000000000202041a000000000212004b0000155d0000a13d00000000001004350000000d01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f00000001022001900000155b0000613d000000000101043b000000000201041a000000010220006c000015640000a13d000000000010043500000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005db011001c70000801002000039161716120000040f00000001022001900000155b0000613d00000001020000290000000102200210000000000101043b00000000012100190000000101100039000000000101041a000000000001042d00000000010000190000161900010430000000400100043d0000004402100039000005d7030000410000000000320435000000240210003900000018030000390000156a0000013d000000400100043d0000004402100039000005da030000410000000000320435000000240210003900000016030000390000000000320435000005d80200004100000000002104350000000402100039000000200300003900000000003204350000058702000041000005870310009c00000000010280190000004001100210000005d9011001c7000016190001043000030000000000020000000703000039000000000203041a000000000212004b000015ae0000a13d0000000000300435000100000001001d00000005121000c9000200000002001d000005e801200041000000000101041a000300000001001d000005e901000041000000000010043900000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005ea011001c70000800b02000039161716120000040f0000000102200190000015b40000613d0000000202000029000005dc02200041000000000302041a000000000101043b000000030110006c000015960000213d000000ff01300190000015ad0000613d000001000100008a000000000113016f000000000012041b000000400100043d00000001020000290000000002210436000000000002043500000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000004001100210000000c002300210000000000112019f000005d5011001c70000800d020000390000000103000039000005eb040000411617160d0000040f0000000101200190000015b50000613d000000000001042d000005e40100004100000000001004350000003201000039000000040010043f00000591010000410000161900010430000000000001042f000000000100001900001619000104300002000000000002000005890110019700000000001004350000000901000039000000200010043f00000587030000410000000001000414000005870210009c0000000001038019000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000015f20000613d000000000101043b000000000101041a000200000001001d0000001001000039000000200010043f0000000001000414000005870210009c0000058701008041000000c001100210000005d5011001c70000801002000039161716120000040f0000000102200190000015f20000613d000000000101043b000000000101041a000100000001001d0000000f01000039000000200010043f00000587010000410000000002000414000005870320009c0000000002018019000000c001200210000005d5011001c70000801002000039161716120000040f0000000102200190000015f20000613d000000000101043b000000000201041a0000000101200029000000000221004b000000000200001900000001020040390000000102200190000015f40000c13d0000000201100069000000020210006c00000000020000190000000102002039000000000202004b000000000100c019000000000001042d00000000010000190000161900010430000005e40100004100000000001004350000001101000039000000040010043f00000591010000410000161900010430000000000001042f00000587020000410000000003000414000005870430009c0000000003028019000005870410009c00000000010280190000006001100210000000c002300210000000000112019f0000058c011001c70000801002000039161716120000040f00000001022001900000160b0000613d000000000101043b000000000001042d0000000001000019000016190001043000001610002104210000000102000039000000000001042d0000000002000019000000000001042d00001615002104230000000102000039000000000001042d0000000002000019000000000001042d0000161700000432000016180001042e00001619000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000ffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001e4fbdf7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000007c7b66f600000000000000000000000000000000000000000000000000000000bbebdd2400000000000000000000000000000000000000000000000000000000e2b239c700000000000000000000000000000000000000000000000000000000f2fde38a00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000f496baa000000000000000000000000000000000000000000000000000000000fe10226d00000000000000000000000000000000000000000000000000000000e2b239c800000000000000000000000000000000000000000000000000000000ed4516c900000000000000000000000000000000000000000000000000000000eda0b80400000000000000000000000000000000000000000000000000000000dd5c0da100000000000000000000000000000000000000000000000000000000dd5c0da200000000000000000000000000000000000000000000000000000000df63ba9100000000000000000000000000000000000000000000000000000000e13b7b3100000000000000000000000000000000000000000000000000000000bbebdd2500000000000000000000000000000000000000000000000000000000bcfc442900000000000000000000000000000000000000000000000000000000cc4d634500000000000000000000000000000000000000000000000000000000a46188ac00000000000000000000000000000000000000000000000000000000ab89437b00000000000000000000000000000000000000000000000000000000ab89437c00000000000000000000000000000000000000000000000000000000b6b55f2500000000000000000000000000000000000000000000000000000000b8fcf93700000000000000000000000000000000000000000000000000000000a46188ad00000000000000000000000000000000000000000000000000000000a93b4ba100000000000000000000000000000000000000000000000000000000a9bc3711000000000000000000000000000000000000000000000000000000008da5cb5a000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000009d678da100000000000000000000000000000000000000000000000000000000a24f8bd5000000000000000000000000000000000000000000000000000000007c7b66f7000000000000000000000000000000000000000000000000000000008456cb59000000000000000000000000000000000000000000000000000000008a6655d60000000000000000000000000000000000000000000000000000000044c7c866000000000000000000000000000000000000000000000000000000005c975aba000000000000000000000000000000000000000000000000000000006e16c78f000000000000000000000000000000000000000000000000000000006e16c790000000000000000000000000000000000000000000000000000000006f9fb98a00000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000005c975abb0000000000000000000000000000000000000000000000000000000063e9a61d000000000000000000000000000000000000000000000000000000006bff47e60000000000000000000000000000000000000000000000000000000048e395a20000000000000000000000000000000000000000000000000000000048e395a300000000000000000000000000000000000000000000000000000000517a6257000000000000000000000000000000000000000000000000000000005c134d660000000000000000000000000000000000000000000000000000000044c7c8670000000000000000000000000000000000000000000000000000000044daa2270000000000000000000000000000000000000000000000000000000047734892000000000000000000000000000000000000000000000000000000002e1a7d4c000000000000000000000000000000000000000000000000000000003a3ddd90000000000000000000000000000000000000000000000000000000003a3ddd91000000000000000000000000000000000000000000000000000000003f4ba83a00000000000000000000000000000000000000000000000000000000401853b7000000000000000000000000000000000000000000000000000000002e1a7d4d000000000000000000000000000000000000000000000000000000002f4c5bdf000000000000000000000000000000000000000000000000000000003257917a000000000000000000000000000000000000000000000000000000001940278e000000000000000000000000000000000000000000000000000000001940278f0000000000000000000000000000000000000000000000000000000023ee36bb0000000000000000000000000000000000000000000000000000000027e235e300000000000000000000000000000000000000000000000000000000013cf08b000000000000000000000000000000000000000000000000000000000f174002000000000000000000000000000000000000000000000000000000000ff7c4a50000000000000000000000000000000000000020000000800000000000000000118cdaa7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000800000000000000000ffffffffffffffffffffff0000000000000000000000000000000000000000ff0200000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002000000000000000000000000050726f706f73616c20646f6573206e6f742065786973742e000000000000000008c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640000000000000000000000004f7074696f6e20646f6573206e6f742065786973742e000000000000000000000200000000000000000000000000000000000020000000000000000000000000a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b746c6520726577617264732e000000000000000000000000000000000000000050726f706f73616c206d75737420626520696e61637469766520746f2073657400000000000000000000000000000000000000840000000000000000000000005265776172647320616c726561647920736574746c6564000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff0200000000000000000000000000000000000060000000000000000000000000149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa4e487b71000000000000000000000000000000000000000000000000000000004e6f7420656e6f756768206c6f636b656420766f74696e6720726967687473004e6f20766f74657320666f722077696e6e696e67206f7074696f6e0000000000a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d95539132020000020000000000000000000000000000000400000000000000000000000068e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a0000000000000000000000000000000000000000000000000000000000ff0000ddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e83685374616b6520696e646578206f7574206f6620626f756e6473000000000000000000000000000000000000000000000000000064000000800000000000000000f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab0000000000000000000000000000000000000000000000000000000000093a80fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c57f000000000000000000000000000000000000000000000000ffffffffffffffff036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085496e73756666696369656e742062616c616e636500000000000000000000000023b872dd000000000000000000000000000000000000000000000000000000002da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c45472616e73666572206661696c6564000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000007468652061646472657373206973206e6f742073616d65000000000000000000696e73756666696369656e7400000000000000000000000000000000000000005374616b656420616d6f756e7420646f6573206e6f74206d61746368206f72200000000000000000000000000000000000000000000000000000000000015180000000000000000000000000000000000000000000000000ffffffffffffff1f000000000000000000000000000000000000000000000000ffffffffffffffbf66f49d52069f7740a610f503527e90cfb04b8d7218d20d9fe7a5d3e246ea8653465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c846756e647320616c726561647920736574746c6564000000000000000000000050726f706f73616c206973207374696c6c206163746976652e000000000000005468652070726f706f73616c20646f6573206e6f742065786973740000000000546865206f7074696f6e20646f6573206e6f742065786973740000000000000073616c2068617320656e6465640000000000000000000000000000000000000054686520766f74696e6720706572696f6420666f7220746869732070726f706f000000000000000000000000000000000000000000000000ffffffffffffff9fc32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3496e73756666696369656e7420766f74696e67207269676874730000000000005468652070726f706f73616c206973206e6f7420616374697665000000000000d93c0665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000800000000000000000020000000000000000000000000000000000002000000080000000000000000062e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258a0c8eda28ab82fe28c2bcaa48a1ce2b5eac8dbed005a6e8eb62398577e908d5c506f696e7473206d7573742062652067726561746572207468616e207a65726f70a08231000000000000000000000000000000000000000000000000000000005db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa8dfc202b00000000000000000000000000000000000000000000000000000000ea966a8f7bfdedb35590510f87f503b52990ecf99d780380ad04545ee72b9b730000000000000000000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004400000000000000000000000055e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c77697468647261770000000000000000000000000000000000000000000000004e6f7420656e6f75676820617661696c61626c652062616c616e636520746f203ee5aeb50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000010000000000000000a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6890000000000000000000000000000000000000000000000000000000000010000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000b357023c1a2571e0bde7b6c93be4912ac391160fee2272b7f38121c28eda70bf"},"methodIdentifiers":{"UserSstakeAmounts(uint256)":"ed4516c9","UserStakerAddresses(uint256)":"48e395a3","added_proposal(address,uint256)":"44daa227","balances(address)":"27e235e3","checkQualityComplianceBelowExpectations(uint256)":"df63ba91","createProposalWithOptions(string,string[],uint256,uint256)":"3257917a","deactivateProposal(uint256)":"6bff47e6","deposit(uint256)":"b6b55f25","exchangePoints(uint256)":"7c7b66f7","getAvailableWithdrawBalance(address)":"bcfc4429","getContractBalance()":"6f9fb98a","getCurrentProposalId()":"fe10226d","getOptionVoteCount(uint256,uint256)":"63e9a61d","getOptionsCount(uint256)":"517a6257","getProposalStatus(uint256)":"401853b7","getUserBalance(address)":"47734892","getUserVotingHistory(address)":"0ff7c4a5","getUserVotingRights(address)":"6e16c790","handleStakeRelease(address,uint256,bool)":"cc4d6345","myToken()":"b8fcf937","optionIdsByProposal(uint256,uint256)":"e2b239c8","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","processUserStakedProposal(address,string,uint256,string[],uint256,uint256)":"a46188ad","proposalOptions(uint256,uint256)":"a93b4ba1","proposalTokenDeposits(address)":"dd5c0da2","proposalVoters(uint256,uint256)":"ab89437c","proposals(uint256)":"013cf08b","proposalsLength()":"44c7c867","renounceOwnership()":"715018a6","settleFundsForAverageQuality(uint256)":"9d678da1","settleRewards(uint256,uint256)":"e13b7b31","stakesForUser(address,uint256)":"2f4c5bdf","submitProposalForReview(uint256)":"bbebdd25","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","usedVotingRights(address)":"1940278f","userVotingHistory(address,uint256)":"23ee36bb","verifyComplianceAndExpectations(uint256)":"a24f8bd5","vote(uint256,uint256,uint256)":"8a6655d6","voteCountsByProposal(uint256,uint256)":"a9bc3711","voterAddressesByProposal(uint256,uint256)":"eda0b804","voterIndexInProposal(address,uint256)":"f496baa0","voters(address,uint256)":"5c134d66","votingEndTimes(uint256)":"0f174002","votingRecords(address,uint256)":"3a3ddd91","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Pausable.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 23:\"contracts/IProposalLogic.sol\", 24:\"contracts/ProposalLogic.sol\"\nobject \"ProposalLogic_6065\" {\n    code {\n        {\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ProposalLogic_6065\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1713:1714  \"1\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 12:1713:1714  \"1\" */ 0x01)\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            let _4 := sload(/** @src 12:1713:1714  \"1\" */ 0x01)\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 24:2157:2167  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                let _5 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(_5, shl(224, 0x1e4fbdf7))\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_5, 4), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(_5, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n            }\n            sstore(/** @src 12:1713:1714  \"1\" */ 0x01, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(_4, not(sub(shl(168, 1), 1))), and(shl(8, /** @src 24:2157:2167  \"msg.sender\" */ caller()), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(168, 1), 256))))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _6 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _4), _2), /** @src 24:2157:2167  \"msg.sender\" */ caller())\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            sstore(/** @src 24:2180:2198  \"myToken = _myToken\" */ 0x02, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(sload(/** @src 24:2180:2198  \"myToken = _myToken\" */ 0x02), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(sub(shl(160, 1), 1))), _3))\n            let _7 := datasize(\"ProposalLogic_6065_deployed\")\n            codecopy(_6, dataoffset(\"ProposalLogic_6065_deployed\"), _7)\n            return(_6, _7)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Pausable.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 21:\"contracts/Counters.sol\", 24:\"contracts/ProposalLogic.sol\"\n    object \"ProposalLogic_6065_deployed\" {\n        code {\n            {\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x013cf08b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 24:913:940  \"Proposal[] public proposals\"\n                        if iszero(lt(value, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ 7)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:913:940  \"Proposal[] public proposals\"\n                        let slot, offset := storage_array_index_access_struct_Proposal__dyn(value)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_1 := and(sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ slot), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 24:913:940  \"Proposal[] public proposals\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(slot, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _1 := sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ add(slot, 2))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _2 := sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ add(slot, 3))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _3 := sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ add(slot, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        mstore(add(memPos, 32), 224)\n                        let tail := abi_encode_string(ret_mpos, add(memPos, 224))\n                        mstore(add(memPos, 64), _1)\n                        mstore(add(memPos, 96), iszero(iszero(and(_2, 0xff))))\n                        mstore(add(memPos, 128), iszero(iszero(and(shr(8, _2), 0xff))))\n                        mstore(add(memPos, 160), iszero(iszero(and(shr(16, _2), 0xff))))\n                        mstore(add(memPos, 192), _3)\n                        return(memPos, sub(tail, memPos))\n                    }\n                    case 0x0f174002 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 24:965:1014  \"mapping(uint256 => uint256) public votingEndTimes\" */ 8)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x0ff7c4a5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:11609:11626  \"userVotingHistory\" */ 0x0b)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _5 := sload(/** @src 24:11672:11686  \"records.length\" */ dataSlot)\n                        /// @src 24:11644:11687  \"proposalIds = new uint256[](records.length)\"\n                        let var_proposalIds_mpos := /** @src 24:11658:11687  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 24:11698:11739  \"optionIds = new uint256[](records.length)\"\n                        let var_optionIds_mpos := /** @src 24:11710:11739  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 24:11750:11789  \"amounts = new uint256[](records.length)\"\n                        let var_amounts_mpos := /** @src 24:11760:11789  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _5)\n                        /// @src 24:11807:11820  \"uint256 i = 0\"\n                        let var_i := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:11802:12006  \"for (uint256 i = 0; i < records.length; i++) {...\"\n                        for { }\n                        /** @src 24:11822:11840  \"i < records.length\" */ lt(var_i, _5)\n                        /// @src 24:11807:11820  \"uint256 i = 0\"\n                        {\n                            /// @src 24:11842:11845  \"i++\"\n                            var_i := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 24:11842:11845  \"i++\" */ var_i, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 24:11842:11845  \"i++\"\n                        {\n                            /// @src 24:11879:11889  \"records[i]\"\n                            let _6, _7 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 24:11862:11900  \"proposalIds[i] = records[i].proposalId\" */ memory_array_index_access_uint256_dyn(var_proposalIds_mpos, var_i), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:11879:11900  \"records[i].proposalId\" */ _6))\n                            /// @src 24:11930:11940  \"records[i]\"\n                            let _8, _9 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 24:11915:11949  \"optionIds[i] = records[i].optionId\" */ memory_array_index_access_uint256_dyn(var_optionIds_mpos, var_i), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:11930:11949  \"records[i].optionId\" */ add(_8, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)))\n                            /// @src 24:11977:11987  \"records[i]\"\n                            let _10, _11 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 24:11964:11994  \"amounts[i] = records[i].amount\" */ memory_array_index_access_uint256_dyn(var_amounts_mpos, var_i), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:11977:11994  \"records[i].amount\" */ add(_10, 2)))\n                        }\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 96)\n                        let tail_1 := abi_encode_array_uint256_dyn(var_proposalIds_mpos, add(memPos_2, 96))\n                        mstore(add(memPos_2, 32), sub(tail_1, memPos_2))\n                        let tail_2 := abi_encode_array_uint256_dyn(var_optionIds_mpos, tail_1)\n                        mstore(add(memPos_2, 64), sub(tail_2, memPos_2))\n                        return(memPos_2, sub(abi_encode_array_uint256_dyn(var_amounts_mpos, tail_2), memPos_2))\n                    }\n                    case 0x1940278f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1598:1649  \"mapping(address => uint256) public usedVotingRights\" */ 16)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _12)\n                        return(memPos_3, 32)\n                    }\n                    case 0x23ee36bb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ 11)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        /// @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        if iszero(lt(value_2, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ dataSlot_1)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        let slot_1, offset_1 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_1, value_2)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _13 := sload(/** @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ slot_1)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _14 := sload(/** @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _15 := sload(/** @src 24:1151:1208  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot_1, 2))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _13)\n                        mstore(add(memPos_4, 32), _14)\n                        mstore(add(memPos_4, 64), _15)\n                        return(memPos_4, 96)\n                    }\n                    case 0x27e235e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1043:1086  \"mapping(address => uint256) public balances\" */ 9)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _16 := sload(keccak256(0, 64))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _16)\n                        return(memPos_5, 32)\n                    }\n                    case 0x2e1a7d4d {\n                        if callvalue() { revert(0, 0) }\n                        let _17 := 32\n                        if slt(add(calldatasize(), not(3)), _17) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 24:7726:7753  \"availableBalance >= _amount\" */ lt(/** @src 24:7654:7693  \"getAvailableWithdrawBalance(msg.sender)\" */ fun_getAvailableWithdrawBalance(/** @src 24:7682:7692  \"msg.sender\" */ caller()), /** @src 24:7726:7753  \"availableBalance >= _amount\" */ value_3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), _17)\n                            mstore(add(memPtr, 36), 40)\n                            mstore(add(memPtr, 68), \"Not enough available balance to \")\n                            mstore(add(memPtr, 100), \"withdraw\")\n                            revert(memPtr, 132)\n                        }\n                        let value_4 := and(sload(/** @src 24:7906:7913  \"myToken\" */ 0x02), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _18 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        mstore(_18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0xa9059cbb))\n                        mstore(/** @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ add(_18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 24:7682:7692  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36), value_3)\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _19 := call(gas(), value_4, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, /** @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 68, /** @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17)\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if iszero(_19)\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let expr := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if _19\n                        {\n                            let _20 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17\n                            /// @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                            if gt(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _17, /** @src 24:7899:7944  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            expr := abi_decode_bool_fromMemory(_18, add(_18, _20))\n                        }\n                        /// @src 24:7877:7987  \"require(...\"\n                        require_helper_stringliteral_25ad(expr)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:7682:7692  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_17, /** @src 24:8048:8056  \"balances\" */ 0x09)\n                        /// @src 24:8048:8078  \"balances[msg.sender] - _amount\"\n                        let _21 := checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 24:8048:8078  \"balances[msg.sender] - _amount\" */ value_3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:7682:7692  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_17, /** @src 24:8048:8056  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _21)\n                        /// @src 24:8127:8188  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        let _22 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_22, value_3)\n                        mstore(add(_22, _17), _21)\n                        /// @src 24:8127:8188  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        log2(_22, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64, /** @src 24:8127:8188  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\" */ 0x55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c, /** @src 24:7682:7692  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                    case 0x2f4c5bdf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        let _23 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_1, _23))\n                        mstore(32, /** @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\" */ 12)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\"\n                        if iszero(lt(value_5, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\" */ dataSlot_2)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\"\n                        let slot_2, offset_2 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_2, value_5)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _24 := sload(/** @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\" */ slot_2)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _25 := sload(/** @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_2, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        let _26 := sload(/** @src 24:1252:1300  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_2, 2))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _24)\n                        mstore(add(memPos_6, 32), _25)\n                        mstore(add(memPos_6, 64), and(_26, _23))\n                        mstore(add(memPos_6, 96), iszero(iszero(and(shr(160, _26), 0xff))))\n                        return(memPos_6, 128)\n                    }\n                    case 0x3257917a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let offset_3 := calldataload(4)\n                        let _27 := 0xffffffffffffffff\n                        if gt(offset_3, _27) { revert(0, 0) }\n                        let value0_2 := abi_decode_string(add(4, offset_3), calldatasize())\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, _27) { revert(0, 0) }\n                        let value1 := abi_decode_array_string_dyn(add(4, offset_4), calldatasize())\n                        let value_6 := calldataload(68)\n                        let value_7 := calldataload(100)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _28 := sload(/** @src 24:4297:4309  \"_proposalIds\" */ 0x03)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _29 := 1\n                        sstore(/** @src 24:4297:4309  \"_proposalIds\" */ 0x03, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(_28, 1))\n                        /// @src 24:4499:4505  \"1 days\"\n                        let _30 := 0x015180\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product := mul(value_7, /** @src 24:4499:4505  \"1 days\" */ _30)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(value_7), eq(/** @src 24:4499:4505  \"1 days\" */ _30, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product, value_7))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 24:4470:4506  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_1 := checked_add_uint256(/** @src 24:4470:4485  \"block.timestamp\" */ timestamp(), /** @src 24:4489:4505  \"endtime * 1 days\" */ product)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_37514(memPtr_1)\n                        mstore(memPtr_1, /** @src 24:4618:4628  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _31 := 32\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32), value0_2)\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64), value_6)\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96), 1)\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 128), 0)\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, 160), /** @src 24:4426:4436  \"amount > 0\" */ iszero(iszero(value_6)))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(/** @src 24:4580:4876  \"Proposal({...\" */ add(memPtr_1, 192), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ expr_1)\n                        /// @src 24:4551:4887  \"proposals.push(...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_1)\n                        /// @src 24:4939:4949  \"uint i = 0\"\n                        let var_i_1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:4934:5138  \"for (uint i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _29\n                        /// @src 24:4939:4949  \"uint i = 0\"\n                        {\n                            /// @src 24:4982:4985  \"i++\"\n                            var_i_1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 24:4982:4985  \"i++\" */ var_i_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _29)\n                        }\n                        /// @src 24:4982:4985  \"i++\"\n                        {\n                            /// @src 24:4951:4980  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(/** @src 24:4955:4980  \"optionDescriptions.length\" */ value1)))\n                            /// @src 24:4951:4980  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _28)\n                            mstore(_31, /** @src 24:5002:5017  \"proposalOptions\" */ 0x0d)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_3 := keccak256(0, 64)\n                            /// @src 24:5074:5095  \"optionDescriptions[i]\"\n                            let _mpos := mload(memory_array_index_access_uint256_dyn(value1, var_i_1))\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let memPtr_2 := mload(64)\n                            finalize_allocation_37516(memPtr_2)\n                            mstore(memPtr_2, _mpos)\n                            mstore(/** @src 24:5053:5111  \"Option({description: optionDescriptions[i], voteCount: 0})\" */ add(memPtr_2, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _31), 0)\n                            /// @src 24:5002:5126  \"proposalOptions[proposalId].push(...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_3, memPtr_2)\n                        }\n                        /// @src 24:5178:5358  \"ProposalAndOptionsSubmitted(...\"\n                        let _32 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_32, 96)\n                        let tail_3 := abi_encode_string(value0_2, add(_32, 96))\n                        mstore(add(_32, 32), sub(tail_3, _32))\n                        let tail_4 := abi_encode_array_string_dyn(value1, tail_3)\n                        mstore(add(_32, 64), expr_1)\n                        /// @src 24:5178:5358  \"ProposalAndOptionsSubmitted(...\"\n                        log3(_32, sub(tail_4, _32), 0xea966a8f7bfdedb35590510f87f503b52990ecf99d780380ad04545ee72b9b73, /** @src 24:4618:4628  \"msg.sender\" */ caller(), /** @src 24:5178:5358  \"ProposalAndOptionsSubmitted(...\" */ _28)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _28)\n                        return(memPos_7, 32)\n                    }\n                    case 0x3a3ddd91 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1656:1724  \"mapping(address => mapping(uint256 => uint256)) public votingRecords\" */ 17)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_4)\n                        let _33 := sload(keccak256(0, 64))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _33)\n                        return(memPos_8, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _34 := sload(/** @src 11:1920:1927  \"_paused\" */ 0x01)\n                        /// @src 11:2260:2322  \"if (!paused()) {...\"\n                        if /** @src 11:2264:2273  \"!paused()\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_34, 0xff))\n                        /// @src 11:2260:2322  \"if (!paused()) {...\"\n                        {\n                            /// @src 11:2296:2311  \"ExpectedPause()\"\n                            let _35 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 11:2296:2311  \"ExpectedPause()\"\n                            mstore(_35, shl(224, 0x8dfc202b))\n                            revert(_35, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4)\n                        }\n                        sstore(/** @src 11:1920:1927  \"_paused\" */ 0x01, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_34, not(255)))\n                        /// @src 11:2798:2820  \"Unpaused(_msgSender())\"\n                        let _36 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_36, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:2798:2820  \"Unpaused(_msgSender())\"\n                        log1(_36, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 11:2798:2820  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x401853b7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 24:8809:8831  \"proposals[_proposalId]\"\n                        let _37, _38 := storage_array_index_access_struct_Proposal__dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ calldataload(4))\n                        let value_8 := and(sload(/** @src 24:8849:8864  \"proposal.active\" */ add(/** @src 24:8781:8831  \"Proposal storage proposal = proposals[_proposalId]\" */ _37, /** @src 24:8849:8864  \"proposal.active\" */ 3)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(value_8)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x44c7c867 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let length := sload(/** @src 24:12096:12105  \"proposals\" */ 0x07)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, length)\n                        return(memPos_10, 32)\n                    }\n                    case 0x44daa227 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1731:1800  \"mapping(address => mapping(uint256 => uint256)) public added_proposal\" */ 18)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_5)\n                        let _39 := sload(keccak256(0, 64))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _39)\n                        return(memPos_11, 32)\n                    }\n                    case 0x47734892 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:2334:2342  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _40 := sload(keccak256(0, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _40)\n                        return(memPos_12, 32)\n                    }\n                    case 0x48e395a3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 24:804:840  \"address[] public UserStakerAddresses\"\n                        if iszero(lt(value_9, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:804:840  \"address[] public UserStakerAddresses\" */ 5)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:804:840  \"address[] public UserStakerAddresses\"\n                        let slot_3, offset_5 := storage_array_index_access_address_dyn_37521(value_9)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _41 := sload(/** @src 24:804:840  \"address[] public UserStakerAddresses\" */ slot_3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, and(shr(shl(3, offset_5), _41), sub(shl(160, 1), 1)))\n                        return(memPos_13, 32)\n                    }\n                    case 0x517a6257 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 24:12221:12236  \"proposalOptions\" */ 0x0d)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_1 := sload(keccak256(0, 64))\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, length_1)\n                        return(memPos_14, 32)\n                    }\n                    case 0x5c134d66 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1401:1459  \"mapping(address => mapping(uint256 => bool)) public voters\" */ 14)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_6)\n                        let value_10 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_10)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_11 := and(sload(/** @src 11:1920:1927  \"_paused\" */ 0x01), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, iszero(iszero(value_11)))\n                        return(memPos_16, 32)\n                    }\n                    case 0x63e9a61d {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret := fun_getOptionVoteCount(param, param_1)\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, ret)\n                        return(memPos_17, 32)\n                    }\n                    case 0x6bff47e6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        fun_deactivateProposal(calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x6e16c790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:2505:2521  \"usedVotingRights\" */ 0x10)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _42 := sload(keccak256(0, 64))\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, _42)\n                        return(memPos_18, 32)\n                    }\n                    case 0x6f9fb98a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_12 := and(sload(/** @src 24:11128:11135  \"myToken\" */ 0x02), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _43 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                        mstore(_43, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\" */ add(_43, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 24:11155:11159  \"this\" */ address())\n                        /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _44 := staticcall(gas(), value_12, _43, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36, /** @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\" */ _43, 32)\n                        if iszero(_44)\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                        let expr_2 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                        if _44\n                        {\n                            let _45 := 32\n                            if gt(32, returndatasize()) { _45 := returndatasize() }\n                            finalize_allocation(_43, _45)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if slt(sub(/** @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\" */ add(_43, _45), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _43), /** @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            { revert(0, 0) }\n                            /// @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\"\n                            expr_2 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(_43)\n                        }\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, expr_2)\n                        return(memPos_19, /** @src 24:11121:11161  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                    }\n                    case /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _46 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x01)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x01, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_46, not(sub(shl(168, 1), 256))))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _46), sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x7c7b66f7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        if /** @src 24:7323:7333  \"points > 0\" */ iszero(value_13)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 32)\n                            mstore(add(memPtr_3, 68), \"Points must be greater than zero\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, /** @src 24:7421:7431  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(32, /** @src 24:7412:7420  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        sstore(dataSlot_7, /** @src 24:7412:7443  \"balances[msg.sender] +=  points\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:7412:7443  \"balances[msg.sender] +=  points\" */ dataSlot_7), value_13))\n                        /// @src 24:7459:7493  \"ExchangePoints(msg.sender, points)\"\n                        let _47 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_47, value_13)\n                        /// @src 24:7459:7493  \"ExchangePoints(msg.sender, points)\"\n                        log2(_47, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 24:7459:7493  \"ExchangePoints(msg.sender, points)\" */ 0xa0c8eda28ab82fe28c2bcaa48a1ce2b5eac8dbed005a6e8eb62398577e908d5c, /** @src 24:7421:7431  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 11:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 11:2532:2536  \"true\" */ 0x01, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(sload(/** @src 11:2532:2536  \"true\" */ 0x01), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(255)), /** @src 11:2532:2536  \"true\" */ 0x01))\n                        /// @src 11:2551:2571  \"Paused(_msgSender())\"\n                        let _48 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_48, /** @src 9:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:2551:2571  \"Paused(_msgSender())\"\n                        log1(_48, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 11:2551:2571  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8a6655d6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_14 := calldataload(4)\n                        let _49 := 36\n                        let value_15 := calldataload(_49)\n                        let _50 := 68\n                        let value_16 := calldataload(_50)\n                        /// @src 11:1439:1511  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 24:9040:9070  \"_proposalId < proposals.length\" */ lt(value_14, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:9054:9063  \"proposals\" */ 0x07)))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, _49), 27)\n                            mstore(add(memPtr_4, _50), \"The proposal does not exist\")\n                            revert(memPtr_4, 100)\n                        }\n                        mstore(0, value_14)\n                        let _51 := 32\n                        mstore(_51, /** @src 24:9147:9162  \"proposalOptions\" */ 0x0d)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 24:9135:9182  \"_optionId < proposalOptions[_proposalId].length\" */ lt(value_15, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), _51)\n                            mstore(add(memPtr_5, _49), 25)\n                            mstore(add(memPtr_5, _50), \"The option does not exist\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 24:9286:9308  \"proposals[_proposalId]\"\n                        let _52, _53 := storage_array_index_access_struct_Proposal__dyn(value_14)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 24:9268:9316  \"block.timestamp < proposals[_proposalId].endTime\" */ lt(/** @src 24:9268:9283  \"block.timestamp\" */ timestamp(), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:9286:9316  \"proposals[_proposalId].endTime\" */ add(_52, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4))))\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), _51)\n                            mstore(add(memPtr_6, _49), 45)\n                            mstore(add(memPtr_6, _50), \"The voting period for this propo\")\n                            mstore(add(memPtr_6, 100), \"sal has ended\")\n                            revert(memPtr_6, 132)\n                        }\n                        /// @src 24:9408:9430  \"proposals[_proposalId]\"\n                        let _54, _55 := storage_array_index_access_struct_Proposal__dyn(value_14)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(and(sload(/** @src 24:9408:9437  \"proposals[_proposalId].active\" */ add(_54, 3)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff))\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), _51)\n                            mstore(add(memPtr_7, _49), 26)\n                            mstore(add(memPtr_7, _50), \"The proposal is not active\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:9608:9616  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _56 := sload(keccak256(0, 64))\n                        mstore(_51, /** @src 24:9644:9660  \"usedVotingRights\" */ 0x10)\n                        /// @src 24:9608:9672  \"balances[msg.sender] -...\"\n                        let expr_3 := checked_sub_uint256(_56, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)))\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:9688:9709  \"proposalTokenDeposits\" */ 0x0f)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 24:9740:9772  \"remainingVotingRights >= _amount\" */ lt(/** @src 24:9608:9721  \"balances[msg.sender] -...\" */ checked_sub_uint256(expr_3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))), /** @src 24:9740:9772  \"remainingVotingRights >= _amount\" */ value_16)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), _51)\n                            mstore(add(memPtr_8, _49), 26)\n                            mstore(add(memPtr_8, _50), \"Insufficient voting rights\")\n                            revert(memPtr_8, 100)\n                        }\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:9644:9660  \"usedVotingRights\" */ 0x10)\n                        /// @src 24:9883:9921  \"usedVotingRights[msg.sender] + _amount\"\n                        let _57 := checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 24:9883:9921  \"usedVotingRights[msg.sender] + _amount\" */ value_16)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:9644:9660  \"usedVotingRights\" */ 0x10)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _57)\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:9147:9162  \"proposalOptions\" */ 0x0d)\n                        /// @src 24:10036:10075  \"proposalOptions[_proposalId][_optionId]\"\n                        let _58, _59 := storage_array_index_access_struct_Option__dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:10036:10075  \"proposalOptions[_proposalId][_optionId]\" */ value_15)\n                        /// @src 24:10036:10085  \"proposalOptions[_proposalId][_optionId].voteCount\"\n                        let _60 := add(_58, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        sstore(_60, /** @src 24:10036:10096  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:10036:10096  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ _60), value_16))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:10107:10120  \"votingRecords\" */ 0x11)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_8 := keccak256(0, 64)\n                        mstore(0, value_14)\n                        mstore(_51, dataSlot_8)\n                        let dataSlot_9 := keccak256(0, 64)\n                        sstore(dataSlot_9, /** @src 24:10107:10156  \"votingRecords[msg.sender][_proposalId] += _amount\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:10107:10156  \"votingRecords[msg.sender][_proposalId] += _amount\" */ dataSlot_9), value_16))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:10201:10207  \"voters\" */ 0x0e)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_10 := keccak256(0, 64)\n                        mstore(0, value_14)\n                        mstore(_51, dataSlot_10)\n                        let dataSlot_11 := keccak256(0, 64)\n                        sstore(dataSlot_11, or(and(sload(dataSlot_11), not(255)), 1))\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:10287:10304  \"userVotingHistory\" */ 0x0b)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_12 := keccak256(0, 64)\n                        let memPtr_9 := mload(64)\n                        let newFreePtr := add(memPtr_9, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_9))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, _49)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_9, value_14)\n                        /// @src 24:10336:10379  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _61 := add(memPtr_9, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _51)\n                        mstore(_61, value_15)\n                        /// @src 24:10336:10379  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _62 := add(memPtr_9, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64)\n                        mstore(_62, value_16)\n                        let oldLen := sload(dataSlot_12)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, _49)\n                        }\n                        sstore(dataSlot_12, add(oldLen, 1))\n                        let slot_4, offset_6 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_12, oldLen)\n                        if offset_6\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, _49)\n                        }\n                        sstore(slot_4, mload(memPtr_9))\n                        sstore(add(slot_4, 1), mload(_61))\n                        sstore(add(slot_4, 2), mload(_62))\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:10435:10449  \"proposalVoters\" */ 0x0a)\n                        /// @src 24:10435:10479  \"proposalVoters[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:10549:10573  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 24:10549:10603  \"voterAddressesByProposal[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:10614:10633  \"optionIdsByProposal\" */ 0x14)\n                        /// @src 24:10614:10662  \"optionIdsByProposal[_proposalId].push(_optionId)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:10614:10662  \"optionIdsByProposal[_proposalId].push(_optionId)\" */ value_15)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:10673:10693  \"voteCountsByProposal\" */ 0x15)\n                        /// @src 24:10673:10720  \"voteCountsByProposal[_proposalId].push(_amount)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:10673:10720  \"voteCountsByProposal[_proposalId].push(_amount)\" */ value_16)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, value_14)\n                        mstore(_51, /** @src 24:10549:10573  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_2 := sload(keccak256(0, 64))\n                        let diff := add(length_2, not(0))\n                        if gt(diff, length_2)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, /** @src 24:10107:10120  \"votingRecords\" */ 0x11)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            revert(0, _49)\n                        }\n                        mstore(0, /** @src 24:9617:9627  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_51, /** @src 24:10782:10802  \"voterIndexInProposal\" */ 0x16)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_13 := keccak256(0, 64)\n                        mstore(0, value_14)\n                        mstore(_51, dataSlot_13)\n                        sstore(keccak256(0, 64), diff)\n                        /// @src 24:10922:10972  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        let _63 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_63, value_16)\n                        /// @src 24:10922:10972  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        log4(_63, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _51, /** @src 24:10922:10972  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ 0xc32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3, /** @src 24:9617:9627  \"msg.sender\" */ caller(), /** @src 24:10922:10972  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ value_14, value_15)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_17 := and(shr(8, sload(/** @src 0:1710:1716  \"_owner\" */ 0x01)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, value_17)\n                        return(memPos_20, 32)\n                    }\n                    case 0x9d678da1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_18 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:17337:17404  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 24:17345:17375  \"_proposalId < proposals.length\" */ lt(value_18, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:17359:17368  \"proposals\" */ 0x07)))\n                        /// @src 24:17443:17465  \"proposals[_proposalId]\"\n                        let _64, _65 := storage_array_index_access_struct_Proposal__dyn(value_18)\n                        /// @src 24:17484:17499  \"proposal.active\"\n                        let _66 := add(_64, 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _67 := sload(/** @src 24:17484:17499  \"proposal.active\" */ _66)\n                        /// @src 24:17476:17529  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_67, 0xff))\n                        /// @src 24:17540:17593  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 24:17548:17567  \"!proposal.isSettled\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _67), 0xff)))\n                        /// @src 24:17623:17634  \"_proposalId\"\n                        fun_deactivateProposal(value_18)\n                        /// @src 24:17708:17728  \"proposal.stakeAmount\"\n                        let _68 := add(_64, 2)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _69 := sload(/** @src 24:17708:17728  \"proposal.stakeAmount\" */ _68)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _70 := sload(/** @src 24:17743:17761  \"proposal.isWagered\" */ _66)\n                        /// @src 24:17739:18087  \"if (proposal.isWagered) {...\"\n                        switch /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _70), 0xff)\n                        case /** @src 24:17739:18087  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_66, or(and(_70, not(65280)), 256))\n                        }\n                        default /// @src 24:17739:18087  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_19 := and(sload(/** @src 24:17825:17842  \"proposal.proposer\" */ _64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_19)\n                            mstore(32, /** @src 24:17803:17824  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _71 := sload(keccak256(0, 64))\n                            /// @src 24:17901:18017  \"stakedAmount >...\"\n                            let expr_4 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 24:17901:18017  \"stakedAmount >...\"\n                            switch /** @src 24:17901:17947  \"stakedAmount >...\" */ gt(_69, _71)\n                            case /** @src 24:17901:18017  \"stakedAmount >...\" */ 0 {\n                                expr_4 := /** @src 24:17988:18017  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_71, _69)\n                            }\n                            default /// @src 24:17901:18017  \"stakedAmount >...\"\n                            {\n                                expr_4 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_19)\n                            mstore(32, /** @src 24:17803:17824  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_4)\n                        }\n                        let _72 := sload(/** @src 24:18119:18139  \"proposal.stakeAmount\" */ _68)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_1 := mul(_72, /** @src 24:17484:17499  \"proposal.active\" */ 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _73 := iszero(_72)\n                        if iszero(or(_73, eq(/** @src 24:17484:17499  \"proposal.active\" */ 3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_1, _72))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let product_2 := mul(_72, /** @src 24:18232:18233  \"5\" */ 0x05)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(_73, eq(/** @src 24:18232:18233  \"5\" */ 0x05, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_2, _72))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 24:18293:18312  \"reward - serviceFee\"\n                        let expr_5 := checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_2, /** @src 24:18147:18150  \"100\" */ 0x64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_1, /** @src 24:18147:18150  \"100\" */ 0x64))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _74 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 24:18334:18351  \"proposal.proposer\" */ _64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _74))\n                        mstore(32, /** @src 24:18325:18333  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_14 := keccak256(0, 64)\n                        sstore(dataSlot_14, /** @src 24:18325:18362  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:18325:18362  \"balances[proposal.proposer] += profit\" */ dataSlot_14), expr_5))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_20 := and(sload(/** @src 24:18494:18511  \"proposal.proposer\" */ _64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _74)\n                        /// @src 24:18424:18543  \"FundsSettledForAverageQuality(...\"\n                        let _75 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_75, expr_5)\n                        /// @src 24:18424:18543  \"FundsSettledForAverageQuality(...\"\n                        log3(_75, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 24:18424:18543  \"FundsSettledForAverageQuality(...\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_18, value_20)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xa24f8bd5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_21 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:18665:18732  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 24:18673:18703  \"_proposalId < proposals.length\" */ lt(value_21, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:18687:18696  \"proposals\" */ 0x07)))\n                        /// @src 24:18771:18793  \"proposals[_proposalId]\"\n                        let _76, _77 := storage_array_index_access_struct_Proposal__dyn(value_21)\n                        /// @src 24:18812:18827  \"proposal.active\"\n                        let _78 := add(_76, 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _79 := sload(/** @src 24:18812:18827  \"proposal.active\" */ _78)\n                        /// @src 24:18804:18857  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_79, 0xff))\n                        /// @src 24:18868:18921  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 24:18876:18895  \"!proposal.isSettled\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _79), 0xff)))\n                        /// @src 24:18951:18962  \"_proposalId\"\n                        fun_deactivateProposal(value_21)\n                        /// @src 24:19034:19054  \"proposal.stakeAmount\"\n                        let _80 := add(_76, 2)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _81 := sload(/** @src 24:19034:19054  \"proposal.stakeAmount\" */ _80)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _82 := sload(/** @src 24:19069:19087  \"proposal.isWagered\" */ _78)\n                        /// @src 24:19065:19454  \"if (proposal.isWagered) {...\"\n                        switch /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _82), 0xff)\n                        case /** @src 24:19065:19454  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_78, or(and(_82, not(65280)), 256))\n                        }\n                        default /// @src 24:19065:19454  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_22 := and(sload(/** @src 24:19192:19209  \"proposal.proposer\" */ _76), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_22)\n                            mstore(32, /** @src 24:19170:19191  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _83 := sload(keccak256(0, 64))\n                            /// @src 24:19268:19384  \"stakedAmount >...\"\n                            let expr_6 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 24:19268:19384  \"stakedAmount >...\"\n                            switch /** @src 24:19268:19314  \"stakedAmount >...\" */ gt(_81, _83)\n                            case /** @src 24:19268:19384  \"stakedAmount >...\" */ 0 {\n                                expr_6 := /** @src 24:19355:19384  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_83, _81)\n                            }\n                            default /// @src 24:19268:19384  \"stakedAmount >...\"\n                            {\n                                expr_6 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_22)\n                            mstore(32, /** @src 24:19170:19191  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_6)\n                        }\n                        let _84 := sload(/** @src 24:19486:19506  \"proposal.stakeAmount\" */ _80)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_3 := mul(_84, /** @src 24:18812:18827  \"proposal.active\" */ 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _85 := iszero(_84)\n                        if iszero(or(_85, eq(/** @src 24:18812:18827  \"proposal.active\" */ 3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_3, _84))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let product_4 := mul(_84, /** @src 24:19599:19601  \"10\" */ 0x0a)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(_85, eq(/** @src 24:19599:19601  \"10\" */ 0x0a, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_4, _84))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 24:19662:19681  \"reward - serviceFee\"\n                        let expr_7 := checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_4, /** @src 24:19514:19517  \"100\" */ 0x64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_3, /** @src 24:19514:19517  \"100\" */ 0x64))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _86 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 24:19703:19720  \"proposal.proposer\" */ _76), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _86))\n                        mstore(32, /** @src 24:19694:19702  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_15 := keccak256(0, 64)\n                        sstore(dataSlot_15, /** @src 24:19694:19731  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:19694:19731  \"balances[proposal.proposer] += profit\" */ dataSlot_15), expr_7))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_23 := and(sload(/** @src 24:19863:19880  \"proposal.proposer\" */ _76), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _86)\n                        /// @src 24:19793:19912  \"FundsSettledForAverageQuality(...\"\n                        let _87 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_87, expr_7)\n                        /// @src 24:19793:19912  \"FundsSettledForAverageQuality(...\"\n                        log3(_87, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 24:19793:19912  \"FundsSettledForAverageQuality(...\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_21, value_23)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xa46188ad {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let offset_7 := calldataload(36)\n                        let _88 := 0xffffffffffffffff\n                        if gt(offset_7, _88) { revert(0, 0) }\n                        let value1_1 := abi_decode_string(add(4, offset_7), calldatasize())\n                        let value_24 := calldataload(68)\n                        let offset_8 := calldataload(100)\n                        if gt(offset_8, _88) { revert(0, 0) }\n                        let value3 := abi_decode_array_string_dyn(add(4, offset_8), calldatasize())\n                        let value_25 := calldataload(132)\n                        let value_26 := calldataload(164)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:5748:5779  \"UserStakerAddresses[stakeIndex]\"\n                        let _89, _90 := storage_array_index_access_address_dyn_37521(value_25)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _91 := sub(shl(160, 1), 1)\n                        let _92 := sload(/** @src 24:5748:5779  \"UserStakerAddresses[stakeIndex]\" */ _89)\n                        /// @src 24:5811:5840  \"UserSstakeAmounts[stakeIndex]\"\n                        let _93, _94 := storage_array_index_access_address_dyn_37533(value_25)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_27 := shr(shl(3, _94), sload(/** @src 24:5811:5840  \"UserSstakeAmounts[stakeIndex]\" */ _93))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _95 := and(/** @src 24:5859:5885  \"UserAddress == userAddress\" */ value0_3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _91)\n                        if iszero(/** @src 24:5859:5885  \"UserAddress == userAddress\" */ eq(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(shl(3, _90), _92), _91), _95))\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 23)\n                            mstore(add(memPtr_10, 68), \"the address is not same\")\n                            revert(memPtr_10, 100)\n                        }\n                        if iszero(/** @src 24:5946:5971  \"stakeAmount == UserAmount\" */ eq(value_24, value_27))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 44)\n                            mstore(add(memPtr_11, 68), \"Staked amount does not match or \")\n                            mstore(add(memPtr_11, 100), \"insufficient\")\n                            revert(memPtr_11, 132)\n                        }\n                        /// @src 24:6106:6112  \"1 days\"\n                        let _96 := 0x015180\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_5 := mul(value_26, /** @src 24:6106:6112  \"1 days\" */ _96)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(value_26), eq(/** @src 24:6106:6112  \"1 days\" */ _96, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_5, value_26))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 24:6077:6113  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_8 := checked_add_uint256(/** @src 24:6077:6092  \"block.timestamp\" */ timestamp(), /** @src 24:6096:6112  \"endtime * 1 days\" */ product_5)\n                        /// @src 24:6158:6172  \"bool isWagered\"\n                        let var_isWagered := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:6183:6297  \"if (stakeAmount > 0) {...\"\n                        switch /** @src 24:6187:6202  \"stakeAmount > 0\" */ iszero(iszero(value_24))\n                        case /** @src 24:6183:6297  \"if (stakeAmount > 0) {...\" */ 0 {\n                            /// @src 24:6268:6285  \"isWagered = false\"\n                            var_isWagered := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        }\n                        default /// @src 24:6183:6297  \"if (stakeAmount > 0) {...\"\n                        {\n                            /// @src 24:6219:6235  \"isWagered = true\"\n                            var_isWagered := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                        }\n                        let memPtr_12 := mload(64)\n                        finalize_allocation_37514(memPtr_12)\n                        mstore(memPtr_12, _95)\n                        let _97 := 32\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32), value1_1)\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64), value_24)\n                        let _98 := 1\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96), 1)\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 128), 0)\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 160), iszero(iszero(var_isWagered)))\n                        mstore(/** @src 24:6336:6638  \"Proposal({...\" */ add(memPtr_12, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 192), expr_8)\n                        /// @src 24:6307:6649  \"proposals.push(...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_12)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _99 := sload(3)\n                        sstore(3, add(_99, 1))\n                        /// @src 24:6800:6813  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:6795:7002  \"for (uint256 i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _98\n                        /// @src 24:6800:6813  \"uint256 i = 0\"\n                        {\n                            /// @src 24:6846:6849  \"i++\"\n                            var_i_2 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 24:6846:6849  \"i++\" */ var_i_2, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _98)\n                        }\n                        /// @src 24:6846:6849  \"i++\"\n                        {\n                            /// @src 24:6815:6844  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_2, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(/** @src 24:6819:6844  \"optionDescriptions.length\" */ value3)))\n                            /// @src 24:6815:6844  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _99)\n                            mstore(_97, /** @src 24:6866:6881  \"proposalOptions\" */ 0x0d)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_16 := keccak256(0, 64)\n                            /// @src 24:6938:6959  \"optionDescriptions[i]\"\n                            let _mpos_1 := mload(memory_array_index_access_uint256_dyn(value3, var_i_2))\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let memPtr_13 := mload(64)\n                            finalize_allocation_37516(memPtr_13)\n                            mstore(memPtr_13, _mpos_1)\n                            mstore(/** @src 24:6917:6975  \"Option({description: optionDescriptions[i], voteCount: 0})\" */ add(memPtr_13, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _97), 0)\n                            /// @src 24:6866:6990  \"proposalOptions[proposalId].push(...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_16, memPtr_13)\n                        }\n                        /// @src 24:7017:7212  \"ProposalForUser(...\"\n                        let _100 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_100, 128)\n                        let tail_5 := abi_encode_string(value1_1, add(_100, 128))\n                        mstore(add(_100, 32), value_24)\n                        mstore(add(_100, 64), sub(tail_5, _100))\n                        let tail_6 := abi_encode_array_string_dyn(value3, tail_5)\n                        mstore(add(_100, 96), expr_8)\n                        /// @src 24:7017:7212  \"ProposalForUser(...\"\n                        log3(_100, sub(tail_6, _100), 0x66f49d52069f7740a610f503527e90cfb04b8d7218d20d9fe7a5d3e246ea8653, _95, _99)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, _99)\n                        return(memPos_21, 32)\n                    }\n                    case 0xa93b4ba1 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_2)\n                        mstore(0x20, /** @src 24:1307:1358  \"mapping(uint256 => Option[]) public proposalOptions\" */ 13)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        /// @src 24:1307:1358  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        if iszero(lt(param_3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1307:1358  \"mapping(uint256 => Option[]) public proposalOptions\" */ dataSlot_17)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1307:1358  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        let slot_5, offset_9 := storage_array_index_access_struct_Option__dyn(dataSlot_17, param_3)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(slot_5)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _101 := sload(/** @src 24:1307:1358  \"mapping(uint256 => Option[]) public proposalOptions\" */ add(slot_5, 1))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, 64)\n                        let tail_7 := abi_encode_string(ret_mpos_1, add(memPos_22, 64))\n                        mstore(add(memPos_22, 0x20), _101)\n                        return(memPos_22, sub(tail_7, memPos_22))\n                    }\n                    case 0xa9bc3711 {\n                        if callvalue() { revert(0, 0) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_4)\n                        mstore(0x20, /** @src 24:1938:1995  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ 21)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_18 := keccak256(0, 64)\n                        /// @src 24:1938:1995  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        if iszero(lt(param_5, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1938:1995  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ dataSlot_18)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1938:1995  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        let slot_6, offset_10 := storage_array_index_access_address_dyn(dataSlot_18, param_5)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _102 := sload(/** @src 24:1938:1995  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ slot_6)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_23 := mload(64)\n                        mstore(memPos_23, shr(shl(3, offset_10), _102))\n                        return(memPos_23, 0x20)\n                    }\n                    case 0xab89437c {\n                        if callvalue() { revert(0, 0) }\n                        let param_6, param_7 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_6)\n                        mstore(0x20, /** @src 24:1093:1144  \"mapping(uint256 => address[]) public proposalVoters\" */ 10)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_19 := keccak256(0, 64)\n                        /// @src 24:1093:1144  \"mapping(uint256 => address[]) public proposalVoters\"\n                        if iszero(lt(param_7, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1093:1144  \"mapping(uint256 => address[]) public proposalVoters\" */ dataSlot_19)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1093:1144  \"mapping(uint256 => address[]) public proposalVoters\"\n                        let slot_7, offset_11 := storage_array_index_access_address_dyn(dataSlot_19, param_7)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _103 := sload(/** @src 24:1093:1144  \"mapping(uint256 => address[]) public proposalVoters\" */ slot_7)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_24 := mload(64)\n                        mstore(memPos_24, and(shr(shl(3, offset_11), _103), sub(shl(160, 1), 1)))\n                        return(memPos_24, 0x20)\n                    }\n                    case 0xb6b55f25 {\n                        if callvalue() { revert(0, 0) }\n                        let _104 := 32\n                        if slt(add(calldatasize(), not(3)), _104) { revert(0, 0) }\n                        let value_28 := calldataload(4)\n                        let value_29 := and(sload(/** @src 24:2657:2664  \"myToken\" */ 0x02), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _105 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ add(_105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), /** @src 24:2679:2689  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36), /** @src 24:2699:2703  \"this\" */ address())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(add(/** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 68), value_28)\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _106 := call(gas(), value_29, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, /** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 100, /** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _105, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _104)\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_106)\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let expr_9 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if _106\n                        {\n                            let _107 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _104\n                            /// @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _104, /** @src 24:2650:2713  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _107 := returndatasize() }\n                            finalize_allocation(_105, _107)\n                            expr_9 := abi_decode_bool_fromMemory(_105, add(_105, _107))\n                        }\n                        /// @src 24:2628:2756  \"require(...\"\n                        require_helper_stringliteral_25ad(expr_9)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:2679:2689  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_104, /** @src 24:2790:2798  \"balances\" */ 0x09)\n                        /// @src 24:2790:2819  \"balances[msg.sender] + amount\"\n                        let _108 := checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 24:2790:2819  \"balances[msg.sender] + amount\" */ value_28)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:2679:2689  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_104, /** @src 24:2790:2798  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(keccak256(0, 64), _108)\n                        /// @src 24:2835:2864  \"Deposited(msg.sender, amount)\"\n                        let _109 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_109, value_28)\n                        /// @src 24:2835:2864  \"Deposited(msg.sender, amount)\"\n                        log2(_109, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _104, /** @src 24:2835:2864  \"Deposited(msg.sender, amount)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 24:2679:2689  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xb8fcf937 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_30 := and(sload(/** @src 24:567:589  \"address public myToken\" */ 2), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_25 := mload(64)\n                        mstore(memPos_25, value_30)\n                        return(memPos_25, 32)\n                    }\n                    case 0xbbebdd25 {\n                        if callvalue() { revert(0, 0) }\n                        let _110 := 32\n                        if slt(add(calldatasize(), not(3)), _110) { revert(0, 0) }\n                        let value_31 := calldataload(4)\n                        mstore(0, /** @src 24:2982:2992  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_110, /** @src 24:2973:2981  \"balances\" */ 0x09)\n                        /// @src 24:2965:3028  \"require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 24:2973:3003  \"balances[msg.sender] >= amount\" */ iszero(lt(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 24:2973:3003  \"balances[msg.sender] >= amount\" */ value_31)))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, /** @src 24:2982:2992  \"msg.sender\" */ caller())\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(_110, /** @src 24:2973:2981  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _111 := sload(keccak256(0, 64))\n                        mstore(_110, /** @src 24:3084:3100  \"usedVotingRights\" */ 0x10)\n                        /// @src 24:3039:3170  \"require(...\"\n                        require_helper_stringliteral(/** @src 24:3061:3122  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ iszero(lt(/** @src 24:3061:3112  \"balances[msg.sender] - usedVotingRights[msg.sender]\" */ checked_sub_uint256(_111, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64))), /** @src 24:3061:3122  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ value_31)))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let sum := add(/** @src 24:3202:3217  \"block.timestamp\" */ timestamp(), /** @src 24:3220:3226  \"7 days\" */ 0x093a80)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if gt(/** @src 24:3202:3217  \"block.timestamp\" */ timestamp(), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let _112 := sload(4)\n                        sstore(4, add(_112, 1))\n                        /// @src 24:3449:3463  \"bool isWagered\"\n                        let var_isWagered_1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:3474:3641  \"if (amount > 0) {...\"\n                        switch /** @src 24:3478:3488  \"amount > 0\" */ iszero(iszero(value_31))\n                        case /** @src 24:3474:3641  \"if (amount > 0) {...\" */ 0 {\n                            /// @src 24:3612:3629  \"isWagered = false\"\n                            var_isWagered_1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        }\n                        default /// @src 24:3474:3641  \"if (amount > 0) {...\"\n                        {\n                            /// @src 24:3505:3521  \"isWagered = true\"\n                            var_isWagered_1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                            mstore(0, /** @src 24:2982:2992  \"msg.sender\" */ caller())\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(_110, /** @src 24:3536:3557  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_20 := keccak256(0, 64)\n                            sstore(dataSlot_20, /** @src 24:3536:3579  \"proposalTokenDeposits[msg.sender] += amount\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:3536:3579  \"proposalTokenDeposits[msg.sender] += amount\" */ dataSlot_20), value_31))\n                        }\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let oldLen_1 := sload(/** @src 24:3653:3672  \"UserStakerAddresses\" */ 0x05)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _113 := 18446744073709551616\n                        if iszero(lt(oldLen_1, _113))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 24:3653:3672  \"UserStakerAddresses\" */ 0x05, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen_1, 1))\n                        let slot_8, offset_12 := storage_array_index_access_address_dyn_37521(oldLen_1)\n                        let _114 := sload(slot_8)\n                        let shiftBits := shl(3, offset_12)\n                        sstore(slot_8, or(and(_114, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 24:2982:2992  \"msg.sender\" */ caller())))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let oldLen_2 := sload(/** @src 24:3700:3717  \"UserSstakeAmounts\" */ 0x06)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(lt(oldLen_2, _113))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 24:3700:3717  \"UserSstakeAmounts\" */ 0x06, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen_2, 1))\n                        let slot_9, offset_13 := storage_array_index_access_address_dyn_37533(oldLen_2)\n                        update_storage_value_uint256_to_uint256(slot_9, offset_13, value_31)\n                        /// @src 24:3746:3900  \"DepositForProposal(...\"\n                        let _115 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 24:3746:3900  \"DepositForProposal(...\"\n                        log3(_115, sub(abi_encode_uint256_bool_uint256(_115, value_31, var_isWagered_1, sum), _115), 0x5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085, /** @src 24:2982:2992  \"msg.sender\" */ caller(), /** @src 24:3746:3900  \"DepositForProposal(...\" */ _112)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_26 := mload(64)\n                        mstore(memPos_26, _112)\n                        return(memPos_26, _110)\n                    }\n                    case 0xbcfc4429 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getAvailableWithdrawBalance(abi_decode_address())\n                        let memPos_27 := mload(64)\n                        mstore(memPos_27, ret_1)\n                        return(memPos_27, 32)\n                    }\n                    case 0xcc4d6345 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        let value_32 := calldataload(36)\n                        let value_33 := calldataload(68)\n                        if iszero(eq(value_33, iszero(iszero(value_33)))) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 24:13462:13499  \"stakeIndex < UserSstakeAmounts.length\" */ lt(value_32, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:13475:13492  \"UserSstakeAmounts\" */ 0x06)))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, 36), 25)\n                            mstore(add(memPtr_14, 68), \"Stake index out of bounds\")\n                            revert(memPtr_14, 100)\n                        }\n                        /// @src 24:13589:13618  \"UserSstakeAmounts[stakeIndex]\"\n                        let _116, _117 := storage_array_index_access_address_dyn_37533(value_32)\n                        /// @src 24:13563:13618  \"uint256 amountToRelease = UserSstakeAmounts[stakeIndex]\"\n                        let var_amountToRelease := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shr(shl(3, _117), sload(/** @src 24:13589:13618  \"UserSstakeAmounts[stakeIndex]\" */ _116))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _118 := and(value0_4, sub(shl(160, 1), 1))\n                        mstore(0, _118)\n                        mstore(32, /** @src 24:13629:13650  \"proposalTokenDeposits\" */ 0x0f)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_21 := keccak256(0, 64)\n                        sstore(dataSlot_21, /** @src 24:13629:13675  \"proposalTokenDeposits[user] -= amountToRelease\" */ checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:13629:13675  \"proposalTokenDeposits[user] -= amountToRelease\" */ dataSlot_21), var_amountToRelease))\n                        /// @src 24:13746:14003  \"if (penalizeStake) {...\"\n                        if value_33\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let product_6 := mul(var_amountToRelease, /** @src 24:13823:13825  \"10\" */ 0x0a)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if iszero(or(iszero(var_amountToRelease), eq(/** @src 24:13823:13825  \"10\" */ 0x0a, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_6, var_amountToRelease))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            let r := div(product_6, /** @src 24:13829:13832  \"100\" */ 0x64)\n                            /// @src 24:13866:13898  \"amountToRelease -= penaltyAmount\"\n                            var_amountToRelease := checked_sub_uint256(var_amountToRelease, r)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, _118)\n                            mstore(32, /** @src 24:13929:13937  \"balances\" */ 0x09)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_22 := keccak256(0, 64)\n                            sstore(dataSlot_22, /** @src 24:13929:13960  \"balances[user] -= penaltyAmount\" */ checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:13929:13960  \"balances[user] -= penaltyAmount\" */ dataSlot_22), r))\n                        }\n                        /// @src 24:14056:14085  \"UserSstakeAmounts[stakeIndex]\"\n                        let _119, _120 := storage_array_index_access_address_dyn_37533(value_32)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _121 := sload(_119)\n                        sstore(_119, and(_121, not(shl(shl(3, _120), not(0)))))\n                        /// @src 24:14159:14222  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        let _122 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        /// @src 24:14159:14222  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        log2(_122, sub(abi_encode_uint256_bool_uint256(_122, value_32, value_33, var_amountToRelease), _122), 0xa793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab, _118)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd5c0da2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:1505:1561  \"mapping(address => uint256) public proposalTokenDeposits\" */ 15)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _123 := sload(keccak256(0, 64))\n                        let memPos_28 := mload(64)\n                        mstore(memPos_28, _123)\n                        return(memPos_28, 32)\n                    }\n                    case 0xdf63ba91 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_34 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:20042:20109  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 24:20050:20080  \"_proposalId < proposals.length\" */ lt(value_34, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:20064:20073  \"proposals\" */ 0x07)))\n                        /// @src 24:20148:20170  \"proposals[_proposalId]\"\n                        let _124, _125 := storage_array_index_access_struct_Proposal__dyn(value_34)\n                        /// @src 24:20189:20204  \"proposal.active\"\n                        let _126 := add(_124, 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _127 := sload(/** @src 24:20189:20204  \"proposal.active\" */ _126)\n                        /// @src 24:20181:20234  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_127, 0xff))\n                        /// @src 24:20245:20298  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 24:20253:20272  \"!proposal.isSettled\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _127), 0xff)))\n                        /// @src 24:20328:20339  \"_proposalId\"\n                        fun_deactivateProposal(value_34)\n                        /// @src 24:20413:20433  \"proposal.stakeAmount\"\n                        let _128 := add(_124, 2)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _129 := sload(/** @src 24:20413:20433  \"proposal.stakeAmount\" */ _128)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _130 := sload(/** @src 24:20448:20466  \"proposal.isWagered\" */ _126)\n                        /// @src 24:20444:20833  \"if (proposal.isWagered) {...\"\n                        switch /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(16, _130), 0xff)\n                        case /** @src 24:20444:20833  \"if (proposal.isWagered) {...\" */ 0 {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(_126, or(and(_130, not(65280)), 256))\n                        }\n                        default /// @src 24:20444:20833  \"if (proposal.isWagered) {...\"\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_35 := and(sload(/** @src 24:20571:20588  \"proposal.proposer\" */ _124), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_35)\n                            mstore(32, /** @src 24:20549:20570  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let _131 := sload(keccak256(0, 64))\n                            /// @src 24:20647:20763  \"stakedAmount >...\"\n                            let expr_10 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            /// @src 24:20647:20763  \"stakedAmount >...\"\n                            switch /** @src 24:20647:20693  \"stakedAmount >...\" */ gt(_129, _131)\n                            case /** @src 24:20647:20763  \"stakedAmount >...\" */ 0 {\n                                expr_10 := /** @src 24:20734:20763  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_131, _129)\n                            }\n                            default /// @src 24:20647:20763  \"stakedAmount >...\"\n                            {\n                                expr_10 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                            }\n                            mstore(0, value_35)\n                            mstore(32, /** @src 24:20549:20570  \"proposalTokenDeposits\" */ 0x0f)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            sstore(keccak256(0, 64), expr_10)\n                        }\n                        let _132 := sload(/** @src 24:20865:20885  \"proposal.stakeAmount\" */ _128)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_7 := mul(_132, /** @src 24:20888:20889  \"5\" */ 0x05)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(_132), eq(/** @src 24:20888:20889  \"5\" */ 0x05, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_7, _132))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let r_1 := div(product_7, /** @src 24:20893:20896  \"100\" */ 0x64)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _133 := sub(shl(160, 1), 1)\n                        mstore(0, and(sload(/** @src 24:20947:20964  \"proposal.proposer\" */ _124), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _133))\n                        mstore(32, /** @src 24:20938:20946  \"balances\" */ 0x09)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_23 := keccak256(0, 64)\n                        sstore(dataSlot_23, /** @src 24:20938:20979  \"balances[proposal.proposer] -= punishment\" */ checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:20938:20979  \"balances[proposal.proposer] -= punishment\" */ dataSlot_23), r_1))\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let value_36 := and(sload(/** @src 24:21112:21129  \"proposal.proposer\" */ _124), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _133)\n                        /// @src 24:21041:21165  \"FundsPenalizedForNonCompliance(...\"\n                        let _134 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                        mstore(_134, r_1)\n                        /// @src 24:21041:21165  \"FundsPenalizedForNonCompliance(...\"\n                        log3(_134, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 32, /** @src 24:21041:21165  \"FundsPenalizedForNonCompliance(...\" */ 0xddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368, value_34, value_36)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xe13b7b31 {\n                        if callvalue() { revert(0, 0) }\n                        let param_8, param_9 := abi_decode_uint256t_uint256(calldatasize())\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 24:14372:14391  \"uint totalStake = 0\"\n                        let var_totalStake := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:14430:14451  \"proposals[proposalId]\"\n                        let _135, _136 := storage_array_index_access_struct_Proposal__dyn(param_8)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        mstore(0, param_8)\n                        mstore(0x20, /** @src 24:12221:12236  \"proposalOptions\" */ 0x0d)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let length_3 := sload(keccak256(0, 64))\n                        /// @src 24:14584:14594  \"uint i = 0\"\n                        let var_i_3 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:14579:14692  \"for (uint i = 0; i < optionCount; i++) {...\"\n                        for { }\n                        /** @src 24:14596:14611  \"i < optionCount\" */ lt(var_i_3, length_3)\n                        /// @src 24:14584:14594  \"uint i = 0\"\n                        {\n                            /// @src 24:14613:14616  \"i++\"\n                            var_i_3 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 24:14613:14616  \"i++\" */ var_i_3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 24:14613:14616  \"i++\"\n                        {\n                            /// @src 24:14633:14680  \"totalStake += getOptionVoteCount(proposalId, i)\"\n                            var_totalStake := checked_add_uint256(var_totalStake, /** @src 24:14647:14680  \"getOptionVoteCount(proposalId, i)\" */ fun_getOptionVoteCount(param_8, var_i_3))\n                        }\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let product_8 := mul(var_totalStake, /** @src 24:15023:15025  \"80\" */ 0x50)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(or(iszero(var_totalStake), eq(/** @src 24:15023:15025  \"80\" */ 0x50, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, var_totalStake))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        mstore(0, param_8)\n                        mstore(0x20, /** @src 24:12221:12236  \"proposalOptions\" */ 0x0d)\n                        /// @src 24:15077:15145  \"proposalOptions[proposalId][...\"\n                        let _137, _138 := storage_array_index_access_struct_Option__dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:15077:15145  \"proposalOptions[proposalId][...\" */ param_9)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _139 := sload(/** @src 24:15077:15155  \"proposalOptions[proposalId][...\" */ add(_137, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1))\n                        /// @src 24:15199:15251  \"totalStake -...\"\n                        let expr_11 := checked_sub_uint256(var_totalStake, _139)\n                        /// @src 24:15287:15302  \"proposal.active\"\n                        let _140 := add(_135, 3)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _141 := sload(/** @src 24:15287:15302  \"proposal.active\" */ _140)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if iszero(/** @src 24:15286:15302  \"!proposal.active\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(_141, 0xff)))\n                        {\n                            let memPtr_15 := mload(64)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, 4), 0x20)\n                            mstore(add(memPtr_15, 36), 44)\n                            mstore(add(memPtr_15, 68), \"Proposal must be inactive to set\")\n                            mstore(add(memPtr_15, /** @src 24:15029:15032  \"100\" */ 0x64), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ \"tle rewards.\")\n                            revert(memPtr_15, 132)\n                        }\n                        if iszero(/** @src 24:15393:15412  \"!proposal.isSettled\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _141), 0xff)))\n                        {\n                            let memPtr_16 := mload(64)\n                            mstore(memPtr_16, shl(229, 4594637))\n                            mstore(add(memPtr_16, 4), 0x20)\n                            mstore(add(memPtr_16, 36), 23)\n                            mstore(add(memPtr_16, 68), \"Rewards already settled\")\n                            revert(memPtr_16, /** @src 24:15029:15032  \"100\" */ 0x64)\n                        }\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        if /** @src 24:15461:15491  \"totalVotesForWinningOption > 0\" */ iszero(_139)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        {\n                            let memPtr_17 := mload(64)\n                            mstore(memPtr_17, shl(229, 4594637))\n                            mstore(add(memPtr_17, 4), 0x20)\n                            mstore(add(memPtr_17, 36), 27)\n                            mstore(add(memPtr_17, 68), \"No votes for winning option\")\n                            revert(memPtr_17, /** @src 24:15029:15032  \"100\" */ 0x64)\n                        }\n                        /// @src 24:15613:15626  \"uint256 i = 0\"\n                        let var_i_4 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0\n                        /// @src 24:15594:17125  \"for (...\"\n                        for { }\n                        /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1\n                        /// @src 24:15613:15626  \"uint256 i = 0\"\n                        {\n                            /// @src 24:15703:15706  \"i++\"\n                            var_i_4 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(/** @src 24:15703:15706  \"i++\" */ var_i_4, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 1)\n                        }\n                        /// @src 24:15703:15706  \"i++\"\n                        {\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 24:15645:15669  \"voterAddressesByProposal\" */ 0x13)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_24 := keccak256(0, 64)\n                            /// @src 24:15641:15688  \"i < voterAddressesByProposal[proposalId].length\"\n                            if iszero(lt(var_i_4, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(dataSlot_24)))\n                            /// @src 24:15641:15688  \"i < voterAddressesByProposal[proposalId].length\"\n                            { break }\n                            /// @src 24:15810:15849  \"voterAddressesByProposal[proposalId][i]\"\n                            let _142, _143 := storage_array_index_access_address_dyn(/** @src 24:15810:15846  \"voterAddressesByProposal[proposalId]\" */ dataSlot_24, /** @src 24:15810:15849  \"voterAddressesByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_37 := and(shr(shl(/** @src 24:15287:15302  \"proposal.active\" */ 3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _143), sload(/** @src 24:15810:15849  \"voterAddressesByProposal[proposalId][i]\" */ _142)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 24:15883:15902  \"optionIdsByProposal\" */ 0x14)\n                            /// @src 24:15883:15917  \"optionIdsByProposal[proposalId][i]\"\n                            let _144, _145 := storage_array_index_access_address_dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:15883:15917  \"optionIdsByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_38 := shr(shl(/** @src 24:15287:15302  \"proposal.active\" */ 3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _145), sload(/** @src 24:15883:15917  \"optionIdsByProposal[proposalId][i]\" */ _144))\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, param_8)\n                            mstore(0x20, /** @src 24:15952:15972  \"voteCountsByProposal\" */ 0x15)\n                            /// @src 24:15952:15987  \"voteCountsByProposal[proposalId][i]\"\n                            let _146, _147 := storage_array_index_access_address_dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(0, 64), /** @src 24:15952:15987  \"voteCountsByProposal[proposalId][i]\" */ var_i_4)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let value_39 := shr(shl(/** @src 24:15287:15302  \"proposal.active\" */ 3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _147), sload(/** @src 24:15952:15987  \"voteCountsByProposal[proposalId][i]\" */ _146))\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, value_37)\n                            mstore(0x20, /** @src 24:16030:16046  \"usedVotingRights\" */ 0x10)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            if /** @src 24:16030:16066  \"usedVotingRights[voter] >= voteCount\" */ lt(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(0, 64)), /** @src 24:16030:16066  \"usedVotingRights[voter] >= voteCount\" */ value_39)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            {\n                                let memPtr_18 := mload(64)\n                                mstore(memPtr_18, shl(229, 4594637))\n                                mstore(add(memPtr_18, 4), 0x20)\n                                mstore(add(memPtr_18, 36), 31)\n                                mstore(add(memPtr_18, 68), \"Not enough locked voting rights\")\n                                revert(memPtr_18, /** @src 24:15029:15032  \"100\" */ 0x64)\n                            }\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(0, value_37)\n                            mstore(0x20, /** @src 24:16030:16046  \"usedVotingRights\" */ 0x10)\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            let dataSlot_25 := keccak256(0, 64)\n                            sstore(dataSlot_25, /** @src 24:16150:16186  \"usedVotingRights[voter] -= voteCount\" */ checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:16150:16186  \"usedVotingRights[voter] -= voteCount\" */ dataSlot_25), value_39))\n                            /// @src 24:16203:17114  \"if (optionId == winningOptionId) {...\"\n                            switch /** @src 24:16207:16234  \"optionId == winningOptionId\" */ eq(value_38, param_9)\n                            case /** @src 24:16203:17114  \"if (optionId == winningOptionId) {...\" */ 0 {\n                                /// @src 24:16923:16947  \"voterPunish -= voteCount\"\n                                let expr_12 := checked_sub_uint256(/** @src 24:16776:16859  \"(voteCount * totalStakeExtractFee) /...\" */ checked_div_uint256(/** @src 24:16777:16809  \"voteCount * totalStakeExtractFee\" */ checked_mul_uint256(value_39, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, /** @src 24:15029:15032  \"100\" */ 0x64)), /** @src 24:16776:16859  \"(voteCount * totalStakeExtractFee) /...\" */ expr_11), /** @src 24:16923:16947  \"voterPunish -= voteCount\" */ value_39)\n                                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                mstore(0, value_37)\n                                mstore(0x20, /** @src 24:16966:16974  \"balances\" */ 0x09)\n                                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                let dataSlot_26 := keccak256(0, 64)\n                                sstore(dataSlot_26, /** @src 24:16966:16996  \"balances[voter] -= voterPunish\" */ checked_sub_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:16966:16996  \"balances[voter] -= voterPunish\" */ dataSlot_26), expr_12))\n                                /// @src 24:17042:17098  \"RewardDistributed(voter, proposalId, voterPunish, false)\"\n                                let _148 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                                mstore(_148, param_8)\n                                mstore(add(_148, 0x20), expr_12)\n                                mstore(add(_148, 64), 0)\n                                /// @src 24:17042:17098  \"RewardDistributed(voter, proposalId, voterPunish, false)\"\n                                log2(_148, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96, /** @src 24:17042:17098  \"RewardDistributed(voter, proposalId, voterPunish, false)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_37)\n                            }\n                            default /// @src 24:16203:17114  \"if (optionId == winningOptionId) {...\"\n                            {\n                                /// @src 24:16488:16512  \"voterReward -= voteCount\"\n                                let expr_13 := checked_sub_uint256(/** @src 24:16340:16424  \"(voteCount * totalStakeExtractFee) /...\" */ checked_div_uint256(/** @src 24:16341:16373  \"voteCount * totalStakeExtractFee\" */ checked_mul_uint256(value_39, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ div(product_8, /** @src 24:15029:15032  \"100\" */ 0x64)), /** @src 24:16340:16424  \"(voteCount * totalStakeExtractFee) /...\" */ _139), /** @src 24:16488:16512  \"voterReward -= voteCount\" */ value_39)\n                                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                mstore(0, value_37)\n                                mstore(0x20, /** @src 24:16582:16590  \"balances\" */ 0x09)\n                                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                                let dataSlot_27 := keccak256(0, 64)\n                                sstore(dataSlot_27, /** @src 24:16582:16612  \"balances[voter] += voterReward\" */ checked_add_uint256(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:16582:16612  \"balances[voter] += voterReward\" */ dataSlot_27), expr_13))\n                                /// @src 24:16658:16713  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                let _149 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                                mstore(_149, param_8)\n                                mstore(add(_149, 0x20), expr_13)\n                                mstore(add(_149, 64), 1)\n                                /// @src 24:16658:16713  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                log2(_149, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 96, /** @src 24:16658:16713  \"RewardDistributed(voter, proposalId, voterReward, true)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_37)\n                            }\n                        }\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(_140, or(and(sload(_140), not(65280)), 256))\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                    case 0xe2b239c8 {\n                        if callvalue() { revert(0, 0) }\n                        let param_10, param_11 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_10)\n                        mstore(0x20, /** @src 24:1875:1931  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ 20)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_28 := keccak256(0, 64)\n                        /// @src 24:1875:1931  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        if iszero(lt(param_11, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1875:1931  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ dataSlot_28)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1875:1931  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        let slot_10, offset_14 := storage_array_index_access_address_dyn(dataSlot_28, param_11)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _150 := sload(/** @src 24:1875:1931  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ slot_10)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_29 := mload(64)\n                        mstore(memPos_29, shr(shl(3, offset_14), _150))\n                        return(memPos_29, 0x20)\n                    }\n                    case 0xed4516c9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_40 := calldataload(4)\n                        /// @src 24:872:906  \"uint256[] public UserSstakeAmounts\"\n                        if iszero(lt(value_40, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:872:906  \"uint256[] public UserSstakeAmounts\" */ 6)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:872:906  \"uint256[] public UserSstakeAmounts\"\n                        let slot_11, offset_15 := storage_array_index_access_address_dyn_37533(value_40)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _151 := sload(/** @src 24:872:906  \"uint256[] public UserSstakeAmounts\" */ slot_11)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_30 := mload(64)\n                        mstore(memPos_30, shr(shl(3, offset_15), _151))\n                        return(memPos_30, 32)\n                    }\n                    case 0xeda0b804 {\n                        if callvalue() { revert(0, 0) }\n                        let param_12, param_13 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_12)\n                        mstore(0x20, /** @src 24:1807:1868  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ 19)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_29 := keccak256(0, 64)\n                        /// @src 24:1807:1868  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        if iszero(lt(param_13, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:1807:1868  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ dataSlot_29)))\n                        {\n                            revert(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0)\n                        }\n                        /// @src 24:1807:1868  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        let slot_12, offset_16 := storage_array_index_access_address_dyn(dataSlot_29, param_13)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _152 := sload(/** @src 24:1807:1868  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ slot_12)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let memPos_31 := mload(64)\n                        mstore(memPos_31, and(shr(shl(3, offset_16), _152), sub(shl(160, 1), 1)))\n                        return(memPos_31, 0x20)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let _153 := sub(shl(160, 1), 1)\n                        let _154 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _153)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _154)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _155 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_155, shl(224, 0x1e4fbdf7))\n                            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_155, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 4), 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_155, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n                        }\n                        let _156 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x01)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x01, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ or(and(_156, not(sub(shl(168, 1), 256))), and(shl(8, value0_5), sub(shl(168, 1), 256))))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(shr(8, _156), _153), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _154)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xf496baa0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 24:2002:2077  \"mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal\" */ 22)\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        let dataSlot_30 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_30)\n                        let _157 := sload(keccak256(0, 64))\n                        let memPos_32 := mload(64)\n                        mstore(memPos_32, _157)\n                        return(memPos_32, 32)\n                    }\n                    case 0xfe10226d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret_2 := fun_getCurrentProposalId()\n                        let memPos_33 := mload(64)\n                        mstore(memPos_33, ret_2)\n                        return(memPos_33, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_struct_Proposal__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 24:913:940  \"Proposal[] public proposals\" */ 7)))\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:913:940  \"Proposal[] public proposals\" */ 7)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(75276140696391174450305814049576319106646922510300487059720162673006384432776, mul(index, 5))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_37514(memPtr)\n            {\n                let newFreePtr := add(memPtr, 224)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_37516(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function storage_array_index_access_struct_VoteRecord__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                array := memPtr\n            }\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_string_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_string_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let innerOffset := calldataload(src)\n                    if gt(innerOffset, 0xffffffffffffffff)\n                    {\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                        revert(/** @src -1:-1:-1 */ _4, _4)\n                    }\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function storage_array_index_access_address_dyn_37521(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 24:804:840  \"address[] public UserStakerAddresses\" */ 5)))\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:804:840  \"address[] public UserStakerAddresses\" */ 5)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(1546678032441257452667456735582814959992782782816731922691272282333561699760, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function storage_array_index_access_address_dyn_37533(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 24:5811:5828  \"UserSstakeAmounts\" */ 0x06)))\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:5811:5828  \"UserSstakeAmounts\" */ 0x06)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                slot := add(111414077815863400510004064629973595961579173665589224203503662149373724986687, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function storage_array_index_access_struct_Option__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_string_dyn(length), not(31)))\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                value0 := value\n            }\n            function require_helper_stringliteral_25ad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n            }\n            function array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(value0)\n            {\n                let oldLen := sload(/** @src 24:4551:4560  \"proposals\" */ 0x07)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(/** @src 24:4551:4560  \"proposals\" */ 0x07, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Proposal__dyn(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(value0), sub(shl(160, 1), 1))))\n                let memberSlot := add(slot, _1)\n                let _2 := 32\n                let _3 := mload(add(value0, _2))\n                let newLen := mload(_3)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                }\n                let _4 := extract_byte_array_length(sload(memberSlot))\n                if gt(_4, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _5 := 0\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ memberSlot)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _2)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, _2) { deleteStart := data }\n                    let _6 := add(data, shr(5, add(_4, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _6) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _5)\n                    }\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                srcOffset := _2\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ memberSlot)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ _2)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _2) }\n                    {\n                        sstore(dstPtr, mload(add(_3, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_3, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(memberSlot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    if newLen\n                    {\n                        value := mload(add(_3, srcOffset))\n                    }\n                    sstore(memberSlot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, 2), mload(add(value0, 64)))\n                let memberSlot_1 := add(slot, 3)\n                let _7 := iszero(iszero(mload(add(value0, 96))))\n                let _8 := sload(memberSlot_1)\n                let _9 := and(shl(8, iszero(iszero(mload(add(value0, 128))))), 65280)\n                sstore(memberSlot_1, or(or(_9, or(and(_8, not(16777215)), and(_7, 255))), and(shl(16, iszero(iszero(mload(add(value0, 160))))), 16711680)))\n                sstore(add(slot, 4), mload(add(value0, 192)))\n            }\n            function array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(array, add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Option__dyn(array, oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                let _2 := mload(value0)\n                let newLen := mload(_2)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _3 := extract_byte_array_length(sload(slot))\n                if gt(_3, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _4 := 0\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ slot)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, 0x20) { deleteStart := data }\n                    let _5 := add(data, shr(5, add(_3, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _5) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _4)\n                    }\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(0, slot)\n                    let dstPtr := keccak256(0, srcOffset)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(_2, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, 0x20)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_2, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(_2, srcOffset))\n                    }\n                    sstore(slot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, _1), mload(add(value0, 0x20)))\n            }\n            function abi_encode_array_string_dyn(value, pos) -> end\n            {\n                let pos_1 := pos\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let tail := add(add(pos_1, shl(5, length)), 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail, pos_1), not(31)))\n                    tail := abi_encode_string(mload(srcPtr), tail)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                end := tail\n            }\n            function require_helper_stringliteral_ad61(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"Proposal does not exist.\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 5388 @src 24:12271:12680  \"function getOptionVoteCount(...\"\n            function fun_getOptionVoteCount(var_proposalId, var_optionIndex) -> var\n            {\n                /// @src 24:12406:12473  \"require(proposalId < proposalsLength(), \\\"Proposal does not exist.\\\")\"\n                require_helper_stringliteral_ad61(/** @src 24:12414:12444  \"proposalId < proposalsLength()\" */ lt(var_proposalId, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:12096:12105  \"proposals\" */ 0x07)))\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ var_proposalId)\n                mstore(0x20, /** @src 24:12520:12535  \"proposalOptions\" */ 0x0d)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                if iszero(/** @src 24:12506:12554  \"optionIndex < proposalOptions[proposalId].length\" */ lt(var_optionIndex, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))))\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Option does not exist.\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ var_proposalId)\n                mstore(0x20, /** @src 24:12520:12535  \"proposalOptions\" */ 0x0d)\n                /// @src 24:12622:12662  \"proposalOptions[proposalId][optionIndex]\"\n                let _1, _2 := storage_array_index_access_struct_Option__dyn(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40), /** @src 24:12622:12662  \"proposalOptions[proposalId][optionIndex]\" */ var_optionIndex)\n                /// @src 24:12615:12672  \"return proposalOptions[proposalId][optionIndex].voteCount\"\n                var := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:12622:12672  \"proposalOptions[proposalId][optionIndex].voteCount\" */ add(_1, 1))\n            }\n            /// @ast-id 6064 @src 24:21181:21486  \"function deactivateProposal(uint256 _proposalId) public {...\"\n            function fun_deactivateProposal(var_proposalId)\n            {\n                /// @src 24:21276:21298  \"proposals[_proposalId]\"\n                let _1, _2 := storage_array_index_access_struct_Proposal__dyn(var_proposalId)\n                /// @src 24:21313:21366  \"block.timestamp > proposal.endTime || proposal.active\"\n                let expr := /** @src 24:21313:21347  \"block.timestamp > proposal.endTime\" */ gt(/** @src 24:21313:21328  \"block.timestamp\" */ timestamp(), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:21331:21347  \"proposal.endTime\" */ add(_1, 4)))\n                /// @src 24:21313:21366  \"block.timestamp > proposal.endTime || proposal.active\"\n                if iszero(expr)\n                {\n                    expr := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(sload(/** @src 24:21351:21366  \"proposal.active\" */ add(_1, 3)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                }\n                /// @src 24:21309:21479  \"if (block.timestamp > proposal.endTime || proposal.active) {...\"\n                if expr\n                {\n                    /// @src 24:21383:21398  \"proposal.active\"\n                    let _3 := add(_1, 3)\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    sstore(_3, and(sload(_3), not(255)))\n                    /// @src 24:21426:21467  \"ProposalStatusChanged(_proposalId, false)\"\n                    let _4 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    mstore(_4, var_proposalId)\n                    mstore(add(_4, 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 24:21426:21467  \"ProposalStatusChanged(_proposalId, false)\"\n                    log1(_4, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 64, /** @src 24:21426:21467  \"ProposalStatusChanged(_proposalId, false)\" */ 0x68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f)\n                }\n            }\n            /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n            function array_push_from_address_to_array_address_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_2, not(shl(shiftBits, _1))), shl(shiftBits, and(value0, _1))))\n            }\n            function array_push_from_uint256_to_array_uint256_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                update_storage_value_uint256_to_uint256(slot, offset, value0)\n            }\n            function require_helper_stringliteral_dd70(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Proposal is still active.\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_5ac8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"Funds already settled\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Insufficient balance\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_bool_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 5012 @src 24:8204:8687  \"function getAvailableWithdrawBalance(...\"\n            function fun_getAvailableWithdrawBalance(var_user) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(var_user, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 24:8335:8343  \"balances\" */ 0x09)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))\n                mstore(0x20, /** @src 24:8386:8402  \"usedVotingRights\" */ 0x10)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _3 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40))\n                mstore(0x20, /** @src 24:8447:8468  \"proposalTokenDeposits\" */ 0x0f)\n                /// @src 24:8567:8602  \"lockedForVoting + lockedInProposals\"\n                let expr := checked_add_uint256(_3, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x40)))\n                /// @src 24:8620:8679  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                let expr_1 := /** @src -1:-1:-1 */ _1\n                /// @src 24:8620:8679  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                switch /** @src 24:8620:8646  \"totalBalance > totalLocked\" */ gt(_2, expr)\n                case /** @src 24:8620:8679  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\" */ 0 {\n                    expr_1 := /** @src -1:-1:-1 */ _1\n                }\n                default /// @src 24:8620:8679  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                {\n                    expr_1 := /** @src 24:8649:8675  \"totalBalance - totalLocked\" */ checked_sub_uint256(_2, expr)\n                }\n                /// @src 24:8613:8679  \"return totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                var := expr_1\n            }\n            /// @ast-id 5417 @src 24:12688:13251  \"function getCurrentProposalId() public view returns (uint256) {...\"\n            function fun_getCurrentProposalId() -> var\n            {\n                /// @src 24:12791:12807  \"proposals.length\"\n                let expr := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 24:12791:12800  \"proposals\" */ 0x07)\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let _1 := sload(/** @src 24:12848:12860  \"_proposalIds\" */ 0x03)\n                /// @src 24:12883:13244  \"if (proposalArrayLength == currentCounterValue) {...\"\n                switch /** @src 24:12887:12929  \"proposalArrayLength == currentCounterValue\" */ eq(expr, _1)\n                case /** @src 24:12883:13244  \"if (proposalArrayLength == currentCounterValue) {...\" */ 0 {\n                    /// @src 24:13171:13189  \"return MAX_UINT256\"\n                    var := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ not(0)\n                    /// @src 24:13171:13189  \"return MAX_UINT256\"\n                    leave\n                }\n                default /// @src 24:12883:13244  \"if (proposalArrayLength == currentCounterValue) {...\"\n                {\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    let diff := add(_1, not(0))\n                    if gt(diff, _1)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 24:13031:13061  \"return currentCounterValue - 1\"\n                    var := diff\n                    leave\n                }\n            }\n            /// @ast-id 1416 @src 12:2431:2738  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                if /** @src 12:2558:2576  \"_status == ENTERED\" */ eq(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sload(/** @src 12:2558:2565  \"_status\" */ 0x00), /** @src 12:1755:1756  \"2\" */ 0x02)\n                /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                {\n                    /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    let _1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    mstore(_1, shl(224, 0x3ee5aeb5))\n                    revert(_1, 4)\n                }\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                sstore(/** @src 12:2558:2565  \"_status\" */ 0x00, /** @src 12:1755:1756  \"2\" */ 0x02)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                let value := and(shr(8, sload(/** @src 0:1710:1716  \"_owner\" */ 0x01)), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ value, /** @src 9:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 9:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 36)\n                }\n            }\n            /// @ast-id 1321 @src 11:2002:2130  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 11:2063:2124  \"if (paused()) {...\"\n                if /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ and(sload(/** @src 11:1920:1927  \"_paused\" */ 0x01), /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ 0xff)\n                /// @src 11:2063:2124  \"if (paused()) {...\"\n                {\n                    /// @src 11:2098:2113  \"EnforcedPause()\"\n                    let _1 := /** @src 24:401:21489  \"contract ProposalLogic is IProposalLogic, ReentrancyGuard, Pausable, Ownable {...\" */ mload(64)\n                    /// @src 11:2098:2113  \"EnforcedPause()\"\n                    mstore(_1, shl(224, 0xd93c0665))\n                    revert(_1, 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203bc1c4b424ecadcb942d4ef32547979f8ee35ed9dd7991ef5546fd1298b8d15164736f6c63430008180033\"\n    }\n}\n","hash":"01000627ff36935552232de69dfa29e92fcf54d1de8adf56835dfdfdf42611f5","factoryDependencies":{}}}}}}